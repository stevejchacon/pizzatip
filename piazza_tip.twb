<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='df-clean' inline='true' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df-clean' name='textscan.1jeqen91oayifu19nf6kq0nzenkz'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/stevenchacon/Desktop/projects/pizzatip/_data/df-clean.csv' dataRefreshTime='' directory='/Users/stevenchacon/Desktop/projects/pizzatip/_data' filename='/var/folders/8l/b4fvd6ps1t9_651ysh_n9rcr0000gn/T/tableau-temp/1vltmav1hf1afj18smr8f148lfo7/df-clean.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1jeqen91oayifu19nf6kq0nzenkz' name='df-clean.csv' table='[/Users/stevenchacon/Desktop/projects/pizzatip/_data/df-clean#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:O309:no:A1:O309:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Job' ordinal='1' />
            <column datatype='datetime' name='Clocked In' ordinal='2' />
            <column datatype='datetime' name='Clocked Out' ordinal='3' />
            <column datatype='real' name='Duration' ordinal='4' />
            <column datatype='integer' name='Earnings' ordinal='5' />
            <column datatype='date' name='Date' ordinal='6' />
            <column datatype='datetime' date-parse-format='MM' name='Month' ordinal='7' />
            <column datatype='integer' name='Day' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='boolean' name='Is Holiday' ordinal='10' />
            <column datatype='string' name='Holiday Name' ordinal='11' />
            <column datatype='string' name='Day of Week' ordinal='12' />
            <column datatype='real' name='Hourly Rate' ordinal='13' />
            <column datatype='string' name='Season' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1jeqen91oayifu19nf6kq0nzenkz' name='df-clean.csv' table='[/Users/stevenchacon/Desktop/projects/pizzatip/_data/df-clean#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:O309:no:A1:O309:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Job' ordinal='1' />
            <column datatype='datetime' name='Clocked In' ordinal='2' />
            <column datatype='datetime' name='Clocked Out' ordinal='3' />
            <column datatype='real' name='Duration' ordinal='4' />
            <column datatype='integer' name='Earnings' ordinal='5' />
            <column datatype='date' name='Date' ordinal='6' />
            <column datatype='datetime' date-parse-format='MM' name='Month' ordinal='7' />
            <column datatype='integer' name='Day' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='boolean' name='Is Holiday' ordinal='10' />
            <column datatype='string' name='Holiday Name' ordinal='11' />
            <column datatype='string' name='Day of Week' ordinal='12' />
            <column datatype='real' name='Hourly Rate' ordinal='13' />
            <column datatype='string' name='Season' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O309:no:A1:O309:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Job]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Job</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clocked In</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Clocked In]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Clocked In</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clocked Out</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Clocked Out]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Clocked Out</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Duration</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Earnings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Earnings]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Earnings</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is Holiday</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Is Holiday]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Is Holiday</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Holiday Name]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Holiday Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day of Week</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Day of Week]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Day of Week</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hourly Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hourly Rate]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Hourly Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[df-clean.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Hour' datatype='datetime' name='[Clocked In]' role='dimension' type='ordinal' />
      <column aggregation='Hour' datatype='datetime' name='[Clocked Out]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column aggregation='None' caption='Duration (bin)' datatype='integer' name='[Duration (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Duration]' peg='0' size='1' />
      </column>
      <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
      <column datatype='string' name='[Holiday Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Holiday Name]' new-bin='true'>
          <bin default-name='false' value='&quot;Juneteenth National Independence Day&quot;'>
            <value>&quot;Juneteenth National Independence Day&quot;</value>
            <value>&quot;Juneteenth National Independence Day (Observed)&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Holiday Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Job]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Maciano 2&quot;' value='$4' />
          <alias key='&quot;Macianos&quot;' value='$3' />
        </aliases>
      </column>
      <column datatype='datetime' name='[Month]' role='dimension' type='quantitative'>
        <aliases>
          <alias key='1' value='Jan' />
          <alias key='2' value='Feb' />
          <alias key='3' value='Mar' />
          <alias key='4' value='Apr' />
          <alias key='5' value='May' />
          <alias key='6' value='Jun' />
          <alias key='7' value='Jul' />
          <alias key='8' value='Aug' />
          <alias key='9' value='Sep' />
          <alias key='10' value='Oct' />
          <alias key='11' value='Nov' />
          <alias key='12' value='Dec' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df-clean.csv' datatype='table' name='[__tableau_internal_object_id__].[df-clean.csv_C6B9390E87CA4AD3A7EF7AEC3DC1C42F]' role='measure' type='quantitative' />
      <column-instance column='[Day of Week]' derivation='Attribute' name='[attr:Day of Week:nk]' pivot='key' type='nominal' />
      <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
      <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Day of Week:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Day of Week:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df-clean.csv' id='df-clean.csv_C6B9390E87CA4AD3A7EF7AEC3DC1C42F'>
            <properties context=''>
              <relation connection='textscan.1jeqen91oayifu19nf6kq0nzenkz' name='df-clean.csv' table='[/Users/stevenchacon/Desktop/projects/pizzatip/_data/df-clean#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:O309:no:A1:O309:1' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Job' ordinal='1' />
                  <column datatype='datetime' name='Clocked In' ordinal='2' />
                  <column datatype='datetime' name='Clocked Out' ordinal='3' />
                  <column datatype='real' name='Duration' ordinal='4' />
                  <column datatype='integer' name='Earnings' ordinal='5' />
                  <column datatype='date' name='Date' ordinal='6' />
                  <column datatype='datetime' date-parse-format='MM' name='Month' ordinal='7' />
                  <column datatype='integer' name='Day' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='boolean' name='Is Holiday' ordinal='10' />
                  <column datatype='string' name='Holiday Name' ordinal='11' />
                  <column datatype='string' name='Day of Week' ordinal='12' />
                  <column datatype='real' name='Hourly Rate' ordinal='13' />
                  <column datatype='string' name='Season' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='# Shifts by Season'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Amount of Shifts Worked by Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Duration]' derivation='Count' name='[cnt:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]' scope='rows' value='Count of Shifts' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</cols>
      </table>
      <simple-id uuid='{E247F888-4C2C-4649-B69F-357A5EBE6046}' />
    </worksheet>
    <worksheet name='Amnt Shifts Worked'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Amount of Shifts Worked by Delivery Charge</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Total number of shifts worked pre/post July 2021 (when delivery charge was increased from $3 to $4.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Maciano 2&quot;' value='$4' />
                <alias key='&quot;Macianos&quot;' value='$3' />
              </aliases>
            </column>
            <column-instance column='[Earnings]' derivation='Count' name='[cnt:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job]' derivation='None' name='[none:Job:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Earnings:qk]' scope='rows' value='Count of Shifts' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</cols>
      </table>
      <simple-id uuid='{9FAC49A7-F3B1-4793-A50D-B8902D076354}' />
    </worksheet>
    <worksheet name='Avg Duration by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Shift Duration by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Month]' role='dimension' type='quantitative'>
              <aliases>
                <alias key='1' value='Jan' />
                <alias key='2' value='Feb' />
                <alias key='3' value='Mar' />
                <alias key='4' value='Apr' />
                <alias key='5' value='May' />
                <alias key='6' value='Jun' />
                <alias key='7' value='Jul' />
                <alias key='8' value='Aug' />
                <alias key='9' value='Sep' />
                <alias key='10' value='Oct' />
                <alias key='11' value='Nov' />
                <alias key='12' value='Dec' />
              </aliases>
            </column>
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Month:ok]</cols>
      </table>
      <simple-id uuid='{417B935A-41B4-4154-B27F-BE9C75BC7154}' />
    </worksheet>
    <worksheet name='Avg Duration by Season'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Shift Duration by Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</cols>
      </table>
      <simple-id uuid='{F45C7A1B-5BE7-448E-87D1-4CA0114F77DF}' />
    </worksheet>
    <worksheet name='Avg Duration by Weekday'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Shift Duration by Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</cols>
      </table>
      <simple-id uuid='{8F3404BA-9FCC-4BA9-808E-7C8CED19FAFE}' />
    </worksheet>
    <worksheet name='Avg Duration by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Shift Duration by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{050823C2-7C20-4A1F-98E3-326DF383C8AB}' />
    </worksheet>
    <worksheet name='Avg Earn &amp; Hourly'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Earnings &amp; Average Hourly Rate by Shift Duration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column aggregation='None' caption='Duration (bin)' datatype='integer' name='[Duration (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Duration]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration (bin)]' derivation='None' name='[none:Duration (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk] + [federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk])</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Duration (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Duration (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{3935B23A-7C26-40BC-A196-DE579EB51079}' />
    </worksheet>
    <worksheet name='Avg Earn by Season'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Earnings per Shift by Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]' scope='rows' value='Avg. Shift Earnings' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</cols>
      </table>
      <simple-id uuid='{E5421B94-D6DD-48B4-9718-D344216B37F7}' />
    </worksheet>
    <worksheet name='Avg Earning by Deliv Charge'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Shift Earning by Delivery Charge</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The drivers would receive the delivery charge for each delivery taken. In July 2021, this charge to the customer was increased from $3 to $4. Here, we see the average earnings per shift for each time period (pre/post July 2021). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Maciano 2&quot;' value='$4' />
                <alias key='&quot;Macianos&quot;' value='$3' />
              </aliases>
            </column>
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job]' derivation='None' name='[none:Job:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</cols>
      </table>
      <simple-id uuid='{A4EC386C-B9FC-4D59-8FAA-348056E86D97}' />
    </worksheet>
    <worksheet name='Avg Earning by Weekday'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Earnings (per shift) by Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</cols>
      </table>
      <simple-id uuid='{54A8BD1E-86A1-4039-96C6-D550F4A13757}' />
    </worksheet>
    <worksheet name='Avg Earning by Weekday 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Earnings (per shift) by Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Maciano 2&quot;' value='$4' />
                <alias key='&quot;Macianos&quot;' value='$3' />
              </aliases>
            </column>
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job]' derivation='None' name='[none:Job:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]</rows>
        <cols>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk] / [federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk])</cols>
      </table>
      <simple-id uuid='{8AFEADF0-FBB6-4D67-8C9B-C0075BA2311A}' />
    </worksheet>
    <worksheet name='Avg Earnings by Quarter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg. Shift Earnings by Quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]' scope='rows' value='Hourly Rate' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk] + [federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk])</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[tqr:Date:qk]</cols>
      </table>
      <simple-id uuid='{4B36ACC7-85BE-480C-B79A-4A5DF7B13E90}' />
    </worksheet>
    <worksheet name='Duration vs Earnings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Duration vs Earnings Scatterplot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Earnings]' derivation='None' name='[none:Earnings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Duration:qk]</cols>
      </table>
      <simple-id uuid='{FD4F4F0C-1F7A-4EF5-BA56-E2C6EEE7C6B6}' />
    </worksheet>
    <worksheet name='Duration vs Hr Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Duration vs Hourly Rate Scatterplot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hourly Rate]' derivation='None' name='[none:Hourly Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Hourly Rate:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Duration:qk]</cols>
      </table>
      <simple-id uuid='{445FD97F-EFE8-4938-8C51-150B32006A91}' />
    </worksheet>
    <worksheet name='Earning by Delivery Charge'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Earnings by Delivery Charge
</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The drivers would receive the delivery charge for each delivery taken. In July 2021, this charge to the customer was increased from $3 to $4. Here, we see the total amount of tips earned in each delivery charge time period (pre/post July 2021). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Maciano 2&quot;' value='$4' />
                <alias key='&quot;Macianos&quot;' value='$3' />
              </aliases>
            </column>
            <column-instance column='[Job]' derivation='None' name='[none:Job:nk]' pivot='key' type='nominal' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]' direction='DESC' using='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</cols>
        <show-full-range>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Earnings (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{E6C03244-1ECB-44B5-960C-817196CD800E}' />
    </worksheet>
    <worksheet name='Earning by Weekday'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Earnings by Weekday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</cols>
      </table>
      <simple-id uuid='{B332DE48-48A6-4256-B1EA-3555B07C6D34}' />
    </worksheet>
    <worksheet name='Earnings by Quarter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip Earnings by Quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[tqr:Date:qk]</cols>
      </table>
      <simple-id uuid='{004B9400-F25E-4013-A6F6-F22250F99BE6}' />
    </worksheet>
    <worksheet name='Holiday Avg Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Is Holiday]' role='dimension' type='nominal' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Holiday]' derivation='None' name='[none:Is Holiday:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Is Holiday:nk]</cols>
      </table>
      <simple-id uuid='{D1FD4B91-0985-4131-982B-7446D02FD8B4}' />
    </worksheet>
    <worksheet name='Holiday Avg Earnings'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Is Holiday]' role='dimension' type='nominal' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Holiday]' derivation='None' name='[none:Is Holiday:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Is Holiday:nk]</cols>
      </table>
      <simple-id uuid='{DF60F3CB-4FB2-4BDD-A9A1-089A93CF87E7}' />
    </worksheet>
    <worksheet name='Holiday Avg Hourly Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Is Holiday]' role='dimension' type='nominal' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Holiday]' derivation='None' name='[none:Is Holiday:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Is Holiday:nk]</cols>
      </table>
      <simple-id uuid='{D6BA6DB9-164B-452E-85D4-0291474EADBB}' />
    </worksheet>
    <worksheet name='Holiday Avgs'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Holiday Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Holiday Name]' new-bin='true'>
                <bin default-name='false' value='&quot;Juneteenth National Independence Day&quot;'>
                  <value>&quot;Juneteenth National Independence Day&quot;</value>
                  <value>&quot;Juneteenth National Independence Day (Observed)&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Holiday Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Holiday Name]' derivation='None' name='[none:Holiday Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Holiday Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Holiday Name:nk]' />
              <groupfilter function='member' level='[none:Holiday Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Holiday Name (group)]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Holiday Name:nk]</column>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:qk]' value='C1033%' />
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' value='87' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Holiday Name:nk]' value='340' />
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Holiday Name (group)]' value='288' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Holiday Name (group)]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DD1476E1-BC6F-4890-8AFF-F98052B3554A}' />
    </worksheet>
    <worksheet name='Monthly Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Duration]' derivation='Sum' name='[sum:Duration:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Duration:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Duration:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='116' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[mn:Date:ok]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[mn:Date:ok]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1BAA897D-E3DD-4834-9AAA-5CFC926D6035}' />
    </worksheet>
    <worksheet name='Seasonal Earning Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Seasonal Earnings Boxplot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Earnings]' derivation='None' name='[none:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</cols>
      </table>
      <simple-id uuid='{0CD11CB3-AE86-4E4B-A9D1-DFC2E171415C}' />
    </worksheet>
    <worksheet name='Seasonal Earning Boxplot 3 vs 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Seasonal Earnings Boxplot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Maciano 2&quot;' value='$4' />
                <alias key='&quot;Macianos&quot;' value='$3' />
              </aliases>
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Earnings]' derivation='None' name='[none:Earnings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job]' derivation='None' name='[none:Job:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]</rows>
        <cols>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk] / [federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk])</cols>
      </table>
      <simple-id uuid='{9241F439-0090-4812-86FA-2A02FA1D691D}' />
    </worksheet>
    <worksheet name='Shift Count by Quarter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Shifts Worked by Quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Count' name='[cnt:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[tqr:Date:qk]</cols>
      </table>
      <simple-id uuid='{63E0BCAA-1618-4F03-8034-16DA59C5E340}' />
    </worksheet>
    <worksheet name='Shifts Worked Weekday'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Amount of Shifts Worked by Weekday</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This bar graph displays the number of shifts worked, in total, by the day of the week.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Count' name='[cnt:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]' scope='rows' value='Count of Shifts' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</cols>
      </table>
      <simple-id uuid='{ACDD0E2F-486B-423F-8892-0A3AFEF1D50D}' />
    </worksheet>
    <worksheet name='Shifts Worked, Weekday, DelCharge'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Amount of Shifts Worked by Weekday, by Delivery Charge</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This barchart shows the number of shifts worked by weekday. It further breaks down each day by the Delivery Charge (pre/post July 2021).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Job]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Maciano 2&quot;' value='$4' />
                <alias key='&quot;Macianos&quot;' value='$3' />
              </aliases>
            </column>
            <column-instance column='[Duration]' derivation='Count' name='[cnt:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job]' derivation='None' name='[none:Job:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]' scope='rows' value='Count of Shifts' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[cnt:Duration:qk]</rows>
        <cols>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk] / [federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk])</cols>
      </table>
      <simple-id uuid='{862CF3D0-8326-4169-8FDE-9D2F156CD3E8}' />
    </worksheet>
    <worksheet name='Total Earning Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Earnings Boxplot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column-instance column='[Earnings]' derivation='None' name='[none:Earnings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8AB47713-F97D-4181-B50A-DBAA9E678A4A}' />
    </worksheet>
    <worksheet name='Weekday Earning Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekday Earnings Boxplot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='string' name='[Day of Week]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column-instance column='[Day of Week]' derivation='None' name='[none:Day of Week:nk]' pivot='key' type='nominal' />
            <column-instance column='[Earnings]' derivation='None' name='[none:Earnings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings:qk]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</cols>
      </table>
      <simple-id uuid='{1EF70610-F683-49F1-9E6D-52F8E7121627}' />
    </worksheet>
    <worksheet name='Yearly Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Duration]' derivation='Sum' name='[sum:Duration:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Duration:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Duration:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='116' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[mn:Date:ok]' value='116' />
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F6B6C2D1-F332-44CE-8E5A-8A887DAF17E7}' />
    </worksheet>
    <worksheet name='Yr Qtr Avgs'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' value='147' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok] / [federated.1kcdylb13f87kg16sgfmq1agmq5f].[qr:Date:ok])</rows>
        <cols total='true'>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[qr:Date:ok]</column>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0B36390D-FCF4-41AF-90BE-8706C94C636B}' />
    </worksheet>
    <worksheet name='Yr Qtr Month Avg'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' value='147' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok] / ([federated.1kcdylb13f87kg16sgfmq1agmq5f].[qr:Date:ok] / [federated.1kcdylb13f87kg16sgfmq1agmq5f].[mn:Date:ok]))</rows>
        <cols total='true'>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[qr:Date:ok]</column>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{6508C891-D97A-41A7-9BBC-EBF537CC23A0}' />
    </worksheet>
    <worksheet name='Yr/Month Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='df-clean' name='federated.1kcdylb13f87kg16sgfmq1agmq5f' />
          </datasources>
          <datasource-dependencies datasource='federated.1kcdylb13f87kg16sgfmq1agmq5f'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Duration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Earnings]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hourly Rate]' role='measure' type='quantitative' />
            <column-instance column='[Duration]' derivation='Avg' name='[avg:Duration:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Earnings]' derivation='Avg' name='[avg:Earnings:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hourly Rate]' derivation='Avg' name='[avg:Hourly Rate:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Duration]' derivation='Sum' name='[sum:Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Earnings]' derivation='Sum' name='[sum:Earnings:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[sum:Earnings:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Earnings:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
            <format attr='width' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]' value='80' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Duration:vtavg:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[avg:Hourly Rate:vtavg:qk]' value='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok] / [federated.1kcdylb13f87kg16sgfmq1agmq5f].[mn:Date:ok])</rows>
        <cols>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{34EA9C4C-F71F-4D90-A268-16D36F4284C0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Earnings by Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[tqr:Date:ok]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0ED843A5-064F-4F80-9E1E-69C7B5AB9A87}' />
    </window>
    <window class='worksheet' name='Avg Earnings by Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[tqr:Date:ok]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C14DA208-FBE8-4C0A-BF1E-06CE3FAAFA13}' />
    </window>
    <window class='worksheet' name='Shift Count by Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[tqr:Date:ok]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2F5A328-57E6-4282-81E4-3422E3D057E3}' />
    </window>
    <window class='worksheet' name='Earning by Delivery Charge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Earnings (bin):ok]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00347196-3D4A-48FA-BFAA-9D8824A235EC}' />
    </window>
    <window class='worksheet' name='Avg Earning by Deliv Charge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B358425-6752-430E-8882-87F4D99EA3FC}' />
    </window>
    <window class='worksheet' name='Earning by Weekday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day:qk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A7A0AFD-D25D-4B11-9A1C-FD80C9826540}' />
    </window>
    <window class='worksheet' name='Avg Earning by Weekday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9698AF21-C773-41A4-8BAD-F7E0AAAF0B6A}' />
    </window>
    <window class='worksheet' name='Avg Earning by Weekday 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3ADF2B1-0F18-4495-A694-F624F3465515}' />
    </window>
    <window class='worksheet' name='Amnt Shifts Worked'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39BB1B86-507B-4879-BDC2-AEF0275DF594}' />
    </window>
    <window class='worksheet' name='Shifts Worked Weekday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAADDED3-9650-4D01-8B8D-D24C89EFE34E}' />
    </window>
    <window class='worksheet' name='Shifts Worked, Weekday, DelCharge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FACF1D67-6117-409D-AD4E-68F3F32D1863}' />
    </window>
    <window class='worksheet' name='# Shifts by Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{384FF44F-0FD8-40EC-B231-12D099783221}' />
    </window>
    <window class='worksheet' name='Avg Earn by Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54A93C71-6A06-43E5-90FB-9F857D98C4FA}' />
    </window>
    <window class='worksheet' name='Avg Duration by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Year:ok]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F716281A-153E-4102-9F08-A9F16E185AA2}' />
    </window>
    <window class='worksheet' name='Avg Duration by Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1780724-9D36-4A26-8F94-84E1918F2359}' />
    </window>
    <window class='worksheet' name='Avg Duration by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F2E3E77-F517-40D1-B506-2C995E1B66CF}' />
    </window>
    <window class='worksheet' name='Avg Duration by Weekday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDFCDF0A-1DB6-4DEC-BFAC-B9178B215021}' />
    </window>
    <window class='worksheet' name='Total Earning Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{73BF8E81-9734-46C3-BB41-1CF12BBE0B2F}' />
    </window>
    <window class='worksheet' name='Weekday Earning Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C239A285-C796-4EAD-A49D-5DA5038528BC}' />
    </window>
    <window class='worksheet' name='Seasonal Earning Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6A181DC-9596-4A0B-AB22-B439225DD3BD}' />
    </window>
    <window class='worksheet' name='Seasonal Earning Boxplot 3 vs 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day of Week:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Job:nk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7CD4096-588D-4404-B9A8-645E3AE25C00}' />
    </window>
    <window class='worksheet' name='Duration vs Earnings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{75A8FF1A-1043-47D6-BFFA-3E9F5BEE5EB2}' />
    </window>
    <window class='worksheet' name='Duration vs Hr Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F77A1DD8-FE19-4277-A12D-E4C4D3C09D43}' />
    </window>
    <window class='worksheet' name='Yr Qtr Avgs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FEF293C-D9C5-45FF-803B-ECC5315FF894}' />
    </window>
    <window class='worksheet' name='Yr Qtr Month Avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72D33EEB-DE16-471D-B290-60FB323FBB8A}' />
    </window>
    <window class='worksheet' name='Holiday Avg Earnings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Is Holiday:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E476048D-6B82-4D2F-8053-18316AFB7A52}' />
    </window>
    <window class='worksheet' name='Holiday Avg Hourly Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Is Holiday:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D8BB549-893C-4FE2-93DB-26BA989B1B81}' />
    </window>
    <window class='worksheet' name='Holiday Avg Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Is Holiday:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC601C77-E0B8-40B3-9194-30F484E8194F}' />
    </window>
    <window class='worksheet' maximized='true' name='Holiday Avgs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Holiday Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{458852CF-125B-43B3-900F-81D947D5B26D}' />
    </window>
    <window class='worksheet' name='Avg Earn &amp; Hourly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Duration (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A96BA222-C2B5-4089-A83D-ECAA19B49797}' />
    </window>
    <window class='worksheet' name='Yearly Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Month:qk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88C327FF-A83E-46A0-8249-9FE5D0DDDE21}' />
    </window>
    <window class='worksheet' name='Yr/Month Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Month:qk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{402E9228-3449-4A52-B5C3-46E234373897}' />
    </window>
    <window class='worksheet' name='Monthly Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[none:Month:qk]</field>
            <field>[federated.1kcdylb13f87kg16sgfmq1agmq5f].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26DAE4E8-6200-40A8-A7CD-ABA381F1A8D6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# Shifts by Season' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKZklEQVR4nO3dzW8Tdx7H8fd4bIeQB2M2DoEkhSypIKSEIKCBBgmaKq0qLr0UpN449VKp
      Uq/9ByrOPbTqgUiV2FPVS1eIhVaplEAVQIgEUVS6mwfTBJqHjZ04MfY4swdUa7M9rITIDM73
      85I42GD9vrbnbc/4Ccf3fR8RgxzHcSJhDyESJgUgpikAMU0BiGkKQExTAGKaAhDTFECFKBaL
      ZLNZPM8Le5RNJRr2APL/5XI5Pv/8cyYnJ2lra+Pjjz8mHo+HPdamoAAqwNDQEJ7n8emnn7K0
      tITruoyPj/Po0SOSySSdnZ3MzMzw22+/AbB//36WlpaYnp4mGo3S1dXF48ePefjwIbW1tbz6
      6qt4nsfU1BSrq6skEgkOHDgQ8rUMhwKoAK2trQwMDPDtt99y7tw5FhcXuXDhAv39/Vy8eJFP
      PvmEQqFAOp3m7t27TExMcP36dQ4ePEhtbS2dnZ1cvHiR9vZ2ZmdnefToEZFIhDt37tDc3MzI
      yAhffvll2FczFDoGqAAdHR188cUXuK7LRx99xN27d5mZmSESidDc3Mz9+/dZWFjg559/5vHj
      x8zMzPD6669z584dSqUSs7OzTE9Pc/bsWfr7+7l//z6e53HixAnef/99kslk2FcxNAqgAgwO
      DlIoFDh37hz79u0jkUgQj8dpbGykv7+fQ4cO8c0333Dq1Cn6+vrwfZ/e3l7Onz/P4OAgjuNQ
      U1NDNpslm82SSqVwXRcAx3FCvnbh0i5QBYhEInz11Vfk83n27t1LV1cXH3zwAVevXiUej9PX
      18fRo0e5fPkyyWSSgwcP8t1335FOp2ltbSWVSvHWW2/x2WefUV9fz3vvvUepVCIWixGLxXjj
      jTfCvoqhcfRx6MpQKpXwPI+qqioAfN/H8zwikQiu61IqlSgUClRXV5f/fnV1lXg8TjQaxfd9
      8vk80WiUWCwW5lV5aTiO4ygAMUvfBxDzFICYpgDEtEACWFtbY2lpibW1NeDZAdry8jKZTIZS
      qQTA06dPyWQyrK6uBjGSCBDAy6Ce5/HTTz8xNDTEhx9+SDKZZGpqilu3bpHP52lvb6enp4fL
      ly+XP+j1zjvvUFdXt9GjiWx8AI7jsH//fqanp4Fnj/4TExOcOHGCxsZGLl26xO7du0kkEpw+
      fZrvv/+excVF6urqys8Y8OzTkP99WuRF2PAAXNeloaFh3WvPnueRTCaJRqPU19eTTqfp6OjA
      cRzq6urK71L+sXsEEIvFiER0yCIvVihbVCwWK+/r53I5tm/fzu+//w5APp8vP9L/8U6lNn7Z
      KBu+Va2trZV3XzzPw/d9YrEY09PTpNNpXNeltbWV0dFRcrkcT548KT8DiGy0DX8nOJ1OMzw8
      TLFYBKC3t5e2tjauXbvGwsICZ86coba2lomJCYaGhujq6qKrq2sjRxIB9FEIMU4fhRDzFICY
      pgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGn6bdANcOnaGCv5YmDr
      HdvfzKH2HYGtt5kogA3wj5v/5N9L+cDWS9ZVK4DnpF0gMU0BiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDE
      NAUgpikAMS2UX4ZbWlpifHycUqnEgQMHqKqqYnZ2lnQ6TWNjIy0tLWGMJQYF/gzg+z63b99m
      cXGRbDbL8PAwa2trDA4O4jgOIyMjzM/PBz2WGBXKM0A2m+XMmTO4rsvAwACTk5O0tbVx+PBh
      MpkMq6urf7pMsVjE9/0Qpn0OAY9ZKpUoFArBLrpJhBLAzp07GR4eprq6mlwux/z8fHm3p7q6
      mkjk2RNToVAob/Su65bPf+k5wS4XiTi4rhvsoptE4AE4jsOxY8eYm5vDdV3GxsZoampifHyc
      pqYmVlZWKJVKAMTj8aDHq0iOE1EAzymUh9RMJsPc3By3bt3iyJEj7Nq1i3Q6zdjYGE+ePKGm
      piaMscSgUAIoFAosLCzQ0tJCZ2cnkUiEvr4+lpaW6O3tZfv27WGMJQaFcgyQSqVIpVLrzmto
      aKChoSGMccSwCjmqFNkYCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSA
      mKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSA
      mKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMiwa9oO/7PHjw
      gBs3buA4Dh0dHRw/fpyrV6+STqdJpVL09/ezZcuWoEcTgwIPAGBhYYG3336b5uZmBgYG2Ldv
      H/l8nvPnz3PlyhVmZ2dpbW1ddxnf98MYtUL4un2eU+ABOI5DbW0t165do6amhj179jAxMcGR
      I0dwHIdEIoHrugB4nle+nOd5FXMnBz2n53nk8/lA19wsQtkFymazdHd3k0gkGB0dpbGxkdXV
      VWD9hu44TvlyVVVV606/zIKeMxqNUV1dHeiam0UoB8Fzc3O0tLSwe/duCoUCra2tjIyMUCwW
      mZ2dLf8713XLfypl45fKEsoxwPHjx/nhhx/I5XKcPn2a+vp6Ojo6+Prrr2lvb2fHjh1hjCUG
      hXIMsHPnTs6ePbvu/O7ubrq7u4MeR4zT+wBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpoXwhRuQPF/42TGb5aWDr9R/9K6cP7ymfVgASqgdTc8xn
      VgNbr7t9/bcNtQskpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKa
      AhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpgX+y3C+7/Pjjz+SyWQA
      SCaTnDx5ksnJSUZHR9m7dy+vvfZa0GOJUaH8NGJ3dzelUolcLsfQ0BDFYpGbN2/y5ptvcv36
      dRoaGmhqagpjNDEm8AAcx2Hbtm0A3Lt3j56eHqampujo6CCVSrFt2zY8z/vT5Z4+fYrv+0GP
      +1yCntPziuTz+UDXfGECvks9z1t3W4X247jLy8ssLi7S09PDvXv3aGlpAaCqqgrHcQAoFArl
      jSkWi5XPf9kFPWc0GqWqqirQNV+YgO9S939uq9AC+PXXX2lubmbLli288sorjI2NsWPHDpaX
      l1lbWwMgHo+HNV6FcSrmwSFsDusfoEJ5FWhlZYUHDx5w9OhRABobG1leXubKlSvMz8+Xd5FE
      NloozwDxeJx333133Xn9/f3Mz89TX19PXV1dGGOJQaEEEI1GSSQS687bunUrW7duDWMcE67e
      +hePZrOBrde2cxunu/cEtt7z0v8QY8SNe2lu/zIT2HonD75SEQHonWAxTQGIaQpATFMAYpoC
      ENMUgJimAMQ0BSCmVfQbYTcfTDOXWQlsvV1/qeVQu76nsJlUdAB/v/ELdx4+Dmy9U4d2K4BN
      RrtAYpoCENMUgJimAMQ0BSCm/Qez6hrQJRtyuAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Amnt Shifts Worked' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHY0lEQVR4nO3dQUiU6x7H8Z+aZJqSMCFKRiQulFbqKgkKaWV5qIUcqFULIXFRi7IEwYWe
      S5EgBOVQLYRLnYUbiYsFk9bGTGfloomMbDYjDgaizZRN+d5VLw2jebunmXnn3/ezmnme15n/
      wHf0QdDJcxzHEWBQfrYHANKFuGEWccMs4oZZxA2ziBtmETfMIm6YRdwwi7hhFnHDLOKGWcQN
      s4jbuNXVVU1OTm57XVNTkx48eJCBiTKHuI179+6dLl26lO0xsoK4f1Ozs7Obrn/9+lWLi4sZ
      niY9dmR7AGRWV1eXpqen3fvBYNC9PTg4qMHBwU33chHfuX8j6+vrmp6e1sTEhILBoIqLi9XW
      1ubud3Z2KhgMulFfuHAhW6P+EsT9G3n27JkkqaysTJLU39+vSCTi7u/atcu93dramvQdPhcR
      t3EfPnxwbycSiaS9HTu2PpXGYjHt3r07bXNlAnEbd/36dff20aNHJUlfvnyRJPX19WnPnj2b
      ft3Tp0/V2tqa9vnSKY+/frdnbm5O586dc++Pjo7qwIEDkqT29na9fftW+fn52tjY0IsXL1RQ
      UKCmpqakx8jPz9fMzEwmx/7liNuoR48eaefOnTp27FjK3urqqgKBgE6fPu2uffr0SUVFRXrz
      5o0qKytVUlKSyXHTgrhhFmdumEXcMIu4YRZxfycej2d7BPxCxA2ziBtmETfMIm6YRdwwi7hh
      FnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs
      4oZZxA2ziBtmETfMIm6YlROfQzkyMqKpqSn5/f6k9Xv37iV9tEV3d7cOHjwoSYpGo+rt7ZUk
      5eXlaXh4OHMDwxscD1teXnY6OjqcQCDgdHR0pOxdvXo1ae37a76//fr1a+fy5cvbPl8sFvuH
      E8NLPH0sKSsrk9/vV0tLS8peNBpVQ0PDpl8XCoWS9mpra7WyspK2OeFNno67sLBwy726ujo9
      efJEz58/1/r6um7duuUGvbCwoObm5qTry8vL0zorvCcnztxbOX78uO7fv6+ZmRm9fPlSfX19
      kqSlpSU1NjYmXevz+ZRIJNw3zFb/aH5tbW3L5zv7r//8msEz6N9Xc/uzJP+JnI17dnZWa2tr
      unnzprt2/vx53b59W9XV1YpEIqqoqHD3IpFI0k+C4uLilMeMx+MqLS1N7+AZZu31/AxPH0t+
      JBAI6NSpU0lrhw4d0uLiourr6zU+Pp60F4vFMjkePCBn425ra3OPIZL0+fNnzc3NqbKyUlVV
      VQqHw27QY2NjqqmpydKkyBZPf8jq0NCQQqFQyvq333cHg0HduXNHklRQUKAbN264x42NjQ11
      dnbKcRz5fD4NDAxs+3zxeHzT48o3f/T8/f+8jKwa++vPbI+QNZ6OO9OI25acPZYA2yFumEXc
      MIu4YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs4oZZxA2ziBtmETfMIm6YRdwwi7hh
      FnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs
      4oZZxA2ziBtmETfMIm6YRdwwi7hhFnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZxwyzihlnE
      DbOIG2YRN8wibphF3DCLuGEWccMs4oZZxA2zdmR7gP/FyMiIpqam5Pf7U/a6urqUSCQkSXl5
      eRoeHpYkRaNR9fb2pqzj9+HpuN+/f6+enh61t7dvut/V1aUrV65o3759KXu9vb3um2F+fl7d
      3d26du1aWueFt3j6WFJWVia/36+WlpaUvUQioaKiok3DDoVCamhocO/X1tZqZWUlrbPCezwd
      d2Fh4ZZ7r1690okTJxQOhzU6OqrZ2Vl3b2FhQc3NzUnXl5eXp21OeJOnjyU/Mj8/r8ePH+vk
      yZM6fPiwJicndffuXfn9fi0tLamxsTHpep/Pp0Qi4b5h4vH4po+7traW9tkzydrr+Rk5G/f+
      /ft19uxZHTlyRJJ05swZRaNRLS8vq7q6WpFIRBUVFe71kUgk6SdBcXFxymPG43GVlpamf/gM
      svZ6foanjyU/UldXp4cPHyatVVVV6ePHj6qvr9f4+HjSXiwWy+R48ICcjbukpESrq6uan593
      1yYmJlRdXa2qqiqFw2E36LGxMdXU1GRrVGRJnuM4TraH2MrQ0JBCoVDK+ve/77548aJ7fu7v
      79fevXslSRsbG+rs7JTjOPL5fBoYGNj2+eLx+KbHlW/+6Pn7Z19C1o399We2R8gaT8edacRt
      S84eS4DtEDfMIm6YRdwwi7hhFnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZxwyzihlnEDbOI
      G2YRN8wibphF3DCLuGEWccMs4oZZxA2ziBtmETfMIm6YRdwwi7hhFnHDLOKGWcQNs4gbZhE3
      zCJumEXcMIu4YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs4oZZxA2ziBtmETfMIm6Y
      Rdww67+rW54Hg6vOiAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Duration by Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJ10lEQVR4nO3dy29bWR0H8O+9ju0kTuw4MWkeTuiDKS5QgRooIDRiMUWCVkhdsEAsYMc/
      gGA1rFmyYwNrhLpoV1VV0EylgcUglVFa0joPN0nTZNImjtM4fua+WJS4cW3QuY6f9/f9SFmk
      uSfnKL1fO9c+31zNcRwHRELpnV4AUScxACQaA9BlLMtCKpXC1tYWCoVC1dfS6TRWVlY6tDJv
      6uv0Aqja0dERbt++jXg8jtHRUZRKJYTDYRiGgcXFRYyMjOD58+e4du1ap5fqCQxAl9F1HZcv
      X4ZhGAgGg8jlchgfHwcAZLNZTE5OIhAIdHiV3qHxVSCSjNcAJBoDQKIxACQaA0CiMQAkGgNA
      ojEAJBoDQKIxACQat0K02Z1Pkni4tK107LcSU7j5fqLFK5JNKQCFQgGrq6tIJBJIpVIYHh7G
      9PR0q9fWte59uoJ//PuF0rGXz4/jpx98rfL5VvoQC2s7SmOnYsMNrY/UKQXAsiz09/ejWCwi
      Go0ik8lgcnISjuNA4laiz12cxJFQEKZpVj538/NyHLtqLDWfUgA0TYNpmigWi7AsC8PDw9B1
      uZcPmq6pH6tp6Ovrq/pcfaxeNZaaT+mnOzQ0hESCv4uS98h9GCcCXwUS4ye/vQXDspWO/d0v
      P8BXzn6hxSvqDnwGINEYABKNASDRGAASjQEg0RgAEo0vg1LLmJaN5PO08vFfnhlDwO9r4Ypq
      MQA95M4nSZQMS+nY73/9ix3fTJcrHuHDP32sfPwff/1jjEdDLVxRLQagh9z5+yIO8mWlY9+b
      Hu14AHoBA0Cek9rM4Fd/+KvSsbwIJtGUAlAoFLCwsADTNLG+vo7l5eVWr4uoLVwXYgDA5/PB
      tm2xhRjHdlNqcZpWiHHzk7Zsq2ljG2VZahfsTZ/XVp/XdSFmcHAQ5XKZhRjVY5tYiFEfCfh0
      X1PGWraNWw+eKo/90be/hJGh/jffx+fuZH53zY3y6eovpbIQQ/+XZTv4y0cLysd/96vxSgB6
      gdyHcSIwACQcA0CiMQAkGgNAojEAJBoDQKI1ZTPck/Ud/Plvaq8VR0JB/OZn32vGtESn1pQA
      ZPNl5b+VORYeaMaURE3BX4FINAaARBNbiPn4szV89K81pWMvzoziFz/8RotXRCelDwr4/a1P
      lY//8OfvYyDodz2P2ADsvs4rX7e0u6hNwJFhKf//AIDtYov6SUoBsG0b9+7dw40bN/Dw4UNM
      TEwgHo/Dtu3KhxvdcNMHNz+wmj39gvoAlunu/9ayTow9RR/A7Vjz5LzN7gPs7OwgEokgn8/j
      3LlzWF9fx9TU1Jtv0NfnuhvQDTd90E+zp19QH8CGuxPR53s79jR9AJ/P3bNu38l5m90HmJiY
      QDgchmVZ0DQN58+fF12IIe9QfigeHBxs5TqIOoIP4yQaA0CiMQAkGgNAojEAJBoDQKIxACQa
      A0CiMQAkWsc35ax+vo9/JreUjo2Egrj+nfcqny9tpPHZykulsbHIAH7wzQsNrZG8q+MBWNve
      V/7bkzPj4aoALL/YUx6bmB1jAKgGfwUi0RgAEk0pALZt4+7duwCApaUlPH78uPLvpmk2VIg5
      /jjVWEd9rOO8O6/7UsvxRyOFmMrYBgoxlbHKI9+WS0471jJdllqsE2MbLMQ0MtY8OW8rCzGV
      osR/T9zTFmJONVZTH6tp787LQozKWBZiUF2IOXPmDEzTZCGGPIGFGBKND+MkGgNAojEAJBoD
      QKIxACQaA0CiMQAkGgNAojEAJBoDQKIxACQaA0CiKQWgVCohlUoBAHZ3d7G1pdbhJep2SrtB
      dV3H/v4+isUidnd3EYvFYNs2HMeB4zinukPMqcY2UIh5Oy/vEKMylneIAWAYBnw+HzY3NzEy
      MoLt7W2Mj49Xvs5CjIuxLMQozdtVhZhQKIQrV65UPj++PRJRr+NFMInGAJBoDACJxgCQaAwA
      icYAkGgMAIlWNwDLy8t48OCB63fjiHpN3QCk02lX71gS9aq6ARgaGgJQvXeGyIvqBiAQCCCf
      z/NZgDyvJgClUgnb29vQNI1/AJc8r+YMDwQCePbsWc02XiIvqgmAruu4evUqcrlcZUtqPp/H
      06dPYRgGXr16hc3NzbYvlKgV6m6HDgQCmJ2drZRVBgYGkM1mYZomisUiLMtiIabRsSzEqM3b
      yULM/v4+NE2D3+8HABSLRUQiEbx8+RK6rsOyrKrrAxZiXIxlIUZp3o4WYmZnZzE/Pw/btqHr
      OkKhEC5duuRqQUS9oO5DaDabhaZpfCeYPK/mGcCyLCSTyZqnbiIvqjnDNU1Df38/NE1zdcFG
      1ItqAqDrOq5fv47Xr1/znWDyvLrXAMlkEvPz81hbW2v3eojaqm4AyuUy0uk0DMNo93qI2qru
      Ve7Y2BgODg5w4cKFdq+HqK3+5ztJjuO4fjOCqNfUPAOYpon79+9jaGiIu0HJ82rO8L6+Pty8
      eRMzMzN8GZQ8r+41QCwWQywWa/daiNqOv+OQaAwAiaYUgMPDQ6RSKRQKBWxsbGBvb6/V6yJq
      C+X7AxQKBfj9fjiOg0wmg2g0ykJMI2NZiFGbt5vuEHN8wmezWQSDQQBgIabRsSzEKM3bVXeI
      4StC5FW8CCbRGAASjQEg0RgAEo0BINEYABKNASDRGAASjQEg0RgAEo0BINEYABKNASDRlHaD
      Hh4e4sWLF5iensbOzg4sy0IikWj12ohaTikAx3v2I5EIMpkMdF3nHWIaHctCjNq83VSIAd6c
      /Ht7exgZGYHjOCzENDqWhRilebuqEBMKhRAKhVwtiKgX8CKYRGMASDQGgERjAEg0BoBEYwBI
      NAaARGMASDQGgERjAEg0BoBEYwBINAaARFMKQKlUwqNHjwAAi4uLvEMMeYbSduj+/n6Ew2EA
      QDQaxdbWFu8Q0+hYFmLU5u2mQky5XEYgEEAmk4GmaZiYmGAhptGxLMQozdtVhZhgMIjp6WlX
      CyLqBbwIJtEYABKNASDRGAASjQEg0RgAEo0BINEYABKNASDRGAASjQEg0RgAEk05AMdbTQ3D
      QKlUatmCiNpJaTdoqVTCkydPMDc3h9XVVTiOg4sXL7IP0MhY9gHU5u2mPsDxHvZMJlO5Mwz7
      AA2OZR9Aad6u6wPMzc0BQOUOMUReoHyLpGNuH7GJuhnPZhKNASDRGAASjQEg0RgAEo0BINEY
      ABKNASDRGAASjQEg0RgAEo0BINGUAuA4DnK5HIA3fyq9WCy2dFFE7aK0G3RjYwO2bcMwDKys
      rCAejyMYDLIQ08hYFmLU5u2mQoyu6ygUCsjn8zh79iw2NzcxNTVV9XU3WIhRHctCjKqWFmJm
      ZmZgGAb8fj9s28bY2JirxRF1K+VCjN/vB8BCDHkLz2YSjQEg0f4DpTJNvpG4Bw8AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Duration by Season' width='192'>
      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
      QgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Duration by Weekday' width='192'>
      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
      ZWtCXy2UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Duration by Year' width='192'>
      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
      0f4DGpapaJA3GbcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Earn &amp; Hourly' width='192'>
      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
      uukQVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Earn by Season' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Earning by Deliv Charge' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIUklEQVR4nO3dT0iU7xqH8a9mZP6ryJImrSBc5EKodFMESVALqwMGcqBoEeKEukjCBEEQ
      swOagrscaNEsorNoEy4sEK0gsXTVQqMJLSpNUYop0zCdswhfmjQ90c/xnXuuz2rmfV7tAa+Z
      HozmjguFQiEBBsWv9QaA1ULcMIu4YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs4oZZ
      xG1cMBhUd3f3ivfl5eXpzp07EdhR5BC3ca9fv1ZVVdVab2NNEHeM6uvrW/L63NycRkdHI7yb
      1ZGw1htAZFVUVKi3t9d53t/f7zxuaWlRS0vLkmvRiHfuGPLt2zf19vaqq6tL/f39SkpK0unT
      p531srIy9ff3O1FfunRprbb6jyDuGPLo0SNJUlpamiSpoaFBIyMjzvrGjRudx4WFhWHv8NGI
      uI378uWL83h2djZsLSHh96fSqakppaSkrNq+IoG4jWtqanIeHz16VJL0/ft3SVJdXZ02b968
      5Nc9fPhQhYWFq76/1RTH/3635/nz57pw4YLz/O7du9qzZ48kqbi4WENDQ4qPj9f8/LyePn2q
      devWKS8vL+x7xMfH69mzZ5Hc9j+OuI26f/++NmzYoIKCgkVrwWBQnZ2dKioqcq7NzMwoMTFR
      r1690o4dO5ScnBzJ7a4K4oZZnLlhFnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZxwyzihlnE
      DbOIG2YRN8wibphF3DCLuGEWccMs4oZZxA2ziBtmRcUHYfr9fvX09Mjn8y1aq6iocD5JKS4u
      Tm1tbZKk8fFx1dbWLrqOGBJysYmJiVBpaWmos7MzVFpaumi9vLw89Pbt2yW/9uf7X758Gbpy
      5cqq7RPu5OpjSVpamnw+n44dO7ZobXZ2VomJicrMzFy0Njg4qAMHDjjPs7Oz9enTp1XdK9zH
      1ceS9evX/3btxYsXOnnypN68eaO+vj7t3r1b+fn5kqTh4WEdPnw47P4tW7as+Od9/vz57zYM
      V3F13MsJBAJ68OCBTp06pUOHDqm7u1s3b96Uz+fT2NiYDh48GHZ/enq6ZmdnnRfM169fF33P
      1NTUiOwdkRG1ce/atUvnzp3TkSNHJElnz57V+Pi4JiYmlJWVpZGREWVkZDj3j4yMhP1NkJSU
      FPE9I7JcfeZezr59+9Te3h52zePxaHp6Wjk5Oero6Ahbm5qaiuT24AJRG3dycrKCwaACgYBz
      raurS1lZWfJ4PHrz5o0T9L1797R379612irWiKs/5bW1tVWDg4OLrv/8++7Kykrn/NzQ0KBt
      27ZJkubn51VWVqZQKKT09HRdu3YtMpuGa7g6buBvRO2xBFgJccMs4oZZxA2ziBtmRe2/UGJ1
      /avmv2u9hT927z//DnvOOzfMIm6YRdwwi7hhFnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZx
      wyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs4oZZxA2ziBtmETfMIm6YFRUfp/a7CcJVVVUK
      BoNh1xbuYYIwXB335OSkampqVFxcvOR6MBhccmS2JNXW1jprgUBA1dXVamxsXLW9wn1cfSxZ
      boLwcpggDMnl79zLTRBeEAgElJycLI/H41xjgnBs+vXn5+q4V3LmzBkNDw/rw4cPevLkifLz
      81VSUsIE4Rj1688vquM+fvy48/j8+fPyer0qKSlhgjAkufzM/acSExMliQnCkBTFcbe3t+vx
      48fO89HRUc3MzEgSE4QhyeVDVleaIHz79m0n8JSUFF2/fl3x8T9er0wQ/jsWxoa4Om6sHQtx
      R+2xBFgJccMs4oZZxA2ziBtmETfMIm6YRdwwi7hhFnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4
      YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs4oZZxA2ziBtmETfMIm6YRdwwKyri9vv9
      8nq9v13v6emR1+vVz5+jPz4+Lq/XK6/Xq4sXL0Zim3AZV8c9OTkpr9erzMzMZe/z+/3Kzs4O
      u7YwQdjn8+ny5cuqrq5eza3ChVwd9/8zQbiqqkpNTU1h15ggDMnlcyhXmiA8ODgoj8ejTZs2
      hV1ngnBsMjVBuLW11Zls9jMmCMcmMxOE6+rqVFlZ6bxa5+bmFAwGlZCQwARhSIriuHNzczUw
      MKCBgQFJ0sePH9XZ2amtW7cqJydHt27d0v79+537mSAce6I27qKiorDnQ0NDKioqUlxcnCQ5
      E4STk5OZIByjXB33rxOEF37XvdQ5+1c3btxggnCMY4IwlsQEYcDFiBtmETfMIm6YRdwwi7hh
      FnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4YRZxwyzihlnEDbOIG2YRN8wibphF3DCLuGEWccMs
      4oZZxA2ziBtmETfMIm6YRdwwi7hhFnHDLOKGWa6erLDA7/erp6cnbKLCzMyMqqurNTMz41wr
      Ly9Xbm6upB8ThGtrayVJcXFxamtri+ymseZcHffk5KRqampUXFy8aG12dlbNzc1hE8q8Xq/z
      AliYICxJgUBA1dXVamxsjMzG4QquPpYsN0E4NTX1t0NYmSAMyeXv3CtNEF4wPT2tq1evOhPO
      mCAcm0xNEH7//r3q6+slSQUFBTpx4oQkJgjHKjMThCVp586dzrl6cnLSOXMzQRiSy8/cf2Jh
      cvDY2JhycnLU0dERts4E4dgTtXH7fD5NTEw4z0OhkAYGBpSRkSGPx+NMEJbEBOEY5eohq79O
      EF7g8/k0PT2t5uZmvXv3TtKP32XX19dr+/btkqT5+XkmCP8FC0NWXR031o6FuKP2WAKshLhh
      FnHDLOKGWcQNs4gbZhE3zCJumEXcMIu4Ydb/ALN8nPC0pJh9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Earning by Weekday' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Earning by Weekday 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Earnings by Quarter' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Duration vs Earnings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Duration vs Hr Rate' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Earning by Delivery Charge' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHO0lEQVR4nO3dTUhU+x/H8c9o9mApBW4sgiBaVOLC3LUppDaCl1rIJVqJMKgJuahkQHBR
      FxuQIqVpQIMk6i7atKqF9LDS1IVI5KK02igJQmhK5cPcxZ8Od3S83f43Z8ZP7xcIc87vzOl7
      4M3wYyILJRKJhABDOZkeAFgvxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1b
      xG1uZmZGT58+/e515eXlun//fhomSh/iNvfu3TtduHAh02NkBHH/ogYHB1OeX1pa0uTkZJqn
      WR+bMj0A0uvcuXPq7+8PjoeGhoLX7e3tam9vT7m2EfHJ/Qv58uWL+vv79eTJEw0NDSk/P19V
      VVXBen19vYaGhoKoz58/n6lRfwri/oU8f/5cklRYWChJunz5siYmJoL1bdu2Ba8rKyuTPuE3
      IuI29+nTp+D1wsJC0tqmTWvvSufm5rRjx451mysdiNtcNBoNXh87dkyStLi4KElqbW3Vzp07
      U77v2bNnqqysXPf51lOIf/3uZ2RkRDU1NcHxgwcPtG/fPklSdXW1xsfHlZOTo+XlZb148UK5
      ubkqLy9PukdOTo4GBgbSOfZPR9ymHj9+rC1btuj48eOr1mZmZtTb26vTp08H5z5//qytW7fq
      zZs3Ki4u1vbt29M57rogbthizw1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1b
      xA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1bxA1b
      xA1bxA1bxA1bxA1bxA1bxA1b/N/vP+C3yJ+ZHuGHPfzj90yPkDF8csMWccMWccMWccMWccMW
      ccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWccMWv9oB
      KTn8GousjzsajWpsbCw4bmtr065duyRJU1NTamlpkSSFQiHdunUruC4cDisejwfHPT09Wlxc
      VE1NTZomR6Zlddx3795VRUWFLl68KElaWlpSfX19EG1LS0vw+vXr17p06ZKuXr266j7T09Pq
      6+tTLBZL3/DIuKyO++zZs0nHubm5wevR0VGVlZUFxwcOHNDHjx9T3icSiSR9quPXkNVxr9TS
      0qKTJ09Kkt6+faujR48mrX/brvxdc3OzGhoaFAqFvnv/2dnZnzNoFnF8prWsfNYNEff8/Lya
      mppUXV2tiooKSdKHDx905MiRpOuKioq0sLCgvLw8Sf/bd0tSaWlpynuuVFBQ8LNHzzjHZ1rL
      ymfN+q8Ch4eH1dTUpI6OjiBsSdq7d68mJiaSrp2YmAjClqR4PK6SkhJ1dXWtum9+fv6qH3jJ
      6rgXFxcVi8UUj8e1efPmpLVDhw7p0aNHSefm5uZW3aOxsVHDw8NJ37jg15DVccdiMdXW1qZc
      2717t96/fx8E/fDhQ+3fvz/ltZ2dnYpGo1peXl63WZF9snrPPT4+rpcvX67aVnz7+i8Wi6m+
      vl6JREJFRUW6cuXKmvdqa2tTXV1d0nff8BZKJBKJTA+xUTj8rd2/5fCsWb0tAf4L4oYt4oYt
      4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt
      4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt
      4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oYt4oatDRH3nTt3FA6HV53v
      7u5WOBwOfsbHx4O1ldf39PTo9u3b6z4rssemTA/wT6anpxWJRFRdXZ1ybWxsTPF4PDgXDoeT
      jv9+bV9fn2Kx2LrOi+yS1Z/chYWFisfjqqioWLU2NTWlsrKyf3WfSCSimzdv/uzxkOWy+pM7
      Ly9vzbWDBw/qxo0b2rNnj8rKytTd3Z0y9ubmZjU0NCgUCn33z5udnf1P82Yjx2day8pnzeq4
      v+fEiRO6d++eBgYG9OrVK7W2tiatf9t3l5aWrnrv/Pz8qnMFBQXrMmcmOT7TWlY+64aNe3Bw
      ULOzs+ro6AjO1dXVJe2r4/G4Ojo61NXVpdra2qT35+fnp21WZEZW77n/SW9vr06dOpV0rqSk
      RJOTk0nnGhsbNTw8rLGxsXSOhyywYeOuqqpK2oZ8/fpVIyMjKi4uXnVtZ2enotGolpeX0zgh
      Mi2rtyXXr1/X6OhocPxtDx2Px3X48GGdOXMmOJebm6tr166tea+2tjbV1dWl/KoQnkKJRCKR
      6SE2it8if2Z6hB/28I/f/6/3OTzrht2WAN9D3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF
      3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF3LBF
      3LBF3LBF3LBF3LBF3LBF3LD1F45/y8hrZdyYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Earning by Weekday' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Earnings by Quarter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Holiday Avg Duration' width='179'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Holiday Avg Earnings' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIpElEQVR4nO3dX0hTfRzH8c+ck1wYSQPJ8ibxIutKiyJNilGKhE/dyENEFyGGIwYKOZIG
      EhkawyQv5krpD6HPVWFBUlkZSJB5IVEZqZlR000MQTR06XmuPDxnzi2f0h2/fl5XO+f3O+f8
      xt7Os0VlUBRFAZFAMdFeANFyYdwkFuMmsRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3
      icW4SSzGrTM+nw/Pnz9f0jGh5v/qOXbt2qU+Lisrw5kzZ35p7mrAuHWmo6MDZ8+eXdIxoeYv
      9RwA0NPTg7dv3y75OL1i3KvE9+/ff/scw8PD8Pv9i44/e/YMHR0dC/aPjY0tesy3b99+e13L
      JTbaC6Dwjhw5gpGREXXbZrPh1KlTSzrH7Ows9uzZo9nX3d29YF5RUREmJyfR0tICAGhoaEBj
      Y2PIcwbfopw8eRJ2ux27d+/Gjh07cPPmTQBAc3MzamtrQ15vuTFunRsZGUFnZyfWrVsHAPj6
      9WvIeTk5OYueIzc3F5s2bcKjR4/UuQUFBbh//37Yazc2NsLlcuHAgQMAtEE/efIEiYmJAACX
      y4Xbt2/DbrejuroaDodDnXflyhUcP3488hNdBox7FcjOzobVakV5eTm2bt0acs7Ro0c1283N
      zerj8fFx3LhxQ92+ePEiysrKwl7z48ePAKCGHSw2NhZ2ux0fPnzA9PS0ut9qtQIAnj59CqvV
      CkVRIl5ruTBunevu7kZnZydqa2uRm5uL/Px8XLhwYcG84ID+GzcAGI1G9XFsbOSX3efzLTo2
      MzODgwcPori4GFVVVfjx4wfy8/PV8ZycHJw7dw52ux0xMdH7WMcPlDo3PT2N7Oxs3L17Fzab
      DQ8fPlzyOeLj43H+/Hl1u7KyEhs3bgx7TGZmpnr9YJ2dnQCA4uJiJCQkYHR0VDPucrkwNzeH
      urq6kD+IK4Xv3DqXlZUFAIiLi8PMzAxKSkqWfI7Hjx9j//79mnvmV69ehT3GbDYjPj5evf5/
      zd/fz5/PbDZrxmNiYmAymRAIBJCXl7fk9f4pBv7TDvr36dMnfP78Gfv27VM/WP4fXV1dMBqN
      6rvyr/jy5Qu8Xi/27t2r2R8IBNDe3o68vDwYDIYFx5WWlqK/vx8PHjz43+v9XYyb/qjR0VFc
      u3YN9+7dw4sXL7B+/fqorYX33PRH9ff34927d2hpaYlq2ADfuUkwvnOTWIybxGLcJBbjJrEY
      N4nFuEksxk1iMW4Si3GTWIybxGLcJBbjJrEYN4nFuEksxk1iMW4Si3GTWIybxGLcJBbjJrEY
      N4nFuEksxk1iMW4Si3GTWIybxGLcJBbjJrEYN4nFuEksxk1iMW4Si3GTWIybxGLcJBbjJrEY
      N4nFuEks/vfYFNJfFf9EewlL1nrpb80237lJLMZNYjFuEotxk1iMm8Ri3CQW4yaxGDeJxbhJ
      LN3/CeXly5cxMDCgbldXVyMxMREA4Pf74XQ6AQAGgwENDQ3qvHBjtDboOu47d+7AarWivLwc
      ADA7OwubzQaPxwMAcDqd6uO+vj44HA7U1NREHKO1QddxnzhxQrNtNBrVx729vcjIyFC309LS
      MD4+HnGM1g5dxx3M6XTi8OHDAIDBwUFkZWVpxudvV8KNhTMxMfGHVkrREPz6rYq4p6amUFpa
      isLCQlitVgCAz+dDZmamZp7FYkEgEAg7ZjKZ1HMGS0hIWKZnQCsh+PXTfdw9PT1wu92or69H
      XFycuj8lJQVerxdJSUnqPq/XC5PJFHZsntlsXpknQFGj668Cf/78CbfbDY/HowkbANLT09HW
      1qbZNzk5GXGM1g5dx+12u1FUVBRyLDk5GUNDQ2q0ra2tSE1NjThGa4dBURQl2otYTGlpach7
      4/mv+Obm5mCz2aAoCiwWC6qqqtQ54cYoMgl/E0fXcVP0SIhb17clRL+DcZNYjJvEYtwkFuMm
      sRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMm
      sRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMm
      sRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMm
      sRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3icW4SazYaC/gV9y6dQsvX76Ex+PR7G9q
      akJXV5e67XA4sG3bNgCA3++H0+kEABgMBjQ0NKzcgkkXdB332NgYKioqUFhYGHJsYGBAE/zp
      06fVbafTqT7u6+uDw+FATU3NyiycdEHXtyUbNmyAx+OB1WpdMOb3+5GRkRHyuN7eXs1YWloa
      xsfHl22dpE+6fuc2mUyLjm3fvh1Xr17Fli1bkJGRgaamJjXowcFBZGVlaeYnJiZGvN7ExMTv
      LZiiKvj103XckRw6dAjNzc3o6urC+/fvUVlZCQDw+XzIzMzUzLVYLAgEAuoPzNTU1ILzJSQk
      LPuaafkEv36rNu7Xr19jYmIC9fX16r6SkhK43W6kpKTA6/UiKSlJHfN6vZrfBGazeUXXSytP
      1/fc4bS3t+PYsWOafTt37sTw8DDS09PR1tamGZucnFzJ5ZEOrNq4CwoK1NsQAJiZmcGbN2+w
      efNmJCcnY2hoSA26tbUVqampUVopRYtBURQl2otYTF1dHXp7exfsn/+Kr7u7G9evXwcAGI1G
      uFwu9XZjbm4ONpsNiqLAYrGgqqpq5RYuwF8V/0R7CUvWeulvzbau46bokRD3qr0tIYqEcZNY
      jJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNY
      jJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNYjJvEYtwkFuMmsRg3icW4SSzGTWIxbhKLcZNY
      /wIxqn9gYyFtcQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Holiday Avg Hourly Rate' width='176'>
      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
      sV6RSTIauDMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Holiday Avgs' width='192'>
      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
      IvJd/h8dvkNT4LluFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly Breakdown' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXgUVbr48W93upPuTmffCCQhe1jDErYAARGGRVRUFMfluT6O87jf6+N2
      8fpzFNE4jnfGDUXHcUFEHMARYVglkEhYQiCEEAgQIBvZ907vW9XvD56U5oIziQY62PX5B6h0
      d04V9XadqvOe9yhEURSRybyU0tMNkMk8SQ4AmVeTA0Dm1eQAkHk1OQBkXk0OAJlXkwNA5tXk
      AJB5NTkAvJDL5aKuro7q6mqsVmu/fa4gCOzevZuurq5++8z+IggCpaWl1NbW9tiu8lB7ZB5k
      MBh4++23sVqtqNVqoqOjefzxx9HpdL16v8vlQqW6eOp89913KJVK5syZgyiK5OfnM2LECAID
      A3G73QD4+PhI7xVFEUEQUCqVKBSK/t+5n7Bv3z5WrVrFpEmTePDBB1EqL373ywHghURRxGAw
      8O6776JQKHjuuefYt28fMTExuFwuhg0bxvfff09GRganTp0iJCSEAwcOMGfOHHbs2IHVaiU2
      NpYZM2awbds2lEolra2tzJ49m7FjxxIQEEBFRQWbN28GYN68eQwaNIidO3fS1taGy+Vi5syZ
      jB079qrt86lTp5g/fz65ubm0tLTQ2NhIW1ub3AXydn5+ftx0000YDAZOnz7NiRMncDgc7Nmz
      h87OTg4ePMjKlStJTU0lLCyMjIwMRo4cyebNm6mtrWXEiBGMGDGCqVOn4u/vzz//+U8sFgvL
      ly8nNjaWlJQUXn/9derr69m4cSOZmZmIosiXX3551faxvb2dsrIyRo4cyaBBg2hra0OhULBu
      3To5AGRw4cKFf/nzBx98kBkzZuB2u8nPz+fMmTP4+/sjCAIRERFERkYSFxeHr6+v9B6NRsPs
      2bPJzMxEr9dL3ab4+HhSUlJwOBxXerckbW1tVFRUkJubS3NzM4cPHyY9PR2dTicHgDdraGig
      sLCQwsJCRo4ciUqlwmAwUF9fj8lkkl7n7+8PQFlZGW1tbSxYsIChQ4cCoFQqKS4uprm5GZfL
      Jb3HaDRSUFDAsWPH6Ojo6HEfcLUVFRUxffp0Zs+ezc0330xBQQGiKJKRkYHPsmXLlnmsZTKP
      6L4RLSws5MKFC9x+++2MHj0anU5Hbm4ulZWVhIeHM3nyZFQqFXFxceh0OgICAigsLOTs2bP4
      +/szYcIEwsPDqaqq4tSpU6SkpKBSqRgxYgTjx49nx44dVFVV8dBDDzF48GAUCgWjR49GoVAQ
      GBjIsGHDrsr+lpaWMnPmTIYPH05ycjIAqampJCYmopDnA8i6iaKI1WrFz8/vst/Yoihis9lQ
      q9XSUyAAp9OJ2+3Gz8+vx5Mdm82GKIpotdqr0v6+EgRBDgCZd7vsY1C3240cF32nUCg82teV
      9d1lA6CzsxOj0Xi123LN8/PzIzo62tPNkPWB3AWSeTX5MajMq/UpAERRlPI7ZLJuoijS1NRE
      e3t7j23nzp3j73//Ow0NDdKj1927d3Py5EkEQfBgi3/QpwBoamriySefvFJtkV2jdu/ezf/8
      z/9w8uRJaduWLVs4ePAgc+fOxWg0YrVaeeeddwgJCaG4uJj9+/d7sMU/+NnJcNu3b2fv3r0M
      Hz6c//iP/6C1tZW8vDyamprQarUsWbKEkpISIiIiGDJkCFu3buW2226jpKSEjRs3Eh4ezsMP
      P4woiuzcuZO4uDj27NlDYmIiCxYsQKFQsH37dm699db+3F/ZFZCQkMDdd9+NWq2WthUXF/PM
      M8+g0+kIDQ3lzJkzxMbGkp6ezqhRo3jllVfIysryYKsv+tn3AAaDgXvuuYeCggK+/fZburq6
      WLt2LdHR0eTn53P06FFKS0u5cOECNpuNPXv2IAgCjY2N3HbbbRgMBj766CMcDgefffYZH374
      IT4+Pmzfvp36+nq2bt1KSUlJf+6r7ApJSkq6ZNuRI0d49dVXeeqpp1i9ejXt7e2IoohKpcLX
      1xe73e6Bll7qZ18BOjo62LBhAy0tLdTW1pKens6ECRO45ZZbMBgMPzmO4HA42LRpE9XV1XR2
      dgIQERHB888/z9ChQ/nwww/Jzc3FbrezaNGin9s8mYcNGzaM1157DZvNRnZ2NgkJCfj5+SGK
      4lWdB/Dv9OoK4HA4MBqNlJaWIggCu3btoqSkhP/8z/9kxIgRP/k+Hx8fjEYjFy5cwGAwUFZW
      xvr163nooYeYOnWqNCkhKCiI+Ph4FAoFt9xyCzt37qSyspIhQ4b0z17KrhiXy0VtbS1NTU00
      NDRQW1uL0+kkNTWV/Px8GhoaCAoKIi0tjdraWkpLS9m9ezeZmZmebjrQyytAZ2cn77//PpWV
      ldx7770MHz4co9HIe++9R2NjI5GRkdLJDBdHRBUKBdHR0Xz11VcMGjQIm81GdHQ04eHhrFy5
      EpPJhFqt7vE+gOjoaGJjY0lISCAiIqJ/91bW70RRxGKxEB8fj1KpxGw2IwgCN9xwA8eOHaOs
      rIxFixYRERFBVlYWFy5cwOl0Mm/ePE83HejlQJggCJjNZuBiaqxSqcRkMiEIAiqVCqVSiVqt
      xuFwoNFocDgc0olttVrx8fFBFEX8/f2x2Ww4nU4pmUqr1WK1WtHpdLhcLqqrq/njH//IU089
      9S+vLrKBTxAEBEHAx8dH6va43W4UCsUlX3yeMqBGgh0OB4cPH8ZoNDJ//nxPN0fmBQZUAMhk
      V9tl7wFcLteAGamTya6kywaAIAg9prfJZL9WA+NORCbzkH4LAFEUcTgc8kQamcRqtdLS0iJV
      gBBFEaPRiMFgGDBd7F6PBO/cuZOGhgYARowYwYQJE3o8yrJarXzzzTfcfPPNBAYG9n9LZdeU
      mpoaDh8+jJ+fH/Hx8cTHx7Nv3z6sVitdXV3Ex8czc+ZMTzez9wGwa9cuBg8ezLRp04iKigIu
      DpBZLBZCQkJwOBzs37+f8ePHExYWRmhoKKIo0tXVhV6vlyZTK5VK/Pz8MBgMBAUFYbPZ6Ozs
      xMfHh/DwcJxOJxaLBV9fX9xuN263m6CgIBQKBQaDgZCQkCt2MGT9Jzc3l8mTJ5OUlITT6cTh
      cDB48GDi4uJwuVy8++6711YAKBQKhg4dyuTJk4GLxYb+9re/IYoi0dHRLFiwgJaWFtauXUtH
      Rwd33XUX4eHhvPvuuwwdOhSdTsegQYMICQlh0qRJrFixgieeeILc3FyOHDlCZ2cnd911FwqF
      gq+++orAwEDi4uI4ffo0Tz/9NHa7nb/97W+8/vrrV+xgyPrP3r178fPzo7i4mMmTJ5OYmEhw
      cDA2m43vv//+qpZF/Fd6fQ/gcrnYuHEjTz/9NNu3b2f9+vUoFAoWLVrE3r17qaysRK/Xc++9
      93LDDTfw97//HbfbTXt7O0OGDOGOO+7A4XBI9wndQ+ZjxozhvvvuY+zYsWzbtg2Xy0VLSwsT
      J07k1ltvJTk5mdraWo4fPz5gDprs3wsMDGTs2LEkJyezYcMGLBYLRqORd955B6vVyo033ujp
      JgJ9uAIolUomTpzIddddR1RUFLt378ZoNJKTkyMVRNXpdAQHBxMVFSWlTqhUKu655x4pP+jH
      DAYDn332GQEBAbS1tWGz2QCIiorilltuASA9PZ01a9YQGxvLTTfd1F/7LbvCIiMjiYmJwd/f
      nz179mA2m1m7di0zZswYMIlw0IcrgFKpJCYmhjFjxjBo0CAWL15MWFgYCxYsIDQ0FIfDgcFg
      oKKigq1bt7Jw4ULpfd30ej3l5eVs3bqVM2fOYDAYqKmpYc6cOYSEhEhPkH78nkmTJiEIAm63
      m/j4+H7abdmVNmnSJFavXs3mzZsZOnQoHR0dtLW1UV5ezpo1a9i+fbunmwhw+dKIbrf7ksdU
      ZrOZxMREBg0aBFzM2lQoFOzdu5chQ4aQnp6O1Wqlvr6epKQkFi5cKH3jjxkzBoVCgUaj4cyZ
      M+h0OsaPH8+UKVMIDw/n8OHDJCUlkZCQQFJSEn5+flIinEql4vjx4yQlJTFu3LgrfDhk/SUx
      MZFhw4YRFhZGZmYm4eHhzJo1i7Fjx5Kenk5KSoqnmwj8RC6Qw+EYECPB3ZNnvvvuO/785z8T
      FBTk6SbJfmUGdADIZFeanAoh82pyOrTMq8lXAJlXkwNA5tU8EgBms1muPu0FKisr+frrr2lq
      apK2lZSU8I9//AOLxeLBlv2g1wHwxBNPsGDBAmlBteLiYmbNmsWJEyf6/Ev37dvHrl27+vw+
      2bVj+/bt5OfnM2PGDDo6OnC5XHz00UecO3eO6dOnU1BQ4OkmAn1IhfDx8ZHKXsDF2o9TpkxB
      FEUaGxvZuHEjBoOBu+66i+joaHbu3El6ejrbt2/noYceIi8vj/3793PjjTdKxVTfeOMNRo8e
      zW9+85seS+7Irn1FRUU8+eST+Pv7ExkZSWNjI2FhYSxcuBCNRiNlFHtan7JB09PT2bRpE3Fx
      cRiNRkaOHAnA2bNniYqKIiwsjGeeeYbPP/+cHTt2sGnTJmJjY8nJyWHt2rX8/ve/R6PRIIoi
      BQUFzJs3j08++YSMjAwiIyOv2E7Krr7CwkKys7Ox2+1MnDiRpKQkDh48yJEjR3C5XCxYsIDr
      r7/e083sW2nEzMxM9u7dy759+xg2bJiU6qDX6zlw4AA2m00aQFMoFDz22GOMGzeON998kyVL
      ljBt2jQAqqqquOmmm1i4cCFlZWXyLLJfoe7SiFarlezsbIYOHcp1113HwoULEUWRpUuXDogA
      6NNNsFqtJjQ0lHXr1jFlyhTgYpr03r17GTduHDfffLOUrqBUKqXcncGDB1NbW4vJZJK6ULJf
      t8TERA4dOkRraytBQUGkpKRQVVXFiRMnqK6ultYe9rQ+ZYMqFAoWLFiAyWQiODhY2h4REcG2
      bdvIycnBbrdfkvo8bdo0jh49SnZ29iU3PwOpUKqs/9x44400NDRQXFzMjTfeSFhYGDNnzqSi
      ooKioiLuuOMOTzcR6MNIcGdnJxqNBpVKhdFoJCgoCKvVilqtxu1209XVhUajQRAEgoOD6ezs
      7DF9saurC6vVSkBAAEqlEkEQ0Gq10pRJeXXFX5/uKa1qtVr6onO5XFKZ9IHw5SenQsi8mjwS
      LPNqcmlEmVeTSyPKvJrcBZJ5tauWf+ByuXoslCD7dRMEAavVikKhQKvVIggCTqdT+rlCocDP
      z8+DLbyoTwFQWlpKZWUls2bNIiAg4N++vqamhoMHD7JkyRJ27dol5/x4kT179mAymVAqlSQn
      JxMVFcWxY8eknzc1NXH33Xd7sIUX9boL5Ha7yc/PZ+vWreTm5gJgs9mw2Ww9avqYTCZpUT1/
      f3+GDh0KwOHDh+Ubay+Sm5vLjBkzyMjI4NChQ/j5+TF+/HjGjx+Pw+FAp9N5uolAH64ADQ0N
      nDlzhjvvvJPTp0/jdrvZtm0b586do6qqiuTkZJ588kneeustUlNT2bNnD48++igbNmyQyinK
      vEdiYiJ5eXnYbDZiYmLQarXo9XrMZjNVVVXceeednm4i0IcrgNFoJCEhgaioKIqLi2lpacFu
      tzNy5EhefPFFqqqqpGJXp06d4oEHHsDpdGIwGK5k+2UDlN1ux8/PD71ej9VqlbZXVlYSGho6
      YErc9DoANm3axLFjx/joo49ob2+XFrmOj49n0KBB+Pn50d7ejkqlYsGCBUyaNOmKNVo28NXX
      17Nw4UJuuukmTp8+Lc0A27t3L1OnTh0wqS+96gIJgkBLSwvPPfccWq2WzZs3k5+fj16v59Sp
      UzQ1NdHe3s6YMWPYvHnzgFkCU+Y5KpWKDRs24HK5GDJkCBqNhsrKSrRaLbGxsZ5unqRXAdDe
      3s6ECRMYNmwYcDHTLy8vD4CTJ0/i6+vLCy+8gL+/P+PHjyc8PBxAKosHF4vcyoHhPZYtW0Zz
      czO+vr5S5nBCQgIJCQkebllPv6gy3N///nfS09PlBa1l1yy5NKLMq8l9EplXu+wVQJ4iIPMW
      l70JlvN1ZN5C7gLJvJqcmSbrF+3t7fj4+EgjvGfOnJG60gqFgsGDB1NXVye9XqPRDIglr3p9
      BXj22We59dZbqa2tBS5mhs6fP5+ysrIr1jjZtWHfvn08++yzPcpktre309HRQXl5OevWrcNi
      sdDR0UFHRwfnz5/nq6++8mCLf9DrK4Db7cZut0t1fTZv3kx6ejput5vm5ma2bNmC0Wjktttu
      w2q10tLSwrRp07Barezfv585c+ZcsZ2QeVZwcDB33XVXj/SG7gHQvLw8xo8fT2RkpFQOcdWq
      VQNmxc9eXwEUCgUjR45ky5YtWK1WDAaDVBrx1KlTaLVaQkNDWbp0KXa7nZUrVyKKIqtWreL8
      +fNXbAdknjdq1KjLbne73eTm5nL99ddLD1YuXLiAw+EYMCPCfboJnj59Og0NDezfv5/U1FRp
      p0JCQmhubqaurg6bzcaoUaOIjo7mwIEDnD17dkBMfJBdfTk5OUybNq1H7v+JEydITEy89irD
      Afj6+hIUFMTXX38tXeJcLhd5eXkkJycze/ZsAgMDUSgU3HPPPWRnZ+Pr64ter78ijZd5ntvt
      pq2tjc7OTtrb22ltbcXlctHV1UVxcTEzZsyQXmuxWCgqKiIrK8uDLe6pz6URb7jhBlpbW6Wq
      b0qlktDQUPLy8vj++++l3O9Ro0ahUCgGRAFU2ZXjdrupra1Fr9ejUqmoq6vD6XTS1dXFLbfc
      0mPer8FgYNGiRQNiLnC3XleGa25uxt/fH7VaTUdHB+Hh4ZhMJjQaDU6nk7a2Nvz9/XG73YSG
      hlJXV8eyZctYtmzZgHjcJZNdzhUpjdjV1cV3331HSEgIs2fP7u+Pl8n6jVwbVObVLjsO4Ha7
      5QoOMq/wkwEgzweQeQM5GU7m1eQAkPWLn+o22+123G639G9RFHE4HANmzkmfAsBisXDw4MEr
      1RbZNaq1tZUvvviCc+fO9djudDpZsWIFJSUl0rbm5mZWrFgxYOpF9SkAjEYj33zzDYIgYLfb
      gYuR3x3RDocDm82GxWJBEAREUZQS6OR7il+v/fv343a76ejokLa53W7WrVtHZGQk9fX1wMVv
      /23btlFbWyudP572s+YDtLW18f7777Ns2TKKi4spLi5myZIlZGdno9Vqqamp4amnniI0NJSV
      K1fidDpJS0vj/vvvl0uj/AotWrSIvLy8HjMJS0tL0Wq1REdH097eDlysDxsaGkpiYqKnmnqJ
      n3U2ut1ujEYjcPEyZ7FYEEURURS55557mDlzJl1dXeTn5zN8+HAeeeQRjh49Kl8FvIQgCOTm
      5pKZmYkgCLjdburq6jh27BjXXXedtADLQLgP6NMVwG63/8vxgaioKFJTUzl37hyiKHLhwgWq
      qqqoqKggKipK/vb3EvX19ZhMJj7++GNaW1ux2+2kpqbS2NjIO++8Q3l5OQ6Hg9/97neEhYV5
      tK29CgCTyURHRwe7du1CrVbj6+uL2+2muLiYrVu3EhERccl7FAoFaWlpdHR08F//9V9s3769
      3xsv8zybzUZhYSGHDx/G19cXq9XKhAkT+MMf/gBAQUEBra2tDB8+nBdffBGAFStWsGTJEo+f
      /NDLwlidnZ189NFHKJVKHnjgAYKDg/n000+pqalh6tSpuFwurrvuOnJycli0aBFHjx5Fp9OR
      mprK119/zfHjx0lPT+f222+XrwK/Mj/Vjem+H/jxvOD/+56BUH1Ergwn82ry17HMq8kBIPNq
      cmlEmVeTSyPKvJrcBZJ5tX4rjeh2u+ns7CQkJER+1OmFOjo68PHxITAwEICzZ89KP1MoFCQk
      JNDW1iYlwQUEBDBo0CCPtPXH+nSmtrS08NJLL132ZyaTiT//+c90dXX1S8Nk146CggKeffZZ
      Tp48KW1rbm6mqamJsrIyvvrqKxwOB+vXr6eiooKmpiba2to82OIf9CkAujP+zGYzOTk5ANTW
      1kqLYBuNRmw2G/v370cURVpaWvjmm2/km+pfOY1Gw29/+9se947Tpk1j+vTpBAUFMW7cOFQq
      Ff7+/mRmZjJ9+nSpqqCn/ay+itFo5J///CcA1dXV5OfnSz9zu9188cUXnDlzhsOHD/e4FMp+
      ncaOHXvZ7UajkSNHjjBz5kyMRiNNTU0sX76c9957b8CUy+zTPYDb7ZayPrtn+fz47wBarZZ5
      8+axe/duqqurueOOO+SnSl5q/fr13HDDDQQEBADw3HPPARfPmaVLl/LGG294snlALwPA5XLR
      0NDArl27Lr5JpcLtdlNVVdWj5nu3sWPHsmnTJiIiIkhPT+/fFssGlO7q4C0tLZjNZhoaGggP
      D6ehoQGLxUJKSgoA586d49ixY2RkZFBRUUF0dLSHW35RrwLAarWyatUqfHx8+O///m/Cw8OZ
      MmUKq1evJjQ0lClTpqDRaJg7dy4ajYbQ0FBCQ0MZPXr0gCqDJ+t/drud/fv3097eTnt7Ow6H
      g3nz5uFyuZg7dy5qtRqApKQkurq62LFjB8HBwTz88MMebvlFvS6MZTQa8fX1lU5ol8uF0+lE
      o9H06OK4XC6++eYbtm3bxvvvvz9gqgDLZJfT63uA7n6c9EaVCpXq0reLooharSY7O1s++WUD
      npwLJPNql70COJ1OeT6AzCvIOQsyryYHgMyr9SkABlI5C9nAIYoiTqezx4Co2+3GarVit9t7
      nC+CIGCz2QbMOdSnAMjNzeWtt96iqampXxtht9s5cuQIFoulXz9XdnUcOXKE7OxsDh06JG1b
      u3Ytb775Jm+//TanTp2Sth8/fpzFixfT3NzsiaZeotcBYLfbOXr0KM3NzeTl5QFI5Q+7/w4/
      FD91Op3Sz3+cQvHjbWazGUEQMJlMrF27lra2NnldgmuQTqcjJSWlx2Px8+fP8/zzz3PnnXdS
      UlIinQ/5+flkZGR4sLU99ToA6urqaGpq4u6776aurg6Hw8G6deukleK7a77k5OTw0EMPsXz5
      ch577DGam5t59NFHaWpq4uDBg6xcuZKioiIef/xx3njjDVavXs2WLVuoqKhgxYoVPRLrZNeG
      kSNHMmTIkB7bTCYT1dXVOBwOzp07h81m44svvmDBggWXrSPlKb0eCOvq6mL48OFERUVRXl5O
      Y2PjZV+Xm5vLyy+/THR0NE888cRlX+NyuXA4HGRmZpKVlYXdbuf48eM88cQTlxxI2bVp0aJF
      FBcXExYWhkajoaqqCrfbTVhYGE6nE6vViiAIHp881esA6J7UUFlZicVioaWlBUDq2vyYy+WS
      lksFpPqQ3TIyMoiNjWXNmjVs2rSJpUuXevxAyPpXRkYGGo2GY8eOkZiYSFRUFIMHD6awsJD6
      +npOnjxJZGRkj0W0PaHX2aAAr7zyCnq9nvXr17NlyxZSU1NZtWoVwcHB1NTUAPCb3/yGl156
      ifj4eCkw2tvbee+997BarSQnJ1NVVcW6deukXCK9Xk9UVBQrV65k/vz5A2ohZdm/ZjKZ2LBh
      A0ePHkWlUnHixAluvfVWNm7cSENDA3q9nsWLFxMZGcn8+fMBKC8vZ8KECR4/+aGXleG6H3P5
      +voCFwPC7Xbj4+PD+fPnCQ8Px9/fH41Gw+nTp3E6nRgMBv75z3/y4osvYrPZaG5uZujQoajV
      apRKJW1tbbS1tREfH49Go8HlclFTU0NYWBjBwcFX7wjIfpHuhx7dDy+USiVqtbrHOdJ93nRz
      Op2oVKoBMU+k30sj7tq1i71792Kz2bjrrrsYP378L26kTHal9HsAdA90KBQKtFrtL26gTHYl
      XTYA5HWCZd5CXile5tXkZ48yryYHgMyr9ToA3G43lZWVlJaW4nA4rmSbJAcOHKCwsPCq/C5Z
      /zp37hwrV67ko48+6lEDqLm5mY8//lhaZNHTeh0AH3zwAW+88Qbvv/8+n3/+OSaTCeCSVb//
      b52glStXSkW0uv3Ue378J0BhYeFlV5d0uVzyTfoA9/nnnzN37lzGjBnD7t27pXWBjxw5wpYt
      W6Tzx9N6nQpRUlLCE088wahRo7BarSgUCnJzczly5AgxMTHMnTuXCxcuUFhYiN1uJyYmhtGj
      R3PgwAFCQkJobGzkzjvvZO/evZSVlZGYmMjChQspLCyUBs+Cg4Pp6OggPDycO+64A4CjR4+y
      YsUKRo8eTVZWFmfPniUnJwetVssNN9yAw+GgtraWqqoqpk2bRnJy8hU7WLLe0+v1uN1ufH19
      CQgIQKlUUlpaSmtrKzNmzPB08yS9vgLMnDmTN998k+zsbMxmMx0dHWzbto0ZM2bQ3NxMZWUl
      R48eJSwsjMzMTLZv305ERASDBg0iKSmJmTNncurUKY4dO8bcuXMpKiqis7OTvLw8xowZgyiK
      5OXlMW/ePPbs2UN1dTUAcXFxzJw5k9WrV1NcXMwbb7xBYmIioiiSk5PD2bNnyc7OpqamZkBl
      GXq71NRU1qxZw/r16wkLC8NqtUr/vz9Oi/e0XgfAvffey/Lly9Fqtbz44os0NzdjMBg4ffo0
      ra2tUp9uyJAhTJgwgaCgIHQ6HUFBQURERJCamorD4cBoNFJSUoLVapVKZSckJJCcnExAQACp
      qamoVCrpPiM8PJz09HSmTJmC2WzGZDJRX19PS0uL1LeMiorihRdeICgoqL+Pj+xnOnjwIK+8
      8govvfQSxcXFnD59Gl9fX8rLy6mvr6esrAybzebpZva+C7Rjxw7GjRvHddddR2FhodSPj4mJ
      Yfjw4cTHx1NZWUlHRwelpaUYDAZUKhUhISGUlZXR1NSEj48PTqeTlJQUKbX63zGbzVRWVrJv
      3z7Gjh2L3W4nKCiI8ePHIwgCnZ2dcrdnAFIoFFRXV9PZ2YnD4SAtLY24uDgAgoODGTJkyCU5
      Qp7gs2zZsmW9eWFeXh65ubmcP3+eJUuWMH78eBQKBYcOHaKmpobU1FSqqqo4ePAgFRUVzJ8/
      n6SkJBITEzl27BiFhYXccMMNWCwWCgoKqKurY8KECcDFsnlKpRJ/f3+GDx+O1WolLS0NHx8f
      ampqKCkp4eabbyYrK4thw4Zx+PBhysvLCQoKIjExEb1eT3Jy8oBIrpJdlJKSwsPFWH0AABFO
      SURBVKZNm2hqauK3v/0tERER6PV69Ho9giAwbNiwAZEq0+uR4O6sv+5sv242mw2VSoVSqWT1
      6tWkpaUxbtw4NBqN9Jruq4Wvry8KhQKr1Yqvry8+Pj7/9nd2zyX48bdF9/Q6ue6o7Jfqt1QI
      URQ5efIkISEh8qwu2TVDLo0o82pyaUSZV5NzgWReTQ4AmVeTA0Dm1Xo9EGYymdixYwdFRUWM
      Hj2ahQsXXnbk9eTJkz+5BKbNZuO1115j6dKl8uIZvyIlJSVs2rSJOXPmMHXqVAD27t3LP/7x
      DwICAhg7diyLFi1i586dHDp0CKPRyOOPPz4gBjB7fQXYvHkzx48fZ8GCBZw7d46//vWv0s+s
      VitOpxO4WD/ox1wuF+3t7T22OZ3OHsPggiDQ1dXVI4tUdu0QBIH4+PgepRG7urpYunQpr776
      KrfffjvNzc10dnby//7f/+PZZ59l27ZtHmzxD3p9BSgoKOCRRx5h+PDhZGRk8Morr2A2m3nl
      lVdQqVRotVqysrIoKyvjhRdeYMmSJZw/f57du3ejVquJiYnhkUceAeBPf/oTNpuNuLg47r//
      fp5++mmio6NpbW1l+fLlrFu3juPHjxMTE8P9998vDaHLBqZx48ZJeV3dqqurCQ4Opq6ujri4
      OJqamtDr9fj5+TFkyJABUxy31wHg5+dHeHg4AP7+/qhUKilX/49//KOUhvDdd9/x6quv4nK5
      +OSTT7jvvvtIS0vj5Zdflr7hX3jhBVwuF3/605/4/vvvCQwM5MEHH+TDDz8kNzcXl8tFWFgY
      Dz/8cK/yhWQDz6JFi7BarZw7d46ysjKGDRuGQqEYcOkqfboJLi4uRhRFysrKpG6PUqm8ZKe6
      J6s4HA6pMNJPpS10F83KyckhLi6OuLg4lEplr5PlZAOT0+kkOTmZqVOnYjKZCA8Px2AwYLVa
      qaurIzIy0tNNBPpwBbj11ltZu3Ytx48f5+zZs8yfP59x48bx7bff8pe//AWtVsujjz6Kw+Hg
      z3/+MzfffDOZmZl8+eWXBAUFSRXhAFasWEF7ezsjRowgKyuLbdu20dHRgdvtlmYODbRvCtnl
      mc1mNm3aRFFRESqVirNnz3LjjTdy4MABNm3ahMvlYuLEiSQkJFBbW8sHH3yAyWTivvvu83TT
      gT4UxnK73RgMBs6dO0d8fDyhoaGoVCqMRiNtbW1otVqioqLo6uqipqaGmJgYdDod9fX1dHZ2
      kpqailarxWw209nZiSiKREVF4evrS0dHB+3t7QQEBBAQEIAoinJhrWtE9/oO3d1bHx8f/P39
      pfUfuv/t4+OD2+3GaDRK2wZCQeR+rwwnk11LPB+CMpkHXfYewMfHR+6Dy7yCXBpR5tXkLpDM
      q8kBIPNqvR4HaGpqws/Pj6CgIBQKBS0tLVekDo/dbic/P585c+b0+2fLrgxBECgoKCAmJkZK
      W6mtrWXPnj3o9XpmzZpFSEgIBw8elNYMHjx4sLRkkif1+grw/vvv8+yzz0o5HJ988on0s96s
      J+B0Oi+ZaikIglQgqftPh8PBtm3bLimcJIqi/Gh2gPrss8/YuHEjtbW10ratW7cSHR2Nn58f
      Bw8eRBAE9u/fz8iRI8nMzGTEiBEebPEPen0FMJvNtLW1sW/fPhYvXixleB46dIijR4+i0WiY
      Pn06VqsVk8lEZmYm5eXlaLVampubOXjwIFFRUdICeLt375aqTCiVShwOB5MnTyY+Ph6DwcCn
      n36KRqMhMzOT6Ohovv76a0wmExkZGYwfP56cnByplMr06dOvzNGR9coDDzwg/X90O3/+PA89
      9BBWq5VPPvmEjo4OQkNDiY6OZvDgwT0yRz2pT/cAN998MwcOHJCWQHU4HPzjH/9g4sSJxMbG
      snnzZrRaLTt27MDpdPLBBx9w4cIFPvvsM0aMGIHVaqW4uJiamhoaGxtJS0tj//79xMXF0dHR
      wdq1a4GLiXcTJ07E5XKxa9cucnJyOHnyJKNGjWLFihWcPn2a119/nU8++USuQDHAabVaTCYT
      giAwdOhQDh8+zP/+7/9y7NgxTzcN6GMAREVFkZqayoYNG4CL/bzOzk4mTJhARkYGNTU16PV6
      GhoaOHv2LKIoMnbsWNrb22lsbKS5uVk6GPHx8WRkZBAdHc3w4cMZNmyYNEdAo9EwZswY5syZ
      g81mkxbdq6qqQq/XYzAY0Ol0/OEPfyAhIaH/j4qs31gsFoKCgvD392f27NksXryY5557Tvqy
      87Q+X4cWLFjAa6+9hsViISIiAp1OR2dnp3SJCw0NZeLEiaxfv57o6Gj8/f0RRZGwsDDS0tKI
      jo7mwoUL//J3dOcdFRQU4OvrS1JSEpWVlYwYMYL4+HhiYmKIjIwkNDT0Z++4rH8IgoDFYpEq
      hptMJnQ6HbGxsRw6dAhBEBg0aBC1tbWUl5czffp0zp49O2DquPa6NGJXVxdJSUkkJycTGBiI
      Wq0mKysLk8nEl19+SWlpKfPnzychIQFBECguLuaxxx6TJkHs27eP8vJyYmNjCQ8PR6PREB0d
      jdlsJiUlBVEU0Wg0jBgxgpqaGrZv347NZmPJkiVMnDiR4uJijh07RkNDA6mpqfj4+JCeni4n
      zHmY2Wxm/fr1nDt3jtraWqqrq0lMTCQ1NZWcnBxMJhOLFi0iKiqK1tZWvv76awwGAw8++OCA
      qA36i0eCRVHEZDKhVqulcojdUx4DAgKk19lsNpRKZa92WhRF7HY7arVaKp/YvfyqVquV0zRk
      /UZOhZB5tcveA8gxIfMWcmlEmVeTc4FkXk0OAJlXkwNA5tV6PRC2c+dO6uvrGTx4MLGxsSQn
      J/f7c9zz589TUFDAPffc06+fK7uyTp06xaZNm7juuuuYMmUKcLHyR1NTEy6Xi+nTpzNr1ixp
      vEAURW655RYmTZrk4Zb3IQC+++47AgMD0ev1fPrpp/zud79jxIgRCIKA2WzuMcvf6XTidrul
      cQGz2YxKpepRG8hsNqPValEqlXR1dREYGIggCLhcLux2OyqVShoDcLlcGI1GgoOD5TGAAair
      q4vIyMgeyXB33nknkZGRtLS0sHXrViorKwkKCuLll19GEASWL19+bQWAUqlk1KhR3Hbbbfj5
      +bFy5UpeeOEF3njjDbRaLe3t7bz11lsUFRWxZs0awsPDmTdvnpT1WVNTw6uvvsqZM2dYs2YN
      sbGxVFRUEB8fj9VqZfr06dKq4uXl5bS0tPDkk0/idrv58ssvUSgUqNVqnnvuObKzs0lKSqKm
      poaXXnrpSh4fWS9MnjxZSpDs5uvrS3FxMXv27GHixImkpaWxd+9edu7cSVlZGbfddpuHWttT
      n+8BFAoFcXFxCILA999/T3BwMI888ggajYbjx4+zdetWli5dyvLly9HpdJw5c4ZHHnmEadOm
      sWbNGpxOJ0OHDiU7O5ugoCDuv/9+HnzwQWld4FmzZvHqq68ydepUSktLKS0tZeLEiTzyyCOY
      zWZsNhtms5nIyEieffbZfj8gsv5hsVioqKggOjpaSoYMDQ3Fx8eHUaNGSWs8e1qfA8DpdFJQ
      UEBkZCSCIFBVVcWOHTtISkqSaj+GhISgUChwOp2YzWZ27NgBXFw6E36o+qZUKi/JC//xZbT7
      70VFRezcuZPk5GRsNhtqtZoFCxag0+l+3l7LrjitVsvixYtZtGgRJ0+epKamBqfTyW9+8xtm
      z55NSUmJp5sI9KEL5Ha7yc/Pp6KigubmZp5++mna2trIycmR+uw6nY6xY8fyxz/+kbi4OEaP
      Hk1cXJxU7rA3uuvHnz9/nocffpimpiaOHTuG3W5Ho9FI6woMhKpisovf9Nu2bePIkSOo1Wqq
      q6uZN28eGzduxGq1IggCKSkpJCcnc+bMGT744ANEURwwk5h6XRmura1N6qZotVopnbWlpYWm
      piYCAwOJjIzEx8eH2tpaLBYLCQkJOBwOmpubUSqVhIWFodFosNvthISE0NraSlBQkDQV0tfX
      l5aWFtra2oiMjCQ8PBxRFGltbaWpqYnw8HAGDx5MZ2ennAo9QLjdbjo6OqT1IdRqNcHBwZjN
      ZiwWC0qlkuDgYPz8/LBYLHR1daFQKAgPD/+360RfDXJpRJlXk/sRMq922XsAq9WKxWK52m2R
      ya66y3aBugeyZLJfO3lCjMyryfcAMq/Wp6oQLpeL6upqlEolsbGxv7i40YEDB4iMjJQGuNra
      2npUmOteQaYvWltbKSoq4vrrr0etVv+i9sl6KikpQRAExo0b12N7Xl4eDQ0NAMTFxTFt2jTg
      YpnLTZs2kZGRQVJSEqWlpZw8eRJRFJk/fz4hISFXfR/+r16fwdXV1bz33nu0t7ejUCi4/vrr
      ufvuuy95nSiKiKLYY6Cqe1v3SHF3r2vLli1kZGSQnJxMdXU1H374Ia2trahUKtRqNS+88AJx
      cXG43W5pMb76+npWrVrF888/L32+IAjSZ9fX17NmzRqysrLkAOgnTqeTb7/9lm+++YZJkyZd
      EgCbN29m2rRpBAYGSoUQ3G43n3zyCSdOnMDX1xeNRsOnn35KVlYWZ8+e5e233+bll1/2xO70
      0OsAWLVqFePHj+fOO+9EqVRiNBppbGyktLQUjUZDSEgIOp2OI0eO4HA4yMrKQq/XU1hYiMFg
      wO12M336dIYOHcrmzZtxOBzU1dWRkZEBQFpaGm+99RYffPABw4YNY9asWbhcLoqKiigqKiIs
      LIxp06Zx4MABDh48yNdff01mZiZHjhzBaDSi1WqZPHnyFTtQ3i4jI4MJEybw7bff9tjefcVO
      SkoiKiqK6OhoAE6fPk1dXR3z5s1DFEUiIyN5/fXX8fX1JT8//5LP8ZRe3wM0NjYyZcoUioqK
      eP7559mwYQPnz5/n7bffJicnB51Oh06nIyoqioaGBt58803q6+v561//Snx8PKWlpaxbt46t
      W7eyZcsW4uLi/m1Nn/b2dlavXk18fDwVFRXk5OQQEhKCr68vsbGxaDQadDodMTExVFRUcOLE
      iV98QGSXUqvVJCYmXnapW6fTiVar5a233uLFF1/kiy++QBRFPv/8c2bMmIFSqUQQBFQqFQqF
      gvXr1/Ppp59etvfgCb2+ArhcLkwmE0OGDJEyP9PS0ggNDZUWwS4oKODAgQO0t7dTUVEBXDx4
      kydPprq6muPHj3PkyBHuueceJk+ezObNm//l73Q4HCQmJjJ37lzg4qX2qaeeQq/XM3nyZARB
      oLa2lpqaGlpbWxk1atQvOBSyn8PPz4/s7GwATCYTr7zyCrW1tZw9e5bQ0FBqampwu93Mnj2b
      v/71rygUCv7yl78QFhbm4ZZf1OsrQHp6Ojk5OQQGBkqV2QDpJtVms/H5558zYcIEFi9e/JPf
      7t0rzDscjn871qBQKGhsbKSjo4POzk5iYmLw9fVFpVLhcDhwOp0UFhby+9//nhtvvLG3uyLr
      I4fDwYkTJzh58iTNzc2UlpbidDr5+OOPOX/+PK+//jr79+/n448/Rq1W4+/vzzPPPENWVhap
      qamkpKRQVVXFd999R3x8PEVFRRw6dMjTuwX0oTRiSkoKJSUlbNy4kebmZkaPHk1aWhoul4uM
      jAypxPmOHTuora0lNjaWyZMnYzabmTx5stRPv/fee9m1axdbt25Fp9MxceLEHhWeDQYD0dHR
      RERE4OfnR3t7O59++iltbW3cf//9xMXF0dbWxmeffcbQoUMpKytj//791NfXM2XKFEJCQrBa
      rWRkZAyYEtzXuq6uLtauXUt5eTkKhYLq6mosFgulpaXcfvvtWCwWcnJyAHjxxRfR6XTExcVJ
      3dy4uDiCgoJoaWmhsbGR6upqTCYTEydO9PCe/YyBMIvFgkqluuzjye5uUnBw8L/8DLvdjsvl
      QqfT/dspjqIo0tHRgV6vl36nKIp0dXXh7++Py+VCEAS5ZOJVJIoiJ0+eJDQ0lMGDB3u6Ob/I
      /wdUabIPmKVzWwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Seasonal Earning Boxplot' width='192'>
      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
      Evof7oUj8iBGicoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Seasonal Earning Boxplot 3 vs 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Shift Count by Quarter' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASCUlEQVR4nO3deXCUZZ4H8O/bZ9LdSXfnaJIOgQRCDszBTbgCAyqK5YVGvFBxa3drrJ0S
      R8u1psqjtqx11xlndmYdXZ0Z1vVAxlFBhllBYSIBQshJQyQHuUnnIEfT6Sud7n7f/QNlVonQ
      Obrf6/f5z1T6fX+F/c37Pu/z/N6H4TiOAyEypeC7AEL4NKUAcByHUCg007UQEnVMOLdALMui
      qqoKCQkJAIDs7OyIF0ZINIR1BWAYBmazGQDg8XgiWhAh0aQK55cCgQA4jkN8fDxozEykJKxb
      IEKkip4CEVmjABBZowAQWaMAEFmjABBZk3QAHC4f/uuzGvj8Ab5LIQIl6QB8Ud0OlVKBF3d9
      BfvgKN/lEAGSbAACwRDqz/fh0VuK8PS2VXh9bzVOnbPzXRYRGMkGoKH9IhZmJEOtUmJWggEv
      PrYex850YfeXZ2k2m1wh2QAcrm3HTcvmXfnvGI0KT29bhRitCq+8f5zGBQSARAMw7PTC5w8i
      NTHuOz9nGAZbS/KwZdUCvPCHMtiHXDxVSIQirACwLAubzYbBwUE0NzdHuqZpKzvd+Z2//t+3
      KCsFzz64Br/5+BQqz/VEsTIiNGGtBv1WX18f9Ho9OI4Dy7KCvJcOhljUNPXi1kfWIRgM/uDv
      mQ1avPRYCX67rwbnLwzh/o03gGGYKFZKhCCsAASDQWi1WigUCjidTjAMA6VSGenapqSxewA5
      6UnQx2qv+7sqFfD0tlXYd6wJP99TiSdLV0Ifo4lClUQoJLcc+rU9Fdi2KR+zk+Mn9Tlbaz92
      Hz6Ln2xdidmWyX2WiNekboGEzuHyweUbn/SXHwCKslKQmhiHX310ErevycHq/PQIVEiERlJX
      gL3HmpBs1GFt4ZwpH2M8EMIb+6qRGB+LB28qgFIhyQdl5BuS+b8bDLGobrRjSXbqtI6jUSvx
      5L0rEafX4pX3j8PjG5+hCokQSSYA53uGMc9qhi5GPe1jMQyDu9bm4s61OXjpnaPoHnDOQIVE
      iCQTgIOnWrFp6Q8/+5+Kgnmz8OwDq/HmZzWoaLgwo8cmwiCJADg9Y7jk9iMz1TTjx0426fEv
      j29AVaMd7x60IRhiZ/wchD+SCMDR013YsDgjYsdXq5TYWVoMU1wM/n33Cbi8/oidi0SX6AMQ
      YllUnuvBijxrxM91x5oc3L46Gy+/ewwdfY6In49EnujnAVp7RpCRYoraDG7h/FlITTTg1x+f
      wuYV87GucG5UzksiQ/RXgEPVbdi4JDOq50w26fHCY+tx+nw/3vn8NI0LREzUAfD4xjHs9CIr
      LSHq59aolPjJPSthMevxbx8ch9M9FvUayPSJeib4LyfPQ61S4Obl83mto6HjIt49ZENOehKM
      ei0yU02I12sx35oAhYJWmAqZaAPAshxe2FWG5x5aC0Ms/ys4WZZDW+8InB4/uvovwenxo6PX
      gWCIBaNgkBgfC2tSPNKS4pBo1CHdEo943fVXrJLIEm0A2uwjOFTdhifuWs53KWEZvORB/4gH
      PYNOjIz60NF3CZ6xABTM5XbNzFQzjHot5qaYkBgfi7QpLOgjkxd2AGw2GxISEuDz+QSxQcYb
      e6uxcWkmcuck8V3KtPn8AbT3OuBwj6Hn4iiGnF70DbsRYlmolAqkW+JhMsQiK82M1MQ4WJPi
      rn9QEpawHoM6nU5cvHgRFosFHo+H944wnz+I3mEXsqyma3Z9iYVaySAn/ZuB/PfmM1iOg33I
      Dafbj7ZeBz4tb8Ijmwsw32rmoVLpCfsK4HQ6wXEcBgYGkJOTE+m6rulgVStYlsOW4gW81sGH
      /hE3Xv+0Ci/t2ACVUtQP8QQh7H9Bo9EIk8nE+5efZTlUnL2AddNY8y9mKQkGLMux4svqNr5L
      kQTR/QnpvuhEskmPOBk/QdlSvADHznRjyOnluxTRE10Avqhqw4+WZPBdBq80aiW2by7C+1+c
      EeSbOcREVAHwjwfROXAJ+ZkWvkvhXd7cJCgVCtS29PFdiqiJKgDlZ7pRnDeb7zIEY8eWRdhb
      3oTxAG1aPlWiCQDHcahouID1i2n15bcMsRpsXJKB3YfP8l2KaIkmABcujiJep4FRH8N3KYKy
      aek89A65qG95ikQTgMM17VFf9iwW2zcX4vcH6mhZ9hSIIgD+QBCt9hEUZaXwXYogpVuMWJiZ
      jHJbF9+liI4oAlDR0IOlOZFveRSzu9fm4lBVKxwuH9+liIrgA8BxHE6c7cZGmT/7vx6tRoUH
      byzAh4cb+C5FVAQfAPugCzEaFcxxsXyXInhFWSkYGw/ibPsA36WIhuADUFbfQYPfSXh8y2Ls
      OdKAQJDmBsIh6ACMB0Jo7BrC4gU0+A2XKS4G6wrn4tPyRr5LEYWwAzA6OopQKISenuhtKVTV
      aEdRVgrt3DJJNy+fj8auIfQN0x5o1xNWQwzHcaiurkZmZiZCoVDUGmKO2jrx97ctlkTTS7Q9
      eGM+fn+gDs89uJr+gFxDWAFwuVwwm80IBoMYGhrCggULIr5FUu+QC0qFApYEav+biuz0JMyZ
      ZURlY59seyfCIdim+A8Pn0XW7EQsz6Xn/1Pl8wfw4n9/hecfKZF1/8S1CHIQHAiGYGsbwBIa
      /E5LrFaNe0rysOfI13yXIliCDEBdSx8K5lmgpJ7XaVu5cDaGR71ovjDEdymCJMhvWFl9J+9v
      e5OSx7csxnuHztBiuQkILgADI26EWA7JJj3fpUiGxazH8tw0HDjZwncpgiO4AJTbunDjspnd
      6ogAt61agFPn7Bi85OG7FEERVACCIRY1zX1YOs2dHsnVVEoFdty6CO98bqNG+v9HUAE43dqP
      GzKT6YVPEZKdnghDrAbVTb18lyIYgvqmldV10OA3wrZvLsQnRxsxNk6z64CAAjDk9MLnDyIl
      wcB3KZJmiNVgS/ECaqT/hmACUG7romXPUbJ+0Vz0j7hpoz8IJADBEItT53qwcmEa36XIxmO3
      LMKu/61HiJX33IAgAnCucxC5c5KhVkV2gR35G2tSHIqyUnC4pp3vUngliAB8WdOOzSto8Btt
      t6/KRll9J0ZG5dtIz3sAHC4fRj1jtOsJD7QaFR6+qRDvfynfl+yGFQCWZdHc3Iz6+nq0tMzs
      dHq5rQubltLML1/y51kQDLGwtcqzkT6shhiGYcAwDOLi4uByuWasIyzEcjhx9gJeeqyEur54
      tOPWIry6uwI56QlQq3i/KYiqsALg9/sBADqdDqFQCAzDzEhH2PmuQWSnJ0IXS80afDLHqbBh
      cQY+PdaEh24q5LucqAor7jExMcjOzobVap3RLZIOnmqlmV+B2LwiC229DvQOyauRnrfrncvr
      x5DThzmzjHyVQL7nkc1FeGt/DVhWPgNi3gJQVt9Jy54FJiPFhJw5STjR0M13KVHDSwBCLIvK
      r2nmV4i2luRh/4kWjHr8fJcSFbwEoM3uwNwUI3RaNR+nJ9cQo1HhgU35+PCIPBbL8RKAQacX
      d6zhd79h8sOWZKfC5w/ir3UdfJcScYJ9LxDh13gghJffK8cdq3OwTMLvZpLXrAcJm0atxHMP
      rcX+E81o7Brku5yIoQCQH6TTqvHcw2vxwZdn0dwtzfcKUQDINem0ajz7wBq88/lptPdKr4GG
      AkCuK16vxc7SYvx2bxX6R9x8lzOjKAAkLLMSDNhZWoxf/vEkLrnH+C5nxkwYgGPHjqG2thas
      zNvlyHelW4z4p60r8OruE3B6pBGCCQOQlJSEurq6aNdCRGDOLCMev20xXnn/OFxe8c8WTxgA
      h8OBpKQkuN2X7/dYlkVLSwsCgUBUt0giwpSVloD7N+Xj1Q8r4A+Iu4/jqn4Av98PrVYLrVYL
      vf7yC2q/bYipra1FYmJi1LZIIsKVn5GEUU8mfrGnAs9sWwWlQpzbMF0VAI1Gg4GBAWg0Gvj9
      fuh0Ovj9fgSDQSgUCgwODkZliyQifCVFGeDA4PW9NXiqtBgKEYZgwo4ws9kMr9cLrfZyp1ZM
      TAzy8vKiWhgRh/VFcxEIhPDrjyvxZGkxFCLbkO+qMQDDMNDr9bDb7Rgbk8ZIn0TWjcvmId1i
      xNv7a0V3WzzhIFilUuGWW26BTqeLdj1EpO7dsBBqlQKfHG0UVQgmDIDX68W+ffsQCoWiXQ8R
      sb+7bQkuOjz4/FQr36WEbcIApKamwmg0XnkbBCHheuLu5Wizj+BQlThCcFUAOI5DS0sLLBbL
      lceghEzGE3cvR11LP8rqO/ku5bomDEB/fz/6+/sxPj7OR01E5JQKBX56XzGO1LajvqWP73Ku
      iTrCSMR4/QH863vHsP3mQuTMSeK7nAlddQVwOBzYtWsXjhw5QoNgMi06rRrPP1KC9744g/rz
      wrwSXBUAs9mMlStXwuv10jwAmTatRoWfbV+Hj79qRMuFYb7LucqET4Hi4uJgMBgQExMT7XqI
      BOm0avxs+1r8z0EbWu0jfJfzHT84EVZQUECDYDJj9DEaPPfQGry9v1ZQe5NN+BSosrISNpuN
      rgBkRsXptHj6/lX4z0+qMOAQRmvlhGuBEhISEBsbSx1hZMbNMl9urXxtz0k4BdBaOeEtkMFg
      QENDg6jWdBDxmDPLiB/ftRyvflgBt4/f2+wJA2C1WmE0Gq+MAViWRWtrK5qammC326NaIJGm
      zFQTdty6CC+/Ww7PGH8hmLAfYHx8HPHx8VCrL7+8lmEYBAIB6HQ6DA0NwWq1UkcYmbaMlHiU
      bsjDf/ypEv/8wGpeapgwAB6PB1qtFoFAAGq1GsFgEEqlErGxsfD5fDO2RRIhS3PS0N57CX+u
      OI+7S6LfdHXVLdC3m9WlpKRc+ZlarUZ2djYsFgtyc3OjVx2RhdIf3YDTrQO8TJRdFQClUomR
      kREMDw9TQwyJmmfuX403P6uJ+qtWaDEcEYzGriH8qexrPP9oCZgo9RbTqxGJYOTNTcLCjGR8
      Wt4YtXNSAIig3LthIRo6BtEUpdexUwCI4Pz0vmK8vb82KuMBCgARnDidFv9wx1L88qPKiJ+L
      AkAEKXdOEvIzk/Hx0XMRPQ8FgAjW1pI8NHYO4Vxn5PYoowAQwWIYBk/dV4zfHaiDyxuZ9UIU
      ACJohlgNfnznMrz2x4qIHJ8CQAQvOz0Ri7JS8NFfv57xY1MAiCjcuTYHLT3DMz4eoAAQUWAY
      BjvvLcYf/lI3o/MDYQfA5XKB47gr2yYREm0GnQb/eMcy/GLPyRk7ZliL4ViWRWdnJ3p6emAy
      mVBQUEANMYQ3f65owdh4CKUbpt8/MGFDzPeFQiG0t7cjPT0dbrebGmIIr+5al4dXPjiOpu4R
      5M+zTOtYk1oOzXEcQqEQVKqwckNIxLi8fvzmkyo8VVoMXYx6yseZ1CCYYRj68hNBiNNpcePS
      efjdgentZ01PgYhorcizQh+jxpHa9ikfgwJARIthGOzYsghH6jrQ2X9pSsegABBRUyoUeKq0
      GG/uq4HXH5j05ykARPSSTXrcsz4Pb+2vnfRnKQBEEpbnWmHUafFFddukPkcBIJLAMAwevbUI
      R093TWo8QAEgkqFUKLCzdCXe3FcNX5jjAQoAkZTL44GFeGNvdVi/TwEgkrMiLw1JJl1Ym3VT
      AIgkbb+5COW2bnT2XXs8QAEgkqRQMHh62yq8sa8a3rGJxwPHz3TTu0GJtNU296KsvhPP3P+3
      /QdYlsNHZV+jf8RNVwAibUtzrEg26XDw1OXxgHcsgJ/vqYBapcDO0uLwrgAcx6GpqQkJCQkI
      BoNIS0uLeOGEzBSW5fDCrjJsKV6AAydbsHVdHpblWgFMoh+gra0NRqMRdrsdhYWF1BFGRMXh
      HsNb++vw8E35mJ0cf+XnYbdEdnR0wGAwwOFw0C4xRDJoEExkjQbBRNYoAETWKABE1igARNYo
      AETWKABE1igARNYoAETWKABE1igARNYoAETWKABE1igARNbCDkAwGKQtkojkhPWyf47jUFtb
      i+TkZLjdbtoiiUhG2AFQKBQYHx9HIBCgLZKIZNAWSUTWqCOMyBo9BSKyRgEgskYBILJGASCy
      RgEgskYBILJGASCyRgEgskYBILJGASCyRgEgskYBILJGASCyNqkAuFwu2O32SNVCSNRNamG/
      w+GAz+cDx3HUEUYkYVIBMBqNGB4epo4wIhnUEENkjQbBRNYoAETWKABE1igARNYoAETWKABE
      1igARNYoAETWKABE1igARNYoAETWJhUA2iCDSM3/AU1sZPwlBwGHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Shifts Worked Weekday' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Shifts Worked, Weekday, DelCharge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Earning Boxplot' width='123'>
      iVBORw0KGgoAAAANSUhEUgAAAHsAAADACAYAAAAkyhzJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJLElEQVR4nO3dX0iUax4H8O84Tn+UsrYJ1ymrrZNgW8IxYqG6ayX2UEFeCBtdnQsNE1Ok
      xItCwrkwJaUSHUqomw50EbRehI0UdBGsdoIMLHJXs86ZVrPSETWd4/vsRWfenVdnxoltZh77
      fT8QOO8zr+/It/d5X8Z5vtqUUgokQkqyXwAlDsMWhGELwrAFYdiCMGxBGLYgDFsQhi0IwxaE
      YQvCsAVh2IIwbEEYtiCpyX4BsTp37hyGh4fh8XjMbSMjIzh79iwAwGazoa2tLaYxsdQS8Pr1
      a3X+/HlVXFxs2R76+OXLl+rMmTMxjUm1JKbxuro68ywNev78OfLz883H27dvx9jY2KJjkmk/
      jTc0NKCqqmrB9sHBQezbt8+ybe3atYuORTMxMfF/vFL9aR32hw8fMDo6ipycnAVjw8PD2L17
      t2Wb0+lEIBCIOuZwOAAAU1NTC77nqlWrvuKr14/WYdfU1KCxsdFyxk1MTGDlypXIzs6Gz+dD
      ZmamOebz+eBwOKKOBaWlpSXmh9CI1tfsgwcPwuv1mv8AwOv14v3799ixYwfu3r1ref7k5CQA
      RB2TTOszu7Cw0PK4s7PTsm1oaAiTk5NIT0/HnTt3sG3bNgCAy+WKOCaZ1mEvprW1FaWlpVBK
      wel0wu12xzQmlU0pLhKQQutrNn1dDFsQhi0IwxaEYQvCsAVh2IIwbEEYtiAMWxCGLQjDFoRh
      C8KwBWHYgjBsQRi2IAxbEIYtCMNOIsMwMPUpAMMwEnK8Jf3p0qVKKYUB30dc+OkR/JMzWJ2+
      HGf+vhdbXWths9nidlx+ujQJ/v3rB1R7uhD47X9ntCM1BfUlf8W2DX+I23E5jSeYYRi48NMj
      S9AAEPjt8/Z4TukMO8E+zc7BPzkTdsw/OYNPs3NxOzbDTjB7ig12e/jrst1ugz0lftdshp1g
      yxx27N+1KezY/l2bsMxhj9uxGXaC2Ww2/PjD99ixZT2C57ANwJ+3rMePP3zPu/Fv0ZxhYOg/
      4/j55VvszsnC5j9mwJ4S33OPYQvCaVwQrd9B6+3tRUtLi/nYZrPh8uXLZl1Ge3s7uru7zfHq
      6mps3boVAHvQwkpSJVdMnj59ank8Pj6uSkpKlFJKjY6OqpqaGst4aPcZe9AW0noaz8vLszxe
      vXq1+fXIyIil6ywUe9DC03oaDzUwMID6+nrU19cDAHJzc3Hp0iVs2LAB+fn5aG9vNwNmD1p4
      2od95coVPHv2DABw/PhxrFmzxhwrKCjAzZs30d3djb6+PtTW1gKI3pEmuQdN62v2fPfu3VOn
      Tp1SSinV3d2trl+/bhk/ceKEUkopr9ernjx5YhmrrKxMzIvUmNbX7PkKCgowPT0NAOjq6sLR
      o0ct4zt37sTbt2/ZgxaB1mG73W7Lr/xGR0fNr48cOWJO2wAwOzuL3t5eZGVlWXrQALAH7Xda
      v4M2ODiIpqYmzMx8/pXgunXrUFdXh5Tf31Z8/Pgxrl69CgCw2+1obGw0ayoNw2AP2jxah01f
      l9bTOH1dDFsQhi0IwxaEYQvCsAVh2IIwbEEYtiAMO4m4ilMAxVWccnAVpxBcxSkIV3EKwlWc
      gnAVpyBcxSkQV3FSXHEaF4RhC8KwBWHYgjBsQRi2IAxbEIYtCMMWhGELwrAF0fozaIv1oAFA
      WVkZAoGAOR7sO2MPWhjJafeITbQeNKWUOnnypHrz5k3YfdmDtpDW03i0HrRAIIAVK1Zg48aN
      C/ZjD1p4Wk/joeb3oL148QKHDh3C0NAQenp6sHnzZuzZswcAe9Ai0T7sSD1o/f396OzsxOHD
      h7F37148ePAA165dg8fjYQ9aJMm+jnyJ0B60np4e9fDhQ8v4xYsX1bt379iDFoHW1+z5QnvQ
      cnNz0dHRYRl3uVyYnp5mD1oEWocdrQctPT0dfr8f/f395rb79+8jOzubPWgRaP0ZtMV60ACg
      srLSvP7W1dVh/fr1ANiDFo7WYX/rDMPAp9k5rFhmt/wHjhft78a/RYqrOOXgKk4hkrmKk2f2
      V1JUVJTwY966deuLns8zWxCe2QmmlILnHz/j7j//tWDsb3/5DiVHdsftJo1ndoJxFadAXMVJ
      ccVpXBCGLQjDFoRhC8KwBWHYgjBsQRi2IAxbEIYtCMMWhGELwrAFYdiCMGxBGLYgDFsQhi0I
      wxaEYQvCsAXRehVnLD1oAPDo0SPcuHEDbW1t5ueu2YMWRsKLPb7AYj1oQcXFxaqhoUEZhmHZ
      FsQetM+0nsaj9aAFnT59GhcuXLBsYw9aeFpP46Hm96ABn0N1uVzIyMiwPHep9KAZhsJMYA7L
      HXakxPHPMgZpH3akHjQAaG5uhsfjWbCP7j1oKknNC9qHXVZWZn7t9XpRUVGB5uZm1NbWorKy
      0jwb5+bm4Pf7kZqaiuzsbPh8PmRmZpr7+nw+y41dWlpa4n6IeQZ8Hy3NC1MzAVR7uti8ECq0
      By0vLw99fX3wer3wer34+PEjurq60NPTo3UPWjKbF7Q+s91uN2pqaswmodAetMLCQstzBwYG
      UFhYaE6DwR609PR0rXrQYvn72Wkr4nMOah32sWPHUFFRYelBa21tjWnf1tZWLXvQkvn3s7lk
      N8EUmxfkCDYvbMlaY9n+p6w1cW9eYNhJ8GZkHL++81u2/fLOjzcj43E9LsNOsGTejTPsBIvl
      bjxeGHaCJfNunGEn2DKHHft3bQo7tn/XJixz2ON2bIadYOxBE4g9aBRXnMYFYdiCMGxBGLYg
      DFsQhi0IwxaEYQvCsAVh2IIwbEEYtiAMWxCGLQjDFoRhC8KwBWHYgjBsQRi2IAxbEK3XZy/W
      g9bZ2Ynbt2+b40VFRThw4AAA9qCFlbRSrhhE60EbGxtTLS0tlvHQ7jP2oC2k9TQerQctIyMD
      paWllvHly5cDYA9aJFpP46HC9aCF6ujogN3+eZ0Ue9DC0z7saD1oQVVVVXA6nWhqagLAHrRI
      tA87Ug8aAMzMzKC8vBxVVVXIyckxn8cetPC0vmbPF9qDBgDl5eVwu92WoAGwBy0CrcN2u92W
      Hz60B+3Vq1fIzMyE0+lcsJ/L5TJ70AAsuR60eNF6Go/Wg9bf34/h4WGUlJRY9mlpaUFqaip7
      0MLgkt0EU+xBk4PNCwKxeYHiitO4IAxbEIYtyH8BPu3VSkyzZxEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weekday Earning Boxplot' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='Yearly Breakdown' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yr Qtr Avgs' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXCUdZ7/X30l3Z1O5yAHEEIggUC4k8BwiUQRBHEQFNERcVyYsWZlp0Zr
      xnJnrWWc2Z1yy90tnXEd11ERlUtAQAcNAhskkIsrEEIikPtOp5NOd/o+nuf3B5PnR9QxyDQ0
      dp5XFWXS3U/ybvN8+vv9fk6FKIoiMjJDFGWoBcjIhBLZAGSGNLIByAxpZAMIAXa7Hb/fH2oZ
      MsgGEBKcTqdsALcJsgHIDGlkA5ABQBRFHA4HDofjO18bCATo6+ujr68Pl8v1na7t7e0llJ54
      2QBkAHC73bz66qvs3r37b96Qf+vx+vp6XnjhBX73u9+xdetW6bXf9nP6n/vLX/4iff3Va756
      /c0wFHXQf6LM9xK73Y7BYKC0tJRVq1ZRWlrKjBkzcDqdtLa2Eh8fT0FBAVqtllWrVjFs2LAB
      106ZMoWnnnoKAIvFwo4dO/D5fKxfv57y8nJsNhs6nQ69Xs/Zs2cJBAI88MADpKeno1Qq+eCD
      D7DZbGi1Wn784x9z6tQpzpw5Q3x8PEuXLqWwsJCmpiYmTpzIkiVLgva+5RVABoCDBw+Snp7O
      1KlT6e3txev1Ul5eTn5+PgkJCWzZsoUf/vCHdHZ20tvb+43XP/PMM7zxxhsYDAZyc3NpbGzk
      /fffp7CwkLKyMmbOnMnJkyd54IEHGD58OPX19ZSVlQFw/Phxli9fTktLC3V1dXzwwQf86Ec/
      oqqqira2Nvbt28fs2bPJzs4O6vuWDUAGn89HVVUVFy5coL6+nkOHDpGVlcXx48e5cuUKGRkZ
      6HQ6YmJipG2I1WolEAhIPyMvL48XX3yRdevWcejQIU6fPs2cOXNwuVwolUqWLVuG0WgEICoq
      ivj4+AEadDod0dHRKJVKBEHAaDSi0+kQRZGYmBh+9atfceLECXbu3BnU9y5vgWTo6OggKiqK
      f/mXf8Fut7Nz505SU1PRarVkZGSgVquZNGkSr7zyCnV1dSiVSl5//XV++tOfkpiYiFarpb6+
      ns2bN5OWloZWq6WhoYH29nbGjh2LIAjo9XoA4uPjUalUREVFoVarJUNITk5GpVKRmJhIZGQk
      I0aM4NVXX6WzsxO3282BAwdQKBQYDIagvneFnAx36zGZTBiNRrRabailfCt9fX2oVCr0ej3b
      tm1DrVbzf//3f/zhD39Ap9P9zesEQaC3t/drn/LXiyiK/PnPf8ZgMHDu3Dl+//vfo1AosFqt
      xMfHo1QGb+MiG0AI+L4YwLW0trZSUVFBbm4uSUlJN/V3iaJITU0NtbW1zJ8/n+jo6Jv2u75m
      AA6H4zv7cmW+Gz6fj4SEBDQaTailDHm+dgbQaDQoFIpQaBkyqNVq+ea/TZC3QDJDmkG9QN3d
      3bz77rsolUqefPJJfD4f27ZtIykpiUcffZSWlhb279+PQqHgqaeewu/3s2PHDlQqFU8++SQq
      lepWvI8BiKIouej6f3//90qlMqiHKJnrRxRFBEGgvb2dUaNGIYoifr+frq4uRo4cKb2mtbUV
      URRJTU2VHnM4HBQVFTFr1qwbPlx/E4OuAPn5+aSlpVFdXc2lS5cIBAIsWbKE4uJipk+fjs1m
      Y8KECdTU1NDe3o7X6yUrK4v29naioqJYtWpV0MReD6IoUlFRQU1NDV6vl5ycHFJSUjh8+LDk
      U160aNEt1SRzFb/fz5///GccDgfPPfccNpuN9957D7VazT/+4z8CVz1P27dvx+l08uyzzwJX
      84X+9Kc/sXHjRmpqasjNzQ2apkE/Cu+9916ioqK4ePEid911F3q9npkzZ3LHHXdw5swZVqxY
      gVarpaioiClTpnD69GnGjx/PvHnz6OzsDJrQ68XpdNLc3MyDDz7Iww8/TGVlJVFRUaxcuZIF
      CxbgdDpvuSaZq6hUKtavX09MTAwABoOBDRs2EBkZCVz98MrPz+e+++4bcF1rayvDhg2jpKRE
      WimCxaAGUFtby+9//3seeughZs2aRSAQwOfz4XA4UCqVlJeX8+677/Lwww8zb948IiMjEQQB
      URSlN3YrEQQBlUqFQqFArVYTCAQQRZEzZ87wxRdfkJGRccs1yVxFoVAMcP0qlUoiIiKk7ysq
      KjCZTJjNZrq6uvB6vQDYbDbGjBlDamoq+fn5Qa2lGNQAPvzwQ9LS0qirq+Ps2bMYDAZ27txJ
      fn4+S5cuZfPmzcTGxtLW1sbly5e56667yM/PZ8+ePaSkpARN6PWiUqnw+XwIgoDH40Gj0eDz
      +cjJyeHBBx+ktrZWLkYJEYFAAKvVisfjoa+vD6/Xi81mw+12Y7fbiY+PJysri+7ublwuF4Ig
      YLPZSEtLw2q1Mnr0aNRqNYIgBE2T6sUXX3zxW1/w10Okx+NBr9ezdOlSWltbmTVrFtnZ2QiC
      gEajwePxkJCQQF5eHp2dnYwcOZJ77703aEKvl343bkFBAcXFxWRnZ+N2uzl69CgXL14kOTmZ
      MWPG3HJdMldTrqurq9Hr9fj9fjQaDbW1tVLOT1paGuPGjWPs2LEkJSUxcuRILl68SHp6Op2d
      nVy5coXU1NSg/v3C0g16bcLWl19+yezZswc8L8c5vn9ce5sG8+8XlgYgI3O9hEU26LVpuTIy
      34WwMACPxxNqCTLfU+SQqMyQRjYAmVtOT0/PgK8vXbokuTb9fj/nz5+nq6vra9dZrVZ8Pl9Q
      tYSdAYiiSENDA/v372f//v20tLRIz+3atYvu7u4QqhvaBAIBtm7dyocffghcrYvYvn077e3t
      FBQU4Ha72bVrF1FRUXR3dw842zkcDl588UVsNltQNYWdAXg8Hqqrq1mxYgVLliyhoqJCigQb
      jUbZBRpCFAoFS5culaLBra2t3H333eTl5VFbW0t9fT0KhQJRFElMTJRiUH6/n08//ZT58+cH
      XVPYGUB/gEWpVKLX6/F6vTgcDiwWCyNHjvzWfjUyNxelUklCQoL0vcVikarLDAYDPp+P7u5u
      ampq2LFjB319fcDVdBxRFNHr9djt9qB6/cLOABQKBX6/f8CNfv78eWJjY2lububKlStyxdtt
      wqhRo6iurgauGoNWq2XcuHEsXbqUhIQE3G43cLVo3+12c/LkSY4cOfKNbVlulLAIhF2b4dmf
      Dm232+nq6mLcuHFkZWUhiiJVVVWMGDGChIQEeSsUAhwOBydPnqS1tZVx48Yxbtw4Pv/8cxQK
      BQsXLmTEiBEcPHhQSmTMy8ujuLiYhQsXAnDp0iVSUlKC2hki7AwArhqByWTCarViNpuZN28e
      cDUXRaPRhKRIR+abEQQBn883ICXa7Xaj1WpvyYdUWBqAjMz1EhaR4GCmx94KvF6vtL+VCS1h
      YQDft5tJq9UGta5V5sYJiy2QjMyNEnZu0L+HYIfZZb6Zvr6+ATMBrv3e7XbT3Nw84PWCIGCx
      WLBYLNjt9qBqCYst0LU0NDRw8uRJqd/9woULSU5Olp7vzxz9pnrls2fPfq14RiZ4CILA1q1b
      6ejo4Oc//zkAW7duxe1287Of/QyXy8Vbb71FU1MT8+fPZ/Xq1SiVSnp7e9m0aRNGo5HJkyez
      du3aoGkKuxVgzJgxrFmzhujoaNasWUNSUhKXLl3i0KFD+Hw+SkpK+OKLLzh//jyBQIDi4mIq
      Kiqkhq4yNw9RFElJSaG7uxtBEAgEAmRkZNDW1oYoitTV1WEwGHj11Vf5y1/+gsViAa6uzLm5
      ufz2t7/lRz/6UVA1hZ0BfJW2tjZaW1uZPXs2Bw4cYMyYMUycOJFp06bR0dFBdnY2gUCAqqqq
      UEsNe1QqFYsWLUKtvrrxMBgM3HnnnQNeM378eACSkpKk5gX926Rf/vKXUiJdsAh7A/D5fIwZ
      M4aYmBji4uIkl6lCocDhcJCfn09FRUWIVcr00/9BZDKZUCqV2Gw2FAoFGzdu5N/+7d+oq6sL
      alePsDsDfJWoqCguXLggHXCNRiMXL15EFEVaWlqYOHEibW1tIVY5NGhra2Pnzp24XC62bt3K
      jBkzOHHiBB6Ph+3bt3Pvvfficrn493//dxYvXowoihw+fJjk5GS2bNmCx+MhKytLWkGCQdi6
      QVtaWqT+k42NjfT09DB9+nRUKhW1tbU4nU4yMjK4dOkSUVFRDB8+HJfLNeDALHPr6R+5Ghsb
      O+Bxn8+H1+tFr9fLXSFkZIJF2G+BbkecTqeU6y4TWr5mAL29vUEvO7vZfN/aomi1WmlonExo
      CYstkJwNKnOjDLoFCgQCUoAoNjYWURSxWq2o1WqMRiN+v19yVcXFxaFQKKSKq2+bJCgzdPH7
      /ZInx+/34/P5BuT/91f0XTtGKhAI4PF40Ol0QT0ED2oAn3zyCaWlpTgcDu677z6pNM3r9bJp
      0yb27dtHTU0NFouFtWvXEhsbyx//+EfuvvtuHnnkkaAJ/S64XC4KCgrQ6XTMmTMHvV6PzWaj
      qamJKVOmhESTzNWA1tGjRzGbzaxZs4a+vj727duHSqVizpw5ZGRkIAgC+fn5iKLIihUrgKvt
      0T/55BMiIyOJiYlhyZIlQdM0aHfotLQ0li5disvloq2tjZaWFp555hkAjh49yrp161iyZAkK
      hYLW1lYmTZrEsGHDcLvdt+xmuzaJzefzUVBQwKJFi4iOjqa8vJyUlBSKioro6ekhMzPzlmiS
      +TqCIOBwOGhoaCA7O5vGxkbUajX33XcfH374IbNmzaKyshK/309tbS0/+MEPgKvF9FOnTmXy
      5MkcOXKEmTNnBk3ToJFgtVrN//zP/9DS0sKaNWvQarXExcUxduxYfD4fgUCAd955h3PnzvHQ
      Qw+RkpKC0WgMmsDvisfjQa1WExERwfDhw7HZbERERLB48WK5FDLEqFQqpk2bJm1h+j8wVSoV
      MTExWK1WKisrv9b+RKPRYLVa2b17t1QfHCwGNYD+ZlKPPfYYERERuFwuvvzyS8rKyhg5ciS7
      d+9GFEU2bNiASqXC4/Hgcrmk/4aCa1NtZW5fYmNjMZlMwNUU6aqqKmpqanjzzTcpLy+XUp/t
      djvvvPMOc+fOZeLEiUHVMOgZoLm5mcbGRn77298ydepUFi1axJ/+9CdiY2N54YUXeOqpp1Ao
      FFRUVLB8+XJ8Ph+fffYZbrcbhULBunXrgip4MPqbLtlsNrq7u0lMTEQQBNxuNz6fD5fLRWRk
      pDwpMgT0d4Voa2ujtLSUUaNGsXPnTmpqasjKymLu3LnMnTsXQRDYvHkzOp2OY8eOkZycjCAI
      0gil3NzcoB2Ew9INKggCR48exWq1EhcXR25uLqWlpcDVDMScnJwBs6pkQoff78dqtTJs2LCQ
      /P6wNIB++nPO5ansMn+LsE6FkIdiywxGWKwA37dUCJnbh7AwABmZG0XeH8gMacLSADweD6Wl
      pZSXl+N2uxEEgYsXL1JSUkJnZ2eo5Q1ZRFHk3Llz5OfnS48JgsD27dux2+0IgsCJEyfYt2/f
      gBpth8PBZ599xo4dOzh58mRQNYWdAQQCAQoLCxkxYgRKpZLTp0/jdrvxeDyMGjWKkpKSUEsc
      sgQCAbq6uqirq5MeO3v2LJWVlfh8Pmpqaujp6WHJkiWUlZVJgVSFQsGUKVO4//77KS4uDqqm
      sDMAp9OJz+dj9OjRTJ8+nba2NvR6PTk5OXi9XrkteghRq9UsXrxYckubzWYuXrzInXfeiUKh
      wOl0YjAY0Ov1GAwGKRKs1+tJTEykqKiI3Nzc4GoK6k+7Tei/ya9NiegfvBbMTEKZv4+PP/6Y
      yspKqS3N9OnTpedUKpXkwna5XPzxj39k8eLFZGdnB1VD2BmAVqvF4/Hg9/uxWCzExcXR09ND
      a2sr9913n7wChBCn08n58+dpaWmhvLyctWvXotVqOXjwIHPmzMHn83HgwAFKSkowmUwYjUbK
      ysqIiYnB4/HQ29vLhQsXmDp1qpwK8W04nU7y8/OxWq2MHz+etLQ0CgsLpQzRBQsWyIYQAgRB
      wOl04vf7iYiIQKvVolQq8Xg8aDQaFAqFNNRk5MiR6HQ6nE4nGo0Gp9OJUqlErVYHtSgmLA2g
      H6/Xi9VqJTExMdRSZG5TwtoAZGQGIyzOAF6vN9QSZL6nhIUBBLNXpMzQIuziADIy34WwWAG+
      it/vp62tDbVaTVJSklSwD5CQkCA3pQoRoijS3t5OR0cHOTk5BAIBamtrqaurY+LEiSQlJVFZ
      WYnVaiUrK4uUlBQUCgU+n4/y8nJsNhsTJkwgNTU1aJrCbgUQBIEzZ85gMpm4fPkyVVVVeL1e
      urq6MJvNFBUVhVrikCUQCHDixAkpHaW7u5vjx4+zcOFCFAoFXq+XqKgo5syZw6FDh6RCp4aG
      Bjo7O5k2bRp79+4NqqawMwCXy4XVaiU3N5e8vDzq6urQ6XTk5uaSmJgo+/9DiFqtZs2aNdIK
      3NzcTE9PD++99x6BQIDY2Fj8fj979uxh5MiRUtlqcnIyzc3N7N27d0C0OBiEnQGIoohSqRxw
      o/dnIVZVVTF8+PAQqpO5FlEUWb58ORs2bOD48eN4vV4yMzOZMGEC7e3tUr+n5uZmJk2axEMP
      PURdXV1Qu32EnQFoNBq8Xq/UslGv19Pb28vUqVNZvHgxLS0tstcoRHi9Xinjs6mpieHDh1NW
      VibNCHM4HFy5ckXa47tcLurq6rBarQQCAaxWKx6PJ6gGEBaBsK8WxZtMJkpKSujt7WXatGmk
      pKRw8uRJ/H4/EydODHpvGZnrw+fz0d7ejtPpxGg0Eh8fT2NjI729vQwfPpxhw4ZRU1ODKIrE
      x8eTmppKa2srycnJVFdX4/f7SUhIIC0tLWiawtIArn28vb2djIyMW6xI5vtCWBuAjMxghEUc
      QK1Wy20QZW6IsFgBZGRulLDzAsnIfBfC0gBEUcTj8eD1egdsjXw+nzQoW+bWI4oiJpOJo0eP
      YrFYEASBhoYGiouL8Xq9CIJAT08PX3zxBX19fQNKWj0eD01NTUHXFHYG0B/0OnjwIPv27ePS
      pUvSc6+//jpdXV0hVDe0cblcFBYWkpqayhtvvEF7ezt79uxBp9Px0Ucf0dLSwv79+xk9ejRb
      tmyRJmk6HA42b97Mxx9/HHRNYWcATqeT1tZWVqxYwerVq6msrEQQBA4fPkx2drY8JCOE6HQ6
      Vq9ejVqtZtSoUTQ0NLB69Wqys7OxWq2MGjWKJ598Uurp2t89Qq/X85Of/ITIyMigawoLL9C1
      CIKASqVCoVCgUqkQBIGOjg4iIiKIjo5GEAREUZRzgkKAKIocOnSInp4eVq1axenTp6Wbur8m
      uLKykqKiIh555BFpyOLNbHIcdiuAWq2WRje53W40Gg1tbW3odDoaGxu5fPmyHDcIEU6nk+PH
      j5OXl4cgCKSlpVFcXIzZbMbn89Hc3MyJEydYuXIlcDV71GKx4PP5sFgsuN1ubDZbUM9xgw7J
      +76h0WhQqVQcPXqUkpISZsyYQXZ2NikpKfh8PtLT04mJiQm1zCFJX18fGo0Gu92O2+0mLS2N
      9vZ2amtrWb58ufTh1T/dJykpiZqaGoxGI1euXMFgMAAQFxcXtK1sWMcBrFYrly9fZtasWaGW
      InObEtYGICMzGGFxCHa5XN+rVAiv1xuyCZoyAwkLA3A4HKGW8J1Qq9XyOeQ2ISwMQC5yl7lR
      ws4N+vfg8XhCLWFIYDabEQQBv99PS0sLLS0t9PT0AFdX8wsXLnytas/tdnPq1ClsNltQtYTF
      Ifhav35TUxNnz56lra2NkSNHMn/+/AG9Qft7zve71K7l+PHjLFiw4OYLHqL4/X5eeeUV7HY7
      zz//PDabjZdeeonU1FQmTpxIZmYm27ZtQ6vV4na7ef7559Hr9dhsNl555RWio6PJzMzk/vvv
      D5qmsNgCXcvo0aMZPXo0+/fvZ+XKlXi9Xs6cOUN3dze5ublUV1fj8XhITk5m7NixVFRUoFar
      mTJlitxi8SajVCpZtWoVH3zwAXB1xc3MzOTuu+9mzJgxiKLIL3/5S5xOJ7/+9a+loviLFy9i
      MBhYtmwZcXFxwdUU1J92G9Ld3U0gEGDBggWcPHmS0aNHk5mZyeTJk/F4PEyYMAGFQkFDQ0Oo
      pYY9SqWScePGSWkNRqORCRMm8Pnnn7Nr1y60Wi2NjY289NJL/PrXv8ZoNALQ2NiIy+WitraW
      d999N6gfVGFvAIFAgMTERHQ6HUajUXKXKhQKmpubOXfuHM3NzSFWOTSxWCzk5eXxk5/8BLPZ
      TFNTE++//z6bNm0iMzMTv99Pd3c306dPJzk5meXLl+P1enG73UHTEHZboH76k90MBgNlZWU0
      NTURHR1NfHw8RUVFtLe3Swlz/VmHcoLczaWjo4Pdu3cTExPDrl27SEtLY9++fXi9Xu666y40
      Gg0pKSls374dgJUrV1JZWcldd93FmTNn2LRpE7NnzyY6OjpomsLuENyPw+EgKioKURSx2+14
      PB7i4+NRKpXYbDb8fj9Go5He3l7UajV6vR6/3y+7VG8xgUAAQRBQq9Xf+gHUXxQTGRkZ1A+q
      sDUAGZnrIWy3QLczTqdTqnaSCS1hsQLIyNwoYe8FkpH5NgbdAl25coWysjJ8Ph8rVqxAEAQ+
      +ugjEhISWLVqFXV1dZSUlODz+fjhD3+Iz+fjyJEjeDweHnjgAZKTk2/F+/gaZrOZiIgIyZcM
      V7ce8iE3tDidTjo6OkhPT8fj8XDu3DkEQWDYsGGMHz+eK1eu0N3dzciRIwf0ALXb7ZjNZsaM
      GRNUPYOuAMXFxaSnp+NwONi2bRtbtmwhPj6eixcvUlRUxLlz50hPT0etVpOfn09jYyNjxowh
      Pj6e4uLioIq9HkRRpKSkhPr6es6dO0dNTQ1+v5+CggKOHTt2y/XI/H/8fj/vvvuu1N3BbDZz
      7NgxKTbT1tZGVVUVoihSUFAgpa309fXx/vvv89lnnwVd06AG8MQTT5CTk0N1dTXTpk1DqVSy
      evVqli1bRmlpKatXr2bcuHFUVFQwZcoU5s2bx4QJE6irqwvJfF6XyyWlPcydO5fz588DMHny
      ZLkteohRq9Vs3LiRqKgo6bGYmBgmTpzI2LFjSUlJ4YEHHiAnJwe/3y+VPUZHR/P000+jVgff
      ZzOoAXR0dPDP//zPrF27lry8PERRJBAISH3aGxsb+c1vfsP69evJzc3l0qVLvPDCCyxdupQ7
      7rgj6IIHIxAIoFKppLYagUAAtVodsq2YzN8mISGB2bNnU1BQwDvvvANAWVkZb7zxBuvWrZO6
      QtxMBjWAzZs3Ex8fT09PD6dOnUKn0/Haa6/x8ccfs3z5cl5++WXGjRtHfX09ly9fZs+ePeTm
      5tLU1ERNTc1NfwNfRa1WS8EVt9t9U3rJyASH7u5u0tPTWbFiBW63m+bmZs6fP8/GjRvRarWI
      oojZbL6pGgZ1g7a3t0s52AaDgbi4OMrLyzEYDEydOpXGxkYpOSkhIQGn0ykFphITE4mPj7+p
      b+CriKLImTNn6Ovrw2w2M27cODIzM6murqaxsZGJEycyfvx4IiIibqkumas3/HvvvUd3dzfj
      xo1jwYIFHD16FLvdzsqVKwkEAmzbtk1KddiwYQMnTpxgxowZfPjhh3R3d5OVlcWqVasGbKP+
      HsI2DuByuXA4HNTW1jJ79uxQy5G5TQlbA5CRuR7CIhWiv3BCRua7IhuAzJBGToWQGdKErQG4
      3e4BpXOBQACn0ykPyAgx/fOb+xFFUZoDDFfrhDs7O7FarVKEuH9wRmdnZ9AbioXFFuirVFdX
      S7XAWVlZGI1Gjh07hk6nQ6PRMHfu3FBLHJL4/X7efPNN/H4/v/jFL4CrN/dzzz3Hf/zHfxAT
      E8Mnn3yCKIqkpaUxa9YsFAoFFouF/fv3Ex0djdfr5fHHHw+aprBbAdxuN42NjcybN485c+Zw
      8uRJNBoNS5YsYcGCBXR3d4da4pBFpVLx9NNPSwmKfr+fzZs3s3LlSpRKJVVVVcTFxTF9+nRy
      cnKk4vn4+HjWr1/PokWL6O3tDaqmsDMAv9+PWq1GqVQSGRkp5ZT09fVx7Ngxpk6dGmqJQxaF
      QjGgnPHixYuMGTMGpVKJ3+9HEATOnj1LIBDg7bffHtDysra2lh07drB69eqgagq7LZBSqUQU
      RSlnSaVS4fV6yc/PJy8vj6SkpFBLlPkrvb29qFQqvvzyS9RqNQkJCUyZMoWsrCzOnj0r7fed
      TieFhYX89Kc/DXpqS1gMyLjWDapSqWhra6O9vZ2qqipSUlJQKpXU1dWhUChwOBwMGzZM7gAR
      Anp6enj77be5dOkSJpOJvLw8Jk6ciMfjITc3V5oblp+fT3x8PFOmTOHQoUMIgkBRURGXL1/G
      bDYzfvz4oP39wiIS/E1F8Xa7HYvFQnNzM/PmzQuBKpnvA2FrAIC0FbpZA9Zkvv+ExRlAHn0q
      c6OExQogI3OjyHsDmSGNbAAyQ5qwOAN8lcbGRhoaGlCpVEyZMoXIyEjOnj2L3+9n2LBhTJky
      JdQShySBQIDdu3fT0dHBM888Iz32i1/8gt/97ndotVreeustAoEAkydPZsmSJZLresuWLfT2
      9nL33XcHNZUl7FYAj8fD+fPnyc3NZeLEiRQXF6PRaJgyZQqzZs2isrIy1BKHLAqFgvnz56PV
      aoGrN/+uXbuYOXOmFKvJzMzk2WefpaurS2ofWVtbS05ODs8//zynTp0KqqawWwG8Xi8ajQaD
      wYDBYMBut6NSqejo6KCsrIzp06eHWuKQRalUkpqaKrmlGxsb0Wg0xMTEEAgE8Pl8UvdnjUYj
      zWzr7OxkxowZ0nRNURSDFggLOwPo/x9z7SAMhUJBeno6SqVS6m8kR4JDT3l5OTqdjqqqKgBi
      Y2MJBAJSGktERASBQIDhw4dz5coV4uPjsVqtQf3bhZ0B6PV6BEHgzJkzWK1WRo8eTU1NDSaT
      CaPRKA3Vlg3g1tPb28uePXs4e/Ysu3fvZunSpURHR6NSqZgzZw6RkZG8/fbbNDY2MnbsWAwG
      A3v37mXZsmW89957nDhxgjlz5gRVU1jGAXw+Hz09PZhMJvr6+pg5cyYOhwOv1w9Uc94AAAyr
      SURBVEtMTIy0B5W5tQQCAandoVKpJCoqCqVSidfrlTJ4PR4Pbreb6OhoFAoFbrcbrVaLx+PB
      6/ViMBiCGtkPSwPop386TDBH6siEF2FhAHKZo8yNEhZngGBODZQZWoRdHEBG5rsgG4DMkCYs
      tkBfxWKxUF9fT0REBBkZGVKb7aqqKtLS0oLWWFXm76OkpITTp08DEBUVxdq1a9m7dy9ms5l5
      8+aRk5ODQqGgt7eX1157jdjYWDIyMrjvvvuCpiHsVgCfz0dpaSmjR48mOjpaCp2bTCZOnDgh
      nxduI+bOncvPf/5z7rnnHlJTU2loaMBoNPJP//RPVFdXS4VOPp+P9PR0nn766aDe/BCGBuDx
      eNBoNCQkJJCWlkZPTw8+n48zZ84we/ZsOQB2myEIAmVlZcyePRuPx4PBYEChUKDT6aSi+IiI
      CNxuN9u3bw96LlDYGUA/13p3y8vL6erqorq6mtOnT2O1WkOoTOZaOjo6iIqKGhCr6Y/U949E
      MhqNrF+/nscff1xOhhsMrVZLIBCgoaGBvr4+kpOTmTx5MuPHj+fy5cskJyfLZ4DbBL/fT35+
      Po8//jgKhYK0tDTKysoQRVFKaDx69CgjRoyQ0tuHDx8eVA1hEQj7alG81WrFZDJhMpnQ6XTk
      5OQA4HA4iIiIQKPRhEKmzFcIBAJ0dXUNuKlNJhMdHR1kZWWhVqtpb28nOTmZuro6PB4PmZmZ
      QZ3uE5YG0I8oiphMJnlAnszfJKwNQEZmMMLiDGC32wkDO5YJAWGxAsjI3Chh6waVkbkewmIL
      dC12ux2z2Sx1hk5OTh4wcbx/Esk3dZO7cOGC3D79JiKKIo2NjZSWlrJq1Sq8Xi/btm3DZrOx
      dOlS4uPj2bFjB3D1XPfss89iNBpxOBxs3boVq9XK4sWLyc7ODpqmsFsBlEolKpWKY8eOoVKp
      UCgUUo9QgJaWFlpaWr7x2ra2tlspdcjh8/nYvHkzp06dwu/3Y7FYmDRpEuvWrSM/P5+kpCR+
      /OMf89BDD2E2myV3dW9vLxMmTOCJJ57g4MGDQT3vhd0KoNfr0ev1REdHk5qaSk9PDx9//DHR
      0dEkJCRIAbLExESmTZtGRUUFfX198tikW4BGo+E3v/kNmzZtAiA1NZXExEReeuklJk+eLKWw
      bN26lUcffVRauUeOHMmwYcN4+eWXSU9PD6qmsDOAr2K328nOziYzM5OCggJmzZqFUqkkLS2N
      rq4uRo8eTV1dnexKvQUoFIoBW8++vj5effVVZs+ezb333otCocBkMnH58mWeffZZ6XVOp5P/
      /u//ZsaMGSxbtiyo+VxhtwX6KkqlEpPJhNVqxel0EhERgdVqpa+vj7KyMmJiYhgxYkSoZQ4J
      bDYbhw4doqOjg5KSEulrh8NBaWkpgiBw4MAB7r//fhQKBZ2dnbz77ruUlJTQ2tqK2+2mpKRE
      OscFg7CYEPNN6HQ64uLi0Gg0WCwWzGYzEyZMYPjw4ZhMJux2O6mpqZhMJgRBYOzYscTGxhIT
      ExNq6WGLw+HgypUrZGZmolarSU5OJikpCZVKRUxMDCkpKdIUz/7OD0qlkoSEBGJjY1GpVBiN
      RlJTU+UJMTIywSDst0AyMt/G1w7Bvb29AyZ5fx+Q26LI3ChhsQWSPTgyN8qgbtBrg0hfbTx7
      7Uzea78XBAGFQiEPp5O57RnUAIqKijhy5Aher5ef/exn+P1+/vd//5e4uDiee+45SktL+fzz
      zwkEAqxfv57W1lb27duH0WjkiSeeYNy4cbfifXyNxsZGdDrdgMHYVqtV9vLcRrjdbg4fPozN
      ZuPee+8lISGBsrIyamtrueeee6S/ncfj4fDhw1itVu65556g1ncM6gatrq5m5cqVuFwuCgsL
      KS8v58EHH8RqtdLU1ERUVBTLli1Do9FQWVlJXl4ed955JwqFgra2NrKysoIm9m9x7aBsQRAo
      KCggKiqKrq4uurq6GDZsGEeOHKG+vp7MzMybrkfm+qivr8dqtbJw4UL27t1LUlISFRUVLFmy
      hPz8fLKyslCpVDQ3N2M2m8nLy2Pv3r3MnDkzaBoG3aMsXrwYm83GkSNHWLFiBQaDgezsbHJz
      c6mtreWOO+6gubmZgoICFi1ahM/n47XXXmPfvn3k5uYGTej14nK5EASB8ePHM2PGDKmW9I47
      7pCKrGVuD/R6PV9++SUlJSUkJSVhsVgYMWIE8fHxGAwGaUJM/+vKyspISEgIqoZBDeDLL7/k
      zTff5Fe/+hWTJk3C6/VKGZcRERGcOXOGHTt28MwzzzBmzBj0ej3r1q1j6dKlIRlHdG3vf5VK
      JQ3Klgvhbz96enoYO3YsiYmJCIIwIMnt2kBXd3c3GRkZJCQkDDhzBoNBPxJ37tyJ2+3mwIED
      pKenM2rUKDZt2oTFYuF3v/sd//qv/0pycjK7du1i7ty5HDhwgGHDhmG1WoOatnq9aDQafD4f
      oijidDoHpELL3F50dHQwduxYJk+eTGVlJUajkQsXLgBgNpsxGAw0NzfT3t5OWloa06dP58KF
      CwQCgaCt5oO6Qb/pabPZTFRU1DfeXIIg0NraSkxMDEaj8ZY0orrWDSqKInV1dTQ1NdHZ2cnU
      qVMZO3Ysly5dwmq1kpycTEZGRlA7C8jcGD6fj/z8fJqamli3bh1Go5GzZ89SUlLCP/zDP6DV
      aikqKmLevHkcPHiQhoYGHnvsMeLj44OmIWzjAP1D12pra5k8eXIIVMl8HwhbA5CRuR7CwgD8
      fn+oJch8TwkLA5CRuVHkXAWZIU3YGkB/FVg/Ho+HtrY2ebsUYvqLYuDq1vXcuXMUFhbS1dWF
      IAhUVlZSWFj4Nc/e5cuXKSwsDPp8h7AzAFEUKSoqoqmpiYqKCq5cuYLT6eTo0aN0dHRw+PDh
      UEscsvj9frZs2cKBAweAq6n3bW1t6HQ69u3bR11dHVVVVeh0Oj7++GOp9LGrq0sqhdy/f39Q
      NYWdAbhcLnp7e8nJyWHOnDlUVFQQGRnJ0qVLmTp1Kh6PJ9QShyxqtZqNGzdKUfmEhASWLVuG
      0WjE5/PhcDiIiYlh+vTpiKIopULU1dUxZ84c7rrrLnp6eoIaCQ47AwgEAiiVSpRKJRqNRmqQ
      1dnZyaeffsr8+fNDLVHmr4iiSGFhIYWFhWzYsIFRo0ZhMpk4evQoly5dkgqdHA4HsbGxAEGP
      7IdddpharSYQCCAIAl6vl8jISFwuFwcOHGDt2rVERkaGWqLMX6mvr6e5uZkNGzZIDc0efvhh
      /H4/dXV1REdHYzKZyMjIoKioiIULF2K324OaXRB2blBRFDl79ixWqxWz2UxmZibDhw+nuLiY
      pKQk4uLimDRpkjwrLAR0d3fz3nvvYbFYSE9PJy0tjRMnTmAwGMjMzGTevHl89NFH2O12nnji
      CWJjY/n8889ZsmQJBw4coKamhkceeYTU1NSgaQo7A+jH7XbjcDiora3lBz/4QajlyNymhK0B
      yMhcD2FxBuju7pYHZMjcEGFhAJGRkbIByNwQYWEAcvcJmRsl7O6cQCCAx+OR/n2XpllyWvXN
      x+fz0d3dLZVAdnd309raKkV9RVHEYrEMSGMJBAJ0dHTQ2toa9FSWsFgBrsVms0n+5dTUVMaP
      H4/BYACu1plaLBYA4uLivnZtSUkJixYtuqV6hxJ+v5+XX34Zq9XKiy++iMvl4j//8z+JjIxk
      xowZrFq1CqvVyn/9138xcuRINm7cCMD58+f59NNPCQQCzJgxg5UrVwZNU9itAHFxceTk5CCK
      Ijk5OWi1WsrLyykpKaG3t5eysjKOHj3K8ePHaW9v58SJExQXF0thd5mbh1Kp5PHHH5dSIT77
      7DPmzp3Liy++SH19PYFAgPz8fBYvXjzguoKCAu68805eeOEFmpqa5Akx3wWz2YwgCEybNo3S
      0lLS09MRBIGUlBS0Wi1ut5vLly/T2toaaqlhT/9gkn7MZjPJyckoFAqcTicXLlzg0qVLzJw5
      k5MnT0ppLA8++CCvv/46X3zxhdR58JtmvN0IYW8Afr+f2NhYDAYDGo2GyMhIFAoF0dHRlJWV
      ERsbS3x8vOxFugUEAgHsdjs+nw+73U5WVhaNjY00Nzej1+ulVXjnzp3U1NRgsVhwOp2kpKTw
      9NNPU1tby+XLl4N280MYG4BerweuJk+dOXMGm82GSqUiPj6eU6dO0dfXh9vtxmq10tjYyIwZ
      M9BqtSFWHd60t7fz1ltv0d7ezgcffMCaNWs4d+4cf/jDH3jsscfIyclhwYIFOBwO9uzZg9fr
      5aOPPuLRRx/l/fffR61Ws27duqBqCotI8GDeG7/fj8PhkNq0+Hw+/H4/Op0Om82GwWCQXalD
      lP8HKuhfWSkjSYcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Yr Qtr Month Avg' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d6W9c53X/P3f2feNw30WJWik5jmwrjuMEbVM0SZegQNIiSBr0Rfvf9A9o
      ixZogfZFU7QFijr1L44XWbYsUaLEfedwFnJmOPu+3/t7wd7HpLfYEsm5w8wHMGyT0szh8D73
      Puc83/M9kqIoCl26/BYiSZKka3cQXbq0k+4C+AyKxWK7Q+hyRnQXwGfQarVO5HUURaHRaHzu
      95vNJs1m83O/dxq70y+KR5ZlZFn+3Pc9+ndlWf7c2E+a3/RejUbjCz+rL/o9GJ47ui6fSzwe
      5z/+4z/48Y9/jNFopFKpkEgkuHbtGnq9nn/7t3/j0qVL+Hw+7HY7hUIBi8XCwcEBdrsdp9NJ
      Op1maGiIWCyGx+OhVCoxPT39zDH9zd/8DX/5l3+J1WqlWq0SiUS4cuUKNpuNt99+m56eHjwe
      D+l0mtHRUYxGI41Gg1qtxu7uLi+88AKNRoO1tTWi0SiTk5MoioJOpyOXyzEyMoLT6aS/v//E
      Psf5+Xl2dnb43d/9XSRJolAokM/nuXbtGgB///d/z+joKK+++iqSJFEqldDpdMRiMarVKmaz
      GUmSMJlMDA4Osre3J+LrLoBT5PHjx9Trdebn5wmHw3g8HoxGI+Pj47hcLvL5PNVqlUAgwNra
      GrIsi8WRyWRIp9PYbDZWV1exWCwYjUaMRuMzL4CtrS1sNhvLy8usrq7idDqZmJggEAhw9epV
      tra2ePz4MQMDA9y8eZO//du/5aWXXiKdTnPnzh0kSeJf/uVfePXVV6lUKgSDQaampnj69CmX
      Ll3C6XTy7//+71y5coUf/vCHJ/Y5bmxssL+/z4MHD6hUKpTLZVwuF5cvX0av1zMyMkIul+Pe
      vXsYjUY2Nzf53ve+x0cffcTw8DA3btxgeXkZu91OLBZDr9eLbW53AZwiU1NT/M7v/A7ZbBaD
      wYBer+fdd99lcnKSa9eu8eKLL2Kz2YjH47z00kt4PB5sNhsGg4FGo0G9XsdgMLC+vs7c3Bw/
      +MEPKJfLzxyPTqfjr//6r0kkEkiSxIULF/jHf/xHvv/971MoFPjud7+LzWajVquxsrLCn/zJ
      nxCJRHjxxReZmJjAYrGwvr7O5cuX8Xg8XL9+nd3dXYaHh7l69Sqrq6u89tpr9Pb2nthnqCiK
      uLPX63Xy+TzxeJz5+Xlefvll+vr6sNvtXLhwgVwuhyRJfP/738dsNnPhwgVu3LhBLBbj1q1b
      bG9vMzk5idVqFa8vqWXQWq2GLMsnFngn02g0cLlcJ/66xWKRcrlMX1/fV/p7+Xyeer2O3+8/
      0XharRaRSISxsTEkSfqNf16WZRKJxIlub56FVCqFwWDA7XY/1+tIkiSJBdBoNLoL4P8wmUxf
      6oLo0tlIkiSJLZDRaATg7t27JJNJTCYTNpsNOHw6GAwGJEni937v957pzRKJBNFolL6+PlKp
      FC6Xi9HR0RP4MRCPNp3u84ta9XodvV6PXq8/kfc8LTY3N3E4HGQyGfr6+ohGowDMzMywtraG
      z+f7yk+Q0+LRo0c4HA76+vpIJpNMT08zPz+Pw+Fgamqq3eEdI5VKkU6nuXTpEvfv3xfbtE/l
      ADabTXxzf3+fS5cukcvlCIfDDA8PP3MABwcHzMzMsLKygtFoPNFSYyKRENUKRVEolUrYbDbs
      djvlcplMJoPH48HhcDA4OHgi73taqBe9z+ejVCoRi8VoNpvMzMzQ09NDPp/XzALw+/1kMhnm
      5uZwOBwAlMvlLyy1tgNFUXjy5AkOh4NLly6RTCZFEvypW+bjx48plUpks1n6+/u5d+8ekiTR
      39//XFuk/v5+5ubmkGWZRqMhnjjPy8HBAQMDA2SzWfb29igUCjSbTSqVCnt7ezSbTQqFAoqi
      UKvVTuQ9T5NsNks+nyefz5PNZrHZbKIcms/nyeVyp3I+8CysrKzg9/sZGhqiXq+TSCRotVoY
      DNqrrQwNDdFoNEgkEly4cIGhoSHgSBJ8FiiKgizLJ7oNkWUZSZJQFIVWq4UkSayvr+Pz+fD7
      /ej1eprNJkajUfy7k1B/PZ2Sk3RCvOo1o9PppDNdACfJbzpl7dLlN2E2myXtPau+JIqiPNNR
      vNbvUOpTUs2RJElClmXMZjOtVotarSaKE+2mVquh1+vF1thkMlGpVDCZTJosNjSbTQwGA+Vy
      WcTXsQtAJZ1OE4lExEGIz+cjk8nQarWw2+00m03cbjeJRAKDwYDZbCaZTDIxMUEqlcLj8Yg/
      qwVWV1cxGo2kUinxlNPr9Xzzm99kdnaW0dFRzSyAjY0NCoUCw8PDBINBXn/9dT744APcbjcv
      vfRSu8M7xvr6OuVyma997WukUil2d3eBcyCGczqdGI1GVlZWCIfDLC8vU6/XKRQKeL1eFhYW
      2N3dJZ1OUygUSCaT2O123n33XUKhEHNzc5pSf46Pj6MoCna7HbPZjCzLVCoVAAqFApubm5pJ
      gqvVKlNTUxwcHHD58mXgsNx8ViK5L4ssyywtLREOhwGoVCpcv34dOOMk+CSRZZlqtUq5XCYY
      DOJwOMSFLMsyQ0NDZLNZKpUKg4ODQhSlVgJ6e3tJpVLY7XbGx8fb/NN8TDQapVQqIUmSKO3K
      sozf7xfaoenpaU1s4RYWFkRp1u12YzKZiMfjuN1uRkZG2h3ep8hms0Jl29vbi91u79wkWF0A
      n6RWq2E2m5/rtev1umbusl1OD5/P17lJMPCZ5xJGo/G5JR0Oh+MLT5W7nB86dgHodDocDge5
      XI5IJEJ/fz9+vx9Zlo9dvIVCAafT2cZIvxrRaBSdTke9Xsdms7G7u4ssy7z00kt89NFHGAwG
      bt++3e4wAfj1r3/N+Pg4+/v7eL1eZmZmSKVSZLNZzUkhCoUCe3t7XLlyhffff1/IcDr+Nqeq
      NvV6PYuLi8zPz5NIJAiFQuzt7RGPx9sc4VejUCiwtbVFKpUiGAzi8/l4+vQpAD6fj62trTZH
      +DEjIyPMzc3h9XpFXPfv32dvb6/NkR1HURTu3r3L48ePgcMT7Pv37wPnYAGoyWAul8Pv94sn
      w97eHvv7+22O7qtTLBYJBAIUCgUCgQDZbJZCoUAoFCIYDNJqtTSTn6jNL6FQiGazyfr6Ojab
      jYODg3aHdgxFUbBYLCSTSXZ2dtDpdB+fs3RqEnwUVfwWDAYZHx8nEomIhWAymY41QHQa9Xpd
      VITUgyetaW2q1SpGo1GTh1+fRa1WU+M9/SpQrVb7zGrNSXBaoX9RY3iX84Pf7z9/ZdAuXb4s
      drv97MqgoVCIbDaL2+0mHo9z+fLl525pg0N9x8bGBna7naGhIVqtFvl8Hq/Xi6IoxGIxBgYG
      UBQFg8EgHAy0WuZcW1vDYrGIvl2v10symeSVV17hwYMHDA0NnVgj0fPy+PFjsdVMpVLcuXOH
      YDBINBrlzp077Q7vGJFIhEwmw8zMDI8ePRKf4ZktgEKhwMzMDB988IHQ6J/EAohGo4yNjRGJ
      RAgEAvj9fuLxOPl8nkqlgiRJZLNZMpmMaDifmZnR7AIYHR1lb28Pm81GvV7H7XazvLwMHDYr
      7e3taWYBWK1WzGYztVqNvr4+ms0m9+7dE80xWkGWZd555x3cbjczMzNsbGwIJfGZLYCJiQnm
      5uYYGxvD5/OdWCLX19fH5uYmVqtVZPbqHl5VKppMJvr6+nC5XJhMJs0lkUfJZrPU63VkWcZi
      sZDP5xkbGyOTyWAymU6sk+4kyGazjI+Pk06n8Xg8ZLNZfvKTnxAMBtsd2jEkSeKnP/0psViM
      ZDLJ9evXsVgsh9/r5gBdfls50xzgpJEk6bk1P126dPQCULc4qvbnN21t1CYaLbdFVqtVFEWh
      Wq0iSRJWq5VGo4HD4SCbzaIoCl6vt91hAof92KrFosFgwOv1Eo1GcbvdmulZUGm1WlQqFRwO
      BwcHB2IL1LELQCWbzbKxsYHT6cTj8aAoCg6Hg1arRTqdxufzkUgk0Ol0+P1+VlZWmJmZIRaL
      0dvbS7PZ1IzLAkAwGESWZbLZLLIsMzIyQjwe5+WXX2Z1dRVZloVTWrvJ5XIsLi4yPj5OIBDg
      u9/9Lmtra5jNZl599dV2h3eMhYUFWq0Wt2/fJp/Ps7i4CJwDKQQc2nMcHBxQqVSoVCrs7+8T
      iUTEP06nk2q1SiaTYXh4mPv371Mul3n06NGpOMA9Dz6fj2q1Kkq1vb29wpxWa+Xbzc1Nbt26
      hc1mE3dYq9VKPp9vd2jHkGWZvb09QqEQlUqFjY0Nbt68CXRwEqyibhUikYiQPOh0OjweD8Fg
      EL/fj9lsFsf1oVCIyclJwuEwXq+XgYGBNv8Ex8nlckL+oNPp0Ov1VKtVHA6H+Fl9Pl+7wwQO
      faOsViuFQgGr1YrVaiWVSuH3+zXTYnqUarVKs9kkn89jtVrx+XydexKsKEpXrtDludDr9Z1b
      BVITxS5dnoeOXQAq1WqVnZ0dhoaG8Hg8X/hnDw4ONJXwfhbb29vY7Xay2Sy9vb3C1W5ycpJA
      IEAul+OFF15od5gAPHnyBLvdLlw1xsbGePLkCTabTTTJa4V0Ok0mk2FqaoqVlZXP9wbtNNSm
      92g0ys7ODj6fj3w+j81mo1Ao4HK5SKfT4hRVtRtpNpvIssyFCxc0lQirUg6v10upVGJxcRGf
      z8fk5CR2u52VlRVu3bqliSqQz+cjm80SiUQYHR1lbGwMv99PKpVqd2jHUBSFhYUF7HY7U1NT
      RKNRId3WTknhGZEkif39ffR6PclkkmazSa1Wo1gsUiwWMRgM9Pf3i0OzVqtFoVBAkiRcLpem
      Ln44nAWgjgBSRw5JkkQmkxE+RlphbW0Nv99PX18ftVqNZDLJ6urqic8xOAn6+/up1+skk0n6
      +vrE9rljk2BVCqGaR6mO06qTmuoJevRwTD0wO/pntFRW/CzUZF+n02nW1U6rcX0earwOh6Oz
      k+B6vS7+/5M+oao50xeZNH3e93Q6neZ+mVoSwZ0nOvYJ8GX5pEuE1lFdro/KO8rlMg6Hg1qt
      JqYdagFVAqHT6Wg2m5hMJs22baqjVk0mk/BeNZlMnfsEUMnlcszOznLz5k1qtRqKoogDMafT
      SSwWY2Jior1BfgU++ugjdDqdqAbB4f71zp07/Ou//is+n48//uM/1sQT6q233iKXyzE9Pc36
      +jo//elPeeutt0in0/zsZz9rd3jHePToEVtbW/zkJz/h7t274gbTObfGz8HtdjM4OChmwyaT
      Sfx+P9FolKWlJc35VP4mbty4QbPZRJIkLBYL2WyWp0+f0mg0uHjxIplMpt0hChqNBq+99hpP
      nz4lHo/TaDRoNpu89tpr7Q7tGLIss7CwQCwWo1Qqsbu7KypV52ILFIlEcLlc7O7uMjIyQjKZ
      FMo/h8PR9qmGX4WVlRVxVK+6WScSCcbHx4X6Uis19nfffZf+/n6uXr3K7u4uer2enZ0dent7
      xRBrLaHGODIyok4W6lwpxGlSKpW6EzN/C3C5XKefA5ymLcpp0UlJc5fn49QXgNlsxmw2E4lE
      yOfzTE1NCd979UIrFovY7XZNJHZweLrcrgdjLBZDr9cTj8fR6XSi4efmzZssLCxQq9U0M3zi
      vffeY3R0lGg0KibH3717lwsXLmjOHr1YLLK/v8/09DSLi4uiKerMbnXDw8PIsszBwQGrq6vM
      z8+TSqXY2NhgZ2enu+X4P4rFItvb26yvrxONRgmHwzx48AA4dMDQUhvo0NAQT58+xePxsLOz
      g6IoZDIZ3n777XaHdgxFUbh37x5PnjwBDheueq5yZgtAkiQkSaJaraLX63G5XDQaDQ4ODsjl
      cmcVhuYpFosEg0FqtRqlUomenh50Op3oX1hbW9OMDPy//uu/uHz5MpFIhEajQTAYxGQyaU5e
      onqDqqORPB4PKysrwBlXgUqlkvi3zWajXC5TLpfxer24XK7uFugI6h1KlXPo9XrxNa15cB71
      Bq1UKlgsFs38Lj+LRqOBTqfD5XJ9XAUqFovd4/b/Q0sOzF1Oj472Bu3S5XmRJOnTZdD33nuP
      zc1N7HY7RqMRr9dLPB6np6eH4eFhbty48UxvFg6HyWQyeDweAoEA3/72t5/7Bzj62qr/51Fd
      iqr7V7cMrVZLaFe0+oheWVnBarWSyWQYGBjg4OCAWq3GK6+8ws7ODpFIhNdff73dYQLw8OFD
      9Ho95XKZCxcuMDw8zMLCArIsa6ZpRyUcDpNOp7l16xaBQIBYLAZ8Rhm0Wq1y584dksmkGNdz
      /fp1ent7SSQSzxxAPp9nZmaGlZWVE29Ez+fz1Ot1Maqn0Wjg9/splUq0Wi3K5TKtVguz2YzT
      6WRiYkJzYi0V1ed0dHSUcrksBk8DolNMURRNLGC73S5uNHt7ewwPD2OxWDQ3mESWZd566y08
      Hg/Xrl3j7t27YmzWp6pAxWKRSCSCXq9nZmaGUChEJpNhY2PjuUbfqN6gNpuNXC53YlNEisUi
      1WqVUqmEw+HA6XTicDjIZDLkcjkqlQo2m43BwUGuXbtGLBbT7MUPkMlkqNfr5PN5USDQ6XSk
      02kSiQRDQ0PtDlGQTqexWCxYLBZMJhOJREIY5WoJSZL4i7/4C15++WWy2Sw/+9nPxBPqtyoH
      yOVyohOsSxdJkjo3CZZl+VhDTJcuXxWr1drZ/QCqTECdAq/X60V7ZKei6qZUEyyz2Uw2m2Vg
      YIBsNqvWr9sc5SHJZBKLxSL8Qe12O4lEArvdrklvUDXGaDQqPsOOXgBwuK2JRqMMDw+TyWQo
      lUq4XC7cbje1Wg2r1Uqz2SSTyeDz+SgWi9hsNiRJ0lSDuUooFEJRFHK5HLIsk06nmZqaYmBg
      gPX1dVqtlmZ8N3O5HEtLS/h8PhqNBl//+tf58MMP6evr4xvf+Ea7wzvG0tISrVaLF198UZwI
      wzloiIFD9WYwGCSXy9FoNNDr9YTDYXw+H6lUSvjpbG5uYjab2d/fJ51Otzvsz6Snp+eYD6jT
      6WRvb49arYbT6dTU3OPt7W1u3LjB3t4ekUiEarWKzWbTnK5LlmXhF1utVvF4PGL73NE5QLVa
      FVsFWZaJRCKYzWZxd3c6nayuruJ2u8XcMJ/Px9raGhMTE5qcIK8uYjiUPKjyAqfTSalUwmQy
      nchoqZMgGo1isVjwer3HfDftdrtmYjyKGmMmk8HlcjE0NNTZSXCtVnumv6uVOnqX9mKz2Tp3
      AXTp8rx8phSi06hUKuRyOUwm02cOu6hUKsiyrEm77i9idXUVOLRFqVQq3Lx5k8XFRSRJemY5
      yknz6NEjYds+NTWF0+lkeXmZ3t5ezR2GpdNpUqkUly5dYn5+XlwP52IBqE3xateP6hKnzgmI
      RqMMDQ0xPDzc7nC/NOFwmFKpxGuvvcbi4iI3b94UZmBa2cL5/X6xn1aT9L29PXQ6naYWgKIo
      PH36VFz0FotFqBrORRXI5XJRr9cplUpEo1GSySSTk5PIsowkSUxMTJDNZtsd5lfiypUrjI2N
      kc/n6e3tJZ1OU6lUhGWKFlDv9qVSiVQqRSKRoL+/n0ql0u7QPoXqB5pIJGg0GmIxdHwOcHRQ
      hur4pVZPRNvb//lqaq2R5ItQF6+KJEkd4cHZCTGqn61Op+vcHKDVaokOs5NGHbTd5fzTsQtA
      kqQvpersRG9Q9Ul29Gtms1k4YWvFG1T1AVV7LoxGI+VyWchStMRRb1A1RujgBaCSz+eZm5vj
      xo0bwhtUnQGrnpyOjY21Ocovz+zsLDqdjkAggM1mY3R0lCdPnvDzn/+ctbU1Hj58yM9//vN2
      hwnA22+/TT6fZ3x8nGg0yg9/+EP++7//G4fDwQ9+8IN2h3eMJ0+esL29zY9//GNmZ2eFEUPn
      3Bo/B5fLxcDAgPAGTaVS9PT0EI/HWVlZ6Thv0KtXr4qYzWYzDoeDUqlEo9Hg8ePHZDIZzUgN
      Wq0W3/jGNzCZTMfK0Gq3lVaQZZnFxUXhX2qxWM6PFAIOx3U6nU6CwSDDw8OkUimh/LPb7Zoq
      yf0m1tbWjnmDNhoNqtUqo6OjDA4OEgwGGR8fb3eYALz//vv09vYSjUbp7e0V/kAXL17UVOOO
      SjAYFP6lg4ODvPDCC517Enx0AZw0WrBF6XL69Pb2drY36GldpC6Xq6MS5y7Pzpl5gxaLRQKB
      AOPj4wSDQfr7+09sa6LOBDhKoVBAlmVNqhK/CFVhmclkaDQaOJ1OqtUqFy5cYHd3l0ajwaVL
      l9odJgALCwtCCWq32xkaGmJxcRG32625wkO5XCaXyzE4OCgKDHCGSXAwGOTGjRuEw2E8Hs+J
      PhW2traIx+M8fvyYWCzG06dPKZfLRCKRE3uPsyQej9Pf3086nSYYDIphDoFAgJ2dnTZH9zF9
      fX1EIhE2NjaEhFv9mpZQFIWlpSXRS/H+++9TKBSAM1wALpeLp0+fArC4uIjD4TiR181kMtjt
      duLxOAaDgVwuh8Vi6ThLdpVqtcrBwQFvvPEG/f39tFotisUi6XRabPm0kp+88847DA0NMTU1
      xfr6OolEQnxNSyiKQqlUIhAICGcNVQt0pkmwenp7kj2tqi9ltVrl8ePH3LlzR4xLVSeYdzKq
      TaPBYBDlUa3ZujSbTdHB1gmo3qAGg6Fzq0DqNMUuXZ4Vo9HYuVqgT84J7tLlWejYBaBSKpVI
      JBLidM/v92M2m4UCtFMeyypra2tYrVZsNhuhUEgoF2/fvs3S0hJer1czfQ2PHz8Wn7Pf72ds
      bIytrS0ODg4041yh8uGHHzI5Ocng4CBzc3OMjo4C52AB1Ot10uk0brebQqFAKBTCYDDg9/sZ
      HBzsuBxgdHSUvb09PvzwQ6xWKy6XS2z1RkZGNDUm1WazYTQaRRVobGxM6Je0hupZOjg4SKVS
      EUlwxy8AvV5Pf38/5XIZRVGw2Wx4vV4ikQgXL15sd3hfmWw2S71e50c/+hEHBwckk0lkWSaT
      yVAoFKhWq5rpCEun00xMTIgLPplMUq/XNSPVUFEFkq1Wi2QyidPpFILJjk2Cv0gKoZrl9vT0
      nHFUXToJu93e2VUgragiu3QmBoOhc6tAkiQdG3yhtQaMZ0XtaTjaVyvLMj09PWQyGRRFwefz
      tTHCj1GLDzabjUqlgsPhIBaL4Xa7sVqt7Q7vGPl8nkajQU9PD6VS6ezHpJ4ma2trFItFMpkM
      +/v77O7uEo/Hn2ueQbsIBAIEAgHeeecd8vk8mUyG2dlZ4HB6Tz6fb3OEH5PJZHj48CGLi4ti
      6uLq6qoYR6oVFEXhrbfeEsYICwsLQhZxLhaAoigkk0kikQipVIpSqcTu7u6JDeE4S/x+P7Va
      jVdffZWtrS3cbjfNZpNarcY3vvENtre32x2iYHt7m1u3bhEOhwmHw1SrVaxWq6YWqYraqFOt
      VhkaGhL5Y8fmACrFYpFEIoHRaKRYLApVaKvVol6va7Ik90WoVSB1PKqa5zidTvL5PDqdjv7+
      /jZHecje3h5WqxWfz0e1WqXRaJBKpfD7/Sem9TopEokEsiyL7ZrBYKCnp6ezk2BVgXjSqOZT
      Xc43Lperc5Pg0+wI0+v1HXeC3OXZ6NgFoNqi5PN5dnZ2GB0dFd76JpNJHBSl02nNVE2+DCsr
      K9hsNpxOJ0tLS9jtdorFIt/5znf44IMPAPjmN7/Z5igPUSXbxWIRt9vNCy+8wHvvvUdvby/X
      rl1rd3jHePfdd/F6vdy6dYtQKCTylI5dACoulwuLxYIsyywsLNBsNoWloEonLYDe3l62t7dZ
      WFggn88zOTkpGmIikYjQ3mjhJHhsbExM3VTLtuvr65orSavbWdUoeXZ2VuSK5+Y5r5ozuVwu
      KpUKu7u7ZDIZTVwoX4VYLEYikeDixYvCaEqSJMLhMDqdTlPapgcPHjAyMiKGeOzu7tLb20u5
      XG53aMdQbTErlQo7OztcuXJFfK9jk+CjOYDqBF2v1zGZTNTrddX7saMaNT6Lo16bWvXd7LQY
      Vex2e+e6QiiK8pmmVyfhTKy1R3iX0+PMngDqxEOv10sqlcLr9Z7KONNO8wL9JKrGSfXc1Ol0
      VCoVsfVRzwe0gOoNqj6BjUYj9XodWZaF2lIrqOO0zGazOFvR6/VnVwbd3t7Gbrezvb2N2Wwm
      k8lw+fLlE3ntzc1NxsfHabVawlFBkiTN/RK+DMvLy5hMJoxGI9FoFJ1Ox9jYGHa7nWAwSDgc
      5rXXXmt3mMCh7KFYLAKHC/M73/kO9+/f58aNG5r77N9//31u3rxJX18f9+7dY2pqCjjDJLjR
      aOD3+8VUx5O8+9frdaLRKDs7OzSbTaGn6UQmJiZEpSISiRCPx3nw4AEADx8+ZH9/XzMq2Fqt
      xtTU1LEtbiQS4fHjx22M6tMoisLw8LAYO3Xt2jXxGZ7ZE2B6epqVlRV8Pp9wFD4J1DuQ6qHZ
      09MjpASdiCp3+NGPfkQ2m6VYLFIqlUin0/zoRz8ik8loZounjqIaHh5Gp9ORSCS4ffu25u7+
      8PEiSCQSZLNZcQPu2CrQF5HJZHC73Zq5ULpoE0mSOlcLdJpSiC6/HZxJGfQs+DJyB63Wpz9J
      PB7HbDaLifF6vR5FUbhw4QLBYJB6va4Zb9Dl5WU8Hg+NRgOz2czg4CArKyu4XC5GRkbaHd4x
      1CLMwMAAq6urol32XOwRdnZ2ODg4IBaLEY1G2draYm9vj3Q6TTQaZX19nUAg0BH9AYqicHBw
      wNDQENlsFqfTyebmJnAok1BlEVrA7/cTDocJhUKsr6+Lr2nNGxRgY2ND5IXRaJSNjQ3gHGiB
      stksNpuNRCIBfOwYp+rTG40G9XpdczKCz0Md5dlqtbh06ZJog8xkMrz33ntiXrAWnmR3797l
      zp075PN5YrEYyWSSu3fv8vLLL7c7tGMoisLU1BQbGxtYLBacTuf5mRBTq9UwGAxUq1XS6TQu
      l4udnR18Ph86nQ6v18vBwQGjo6OkUikGBgbaHfpXotlsoijKqRwanhTVahWz2ayJRfl5HPUv
      rVQqWCwWHA5HZyfBp9UQ0+W3A4vF0rkLoEuX50WSpM6vAhUKBXZ3d5mcnESn015Zq+kAABWU
      SURBVGE2m6nX61SrVWw2G4qiYDKZxAm0LMuUy+VjzTOq/bgWWFlZwWq1inkAbrebSqXCzZs3
      SSaT7OzsaGaPPT8/Dxwmvslkklu3bjE7Oyu8TLXEvXv3mJycZHh4mEePHokJNtr4rT8H6kUd
      DAaFHl21wbt48SLvvvsuExMT5HI5bDYbdrudZrPJ+vo6xWIRp9PJ8PAwExMT7f5RgMMmk0gk
      QrlcJplMcvv2bWEz8r//+79YrVZu376tiUM+s9lMPB7nyZMneDwebt26hcPh0ERsn8RsNrO/
      v8/w8PCx6UEdvwDUxKbZbDI8PIxer6dWqzE4OMjBwQG9vb0MDQ1htVqx2+3UajVKpRI+nw+7
      3Y7ZbNbMxQ+Hp9j1ep2RkRExgrTRaJBOp/nzP/9zotGoZpLNer1Ob28vr776KvF4nEQiQTKZ
      1NTnCYdVIKvVSrPZJJFIiC5C6OAq0OeRy+WeezDeOftIunwOOp2uc3OAVqslBp19EtUB7FnR
      itqyy+nTsQtAkiRMJpMwwDIajRgMhk8dEjUaDU3X0D9JrVYTdugGgwGr1UqtVsPv93NwcIBe
      r9eM63U4HBZemyaTCbfbTTqdRpblT42tbTdHP7tEIiGKHtrLVr4i1WqVhw8fkkql2NraYmtr
      i2Qyyf7+PtlslnA43O4QvxJLS0vMz8+Ty+X45S9/yd27d3njjTcA2N3d5c0332xzhB+ztrbG
      m2++yZtvvsm9e/cA+Kd/+ifhu6kVFEXhf/7nf0Ti+3d/93dEo1HgHCwAu91Of38/tVpNlAx9
      Ph/pdJrd3d12h/eVGRoaolgsUqvV+Na3voVOp8NkMpHP57FYLBiNRk3kKIqi0NPTQ7lcxmQy
      odfryWazDA4OsrCw0O7wPsW3vvUtdnZ2yGaz/Omf/qkwHO7YJPioHDqVSuFwONjd3WVsbIxo
      NIosyzgcDiwWCx6Pp83Rfnn29/ep1+t4vV7cbjepVIpyuYzL5SIajWKz2TQxhV1RFJaXlxkc
      HKRcLmO1WtHr9ZRKJcxmM729ve0OUaAoCtvb27hcLoxGIwcHB/T19TEyMnL6J8HNZvNUurMU
      RRGNzieNqr/pcr7p6+vr3CrQaTa9m0wmTR7mdDl5Tn0BGAwGDAYD4XAYs9lMs9kkmUwyNTV1
      IvLkVqvF5uamONFVKyhqpWRvb08zY0W/DGtrayQSCRwOh5hy+cEHH/AHf/AHrKyskE6nNeMK
      8eDBA7H/r1QqvPLKK9y/f58LFy5oxsIdDncLs7OzeDwepqenCYVCIgk+sydAPp/n2rVr3L9/
      n2g0itVqPZHOpr29PYaGhgiHw+KULxQKiQ6xarVKMpmk2WyKTqvbt29jNpuf+71PA7fbTTab
      ZWRkhHK5zNbWlijjut1uYQKgBZxOJ4lEQljSwKH5gZZihI8HqKi+qjs7O+IJf2bP+aGhIZaW
      lhgaGuJ73/veiSVyfr+fYDCITqfDYDDg8Xhwu93iXMDlcmE2m0XfwPT0tGYvfoAnT55gt9vZ
      3d1ld3eXK1euCI8g9XtayU8KhQI2m42nT5+Kwd5LS0uaG00lSRIejwedTkcwGOTKlSuYTKbD
      751lFeio69lJok5TP/o+n6eX0YqOpkv7OXM59NHJjs+LLMunVgXq8ttDx1aB4PBOrz5VVDfo
      3/TnW62WZrT/n0Wj0UBRFMrlMjqdDpfLJQR++XweWZY1c64Rj8dxOBxUKhXMZjNOp5NWq0W5
      XMbpdLY7vGOoOYBqzKbS8bW+fD7P4uIi29vbJBIJEokEpVKJQqFAOBymWCyytrbG1tYWhUKB
      2dlZyuUy29vbFItFzTlFbG9vEwgEmJub4+HDh+zu7vLee+8BiPi1QrFY5MmTJzQaDR49egQc
      Sjnm5ubaHNmnefTokUjU79+/L3YPHb8A1BPfRCJBPp8nn88TiUTY3d0lmUwSCATweDzU63VS
      qRSjo6Pcv39flMa0dqcaHR1FkiQkScJsNhOLxYDDJ8PBwQE3b95sc4QfozorVKtV7HY71WqV
      fD6vua2poijcuHGD+fl54V6tzjXueClErVZDkiSi0SgGg0FshdxuNwcHBzgcDmw2m7DyPjg4
      wO/3k06nsVqtmnOJUDvVPB4PBoOB8fFxEokEOp1OnKVcuXJFE8n8/Pw8vb29wr/IZDLR399P
      IpHQnBRiY2MDp9OJXq8X+qXp6enObYqXZVncgbp0eRasVmvnLoAuXZ6Xc+EKUa/X2d/f/1LT
      ydXhGVpmfX2dUqmEzWYTk1eKxSIvvfQS6+vrNBoNbty40e4wgUMphMfjEVNrLl++zNzcHJOT
      k3i93naHd4zl5WWMRiPT09PMzc0JpUDHLwDV2SEcDiPLMna7nWw2K5qgLRYL6XQaQOiQVNeI
      SqXC+Pi4ZsqKcHhi/ujRI9Hor85VgMP5Z6pSVQs5gMPhIJlMilIowMjICPl8XlMLQJZlAoEA
      Fy5cABCmCHAOqkCSJIn5uXt7e5TLZeGikE6n0el09PX1CQeIRqNBLBajUqlgs9k0dfHD4fBp
      tVadzWZ54403kGWZaDRKsVjU1OjXYrEoLCkLhQKhUIjFxUXNTeeRJAmr1UomkyEUCgmLFOjg
      KtBn0Wq1hE+QOrzt6KGXLMsoioJOpzsVSUaXzqKjc4BWq6U51WGXzqNjF8BJD9rr8ttJxy4A
      lXK5zNraGlNTU+j1egqFAk6nUyyQ/f19zTmVfRGzs7OEw2Eh75YkiWKxyJ/92Z/x/vvv43Q6
      eeGFF9odJgD/7//9P8rlMkajkWvXrjExMcEvfvELvF4v3/3ud9sdnkBRFH7xi19w8eJFXnzx
      Rd566y0ymQxwDpJgm82GzWajUCgQjUYJhUKikWR5ebnjTK70ej3Dw8NUq1UcDgcul0uI/K5f
      vy70LFpgeHgYg8HA1atXhSDRZDKxvb3d7tCOoSgKsVhMJOfValWY93b8EwDA4/FgNBopFotM
      Tk6K2Vput/s3ng1ojUgkgsvlYmpqilarhdlsZnx8nKWlJQqFgpgY0+5KkKIoRCIRhoaGhP1M
      NpvFbDZr6u4PCLdqi8XC48ePyeVyoiXy1KtAp/Xy3SmRXZ4Xh8Nx+lWger2uOXVgly4qp74A
      zGYzZrOZUqlEtVrF4/Gg1+uRZVnsbYvFIna7ve2PdS2QzWZpNpvCXlA9s7h+/bo4If7a176m
      ic9qYWEBj8cjpBvj4+MsLy/T09OjOZXt/Pw8FouFy5cvi60knGESrNPpCAQCRKNRdnZ2+OCD
      D4hEIqysrBAIBDouWT0tdnd3WV9f5+nTp8iyjMlk4sMPPwQOHRe2trY0cfHDYcL+4Ycf8uDB
      Az766CMAQqGQaODRCoqiHGvSefvtt9nZ2QHOcAFYrVasViulUol6vc7Q0BB6vZ5isfjcdubn
      CbvdTjweZ2pqipWVFer1Oq1Wi2AwyOrqKq+++mq7QxT853/+J1/72tdoNpuYTCa2trbI5XKa
      WaBHuXLlCktLS6ysrIhuQThjKUS1WqVer1Ov17FardTrdcrlMm63u7sF+j/29vao1WrYbDZh
      56Ia5DabTU3Zjm9ubmK1WjGZTJhMJjG50+l0YrPZ2h3eMaLRqBiP5fV6KZVKOJ3Oj/sBisWi
      pmrMX4ZzJGPq0ga8Xu/HVSC1Xv6bLqrnuUur9euTqGN3y6BdToJPVYF+9atfEY/HMZvNWCwW
      bDYbqVSK4eFhkskkP/zhD5/pjdTJh6qN+UnuZVW76/PA2toadrtdDMMzGAy0Wi1u377N/Pw8
      jUZDMyNIZ2dnMZlM1Go1Ll++jNvtJhKJEI1Geemll9od3jHeffddRkZGuHjxIo8fPxZVqk8t
      AK/Xi91up9Vqsb+/j8/n4+LFi5RKJUZHR585gFwux7Vr11hZWTnxET/pdJparUYoFMLtdlOt
      VhkaGqJcLiPLMsViUZRdfT4fIyMjmvUGGh0dZW9vj2w2iyRJwtMeEOVjLZwEw6E3aDKZZGxs
      TDTqBAIBTTpr+3w+SqUScFhp+9wRSZlMBpvNhizLXLp0iVwuJ1ydn8eOXPUGVZOjo+ZEz0Ol
      UkGWZUqlEl6vF6/Xi9/vF95A9XpdOC1fvXqVg4MDzV78cPjLiUQiOJ1OvF6vSC5jsRiNRkO4
      YGiBQqGA1WolEokQCAQIh8NMT09rTqWrmqfJskwkEmF4eFjkux3rDarmAKo7HCD8dNTvH803
      JEkSUyW15gXUpT3Y7fbOdYU4euF36fIs6PX6zu0IU+/qiqKIMak6na7jxqJ+EtUbtF6voyiK
      2Furg/9UlasWSKVSmM1m6vU6ZrNZHOLZ7XZNqXAVRRGxOp1OUqmU2IVoL1v5iuRyOSKRCMVi
      kd3dXZaWltjd3aVUKnFwcEClUqFQKLC6ukqpVGJvb498Pv+5Q7bbzebmJtvb2ywuLjI3N0el
      UhEyg0ajwf3799sc4cekUinm5uZYWFgQ3qBa8y9VqdfrPHjwAEDITOAcLABZlkmlUuzs7Iic
      QJIk1tfX8Xg8HBwcsLm5idFoZHl5GUVRCAaDwnNTa4yNjYnGErX4oJ6wqh6cWtn6hUIhvv71
      rzM2NkaxWBSn/FpJ0o+iluDr9ToTExPMz88D56Ahxm63c+vWLWHPoRpKTU9PYzKZqFQq9Pb2
      Uq1WGRsbE7NttXpuEA6HKRQK9Pf3i63Q1NQUuVyOSqXC0NCQZi4ws9lMKBRCURReeeUV0um0
      iFdrqJ9dOp2mXC5z9epVoINtUdSK0rNQLpc1p1XpcvYYDIbOTYKfZ06wXq/vNul0Ac7BFqhe
      r1MqlTAajbRarU9VSKrVKq1W60RGsp4li4uL6PV6XC4XxWKRK1eusLW1RaPREI/vdvPo0SPc
      brfwBr106RKZTIZoNMq1a9faHZ5AURRWVlbQ6XRcvXqVR48eMTg4CJyDBVAqldjZ2cHr9VIo
      FFAUBZfLRbVaxWg0YrFYiMVijI2Nad4Y9yixWEyMdBoZGQG05w1qt9tJpVJiOIaiKKyvr7c7
      rM9kYGCAzc1N4FDtkMvlgHNQBZIkCYfDQbVapVKpUKvViEajjI6OUq1WMRgMTE5Oiha4TkGv
      12OxWOjp6SEcDhOLxUQrnxYufvjYGzSTyQhvUJ/Pp0nHvjfffJOenh4hM1H7Kjo2Cf48OfTR
      gzDVXlwrF0wXbWG32zs7CW40Gp/5vaNf7/Yad/kiOvYJ0KXL89LR7tAqpVKJ5eVlpqenMRgM
      5PN5XC6X8Abd29tjcnKy3WF+aT788ENh7R6NRhkeHmZxcZG/+qu/4t1338XlcvHiiy+2O0wA
      fvnLX1IqlUSV7Q//8A+5f/8+hUKB3//93293eMd49OgRq6ur/OxnP+Of//mfz8+ADLvdjt1u
      F+NRA4GAmA28sLDQcX3OMzMzNJtNdDodY2NjjI6OigaTmZkZTf08w8PD6PV6ms2mMDm4d++e
      5mYvy7LMr371K/b29oBDuYmqBTsXW6BoNIrRaCQej+P3+6nX66TTaZxOJ06nU1MjO38T9+/f
      Jx6PU6lUGBwcxGQyUSwW6e/vp1AokE6n+aM/+qO2J/aKovDGG2/Q19dHrVbDaDQiSRK3bt1i
      d3eXy5cvtzW+o6j54tOnT5EkiUwmw/j4OFeuXDn9foBzsL66nFN0Ot3ZeIOehnuDKhTr0uV5
      ODNv0GKxKJK6cDiM3+9/rub4o+cAhUIBh8NxbFtQq9Wo1Wq4XK7n/hnOErVXOh6PYzQaGRsb
      IxAIMDU1xdbWFnq9XjNJ/dOnT+nv78dgMOByuTCbzayvr+NwOBgeHm53eMeo1+vkcjl6e3up
      VCqkUingDJPgUCjEhQsXCAQCeDweyuXyib328vIy6XSaxcVFYrGY+H91EmAnkU6nicVieL1e
      QqEQ6+vrwsdS/ZpWcDgchMNhQqGQOP31er2a7LVYWloS18PS0pKwRjyzBWCxWNje3kav17O4
      uHhic2Tz+bwYI6ooCoVCAaPRSLPZPJHXP2tsNhvFYpFyuYxer6fRaIiutnK5jMFg0ExeZTAY
      hDN0sVgkl8tx//59zfUDqFYymUxGjM5tSxWoWq0Ki/TnRd0C1et1caEsLi5y48YN0e8py/Jz
      Wbm0g/39fdFjazabj/nZFItFDAbDifsqPSuhUAiv1yv0SW63m0QigdlsFgI+LaFeLy6Xi1Kp
      RF9fX2e7QnxSCqEVlWSXzsBsNnfuAujS5Xk5F1KIcrlMKpXCarXSaDREo0OnsrKyInT2FosF
      SZI4ODjg29/+Nk+ePKFer/PKK6+0O0wAPvroI8xmM5lMhuHhYS5fvsyDBw8wGo2akWvA4c5g
      dnYWj8fD9PQ0Dx48wGQyAeegIaZarQoP00KhwNraGlarlb6+Pnp7ezvOBW5sbIxIJEI8Hqen
      p4eRkRE2NjaAwx4BNQnWwlZPLX0CIk856mWqFRRFIZlMitzQ6XSSSCSAc6AFMhgMDA4OCqc4
      j8dDX18fwWCw4y5+gEAgIBpL4ND3yOFwEI1GxaGiFi5+OJwRVqvVROdaKBRiYWFBcweUkiTh
      8XiQJIlQKCQ8TeGcaIGOIssy9XqdYrGoqWkqXbSHJEmdmwTLstx1dujyXNhsts5OgtW1e3Tk
      aqejOsGVSiX0er3wP1Lr7apThBbIZDJCrWoymfB6vWSzWSwWi+bOX9LpNJIkHYsRzkEOALCz
      s0OlUqFYLBKPx9nd3SWdTpNOp9sd2ldma2uLQCBAvV7n4cOHlMtlHj58CBy2eqr/rQWSyaSY
      WqOOIX38+DFLS0ttjuzTPHjwQKgDjsZ4LhZAs9kkmUwSiUTIZDJUq1VRSek0RkdHkSRJ+ICq
      NiiqN6jNZtOMFCISiQhbylu3blGv1zXpuKcoCjMzM8zPz38qxo7eAsHHpqdGo5FqtSqaX8rl
      smaqJV+FSCRCoVDAbrczMDBAo9FgYmJCeIMODAxo5ucymUxEIhExlUct3WpFqnGUYrHI1atX
      yWQy+Hw+cZ10bBLcarVObMxSl99OfD5f51aBnscct0sX6HBzXEmS0Ov1lMtlotEovb29whLR
      bDaLbUIqldLkI/nzWFtbw2Kx4PF4ePr0KXa7nUqlwuuvv86TJ09QFEUzMoNf//rXeDwe8vk8
      er2e119/nXfeeQefz8etW7faHd4x7t69S09PD9evX+ftt98WHrIdnwRbrVYqlQr1ep2lpSWe
      PHnCzs4O6+vrbG5udpwlosvlYm9vj7t37xIMBhkYGBB+m7/+9a9JJpOaSYIHBwdJJBLcunVL
      NDhtbGywtrbW5siOoygK4XCYSqUCHMatOld0/AJQZ4UVi0UxV9dmsxGNRju2DKo6Q+/t7REO
      h6nX68zPzzM2NiZa+bTAP/zDP+BwOPjggw94/fXXmZ2dFYO9tYbP5yMSiTA7Oyvihg5Ogj8L
      dVieWu/Vmiiri7aQJEn6/1EaUoSgdMC4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Yr/Month Breakdown' width='192'>
      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
      i8vlEopelUqFQqEg1qOyLOPz+Q5F0cbc3Bzvv/8+DQ0NvPPOO/j9fgqFAhMTE5w6dapm/ZTL
      Zf7iL/6Ca9euoSgK/+N//A8ikQiBQIB3332Xnp6eA6Vd5PN5/vqv/5pEIsGJEyeYnZ3lrbfe
      oqOjg//3//4fHR0djI2NMT4+zsDAQE33AKurq/zjP/4jV69e5Sc/+QkajQav18t7772H3W7f
      Vz7X3Nwc169f5+TJk7z77rvcv3+fhoYGfv7zn9PY2EhzczN///d/z9TUFA0NDaL++O/+7u/+
      S12jQHq9nr6+Pvr7+wkEAkxNTeF0OllbWyMSibCysoLX6z00KtEOhwOfzyfuLOPj45w7d67m
      hh0fffSRyFVR9zC5XI5AIMDAwABLS0sHaj+TyaDT6VhcXERRFDo6OohEIlgsFq5evSqEo/R6
      fc3rNk6fPi3OMF566SWy2Szb29t873vfY2xsbF9tVqtVkU/04osvCid5tWZbkiSy2SypVEqc
      N6l5TociDAoPc1JOnTqFRqOhra2NRCJBPp+vmXdsLVDdz4vFIgMDA5w8eZL19XU2NjZEfnkt
      aG9vJxgM4na78fv9DAwM4HQ6uXLlCslk8rFMzv3Q2trKmTNn6OnpYX19nWQyyYkTJ1hZWWFt
      bY3V1VVxJ65lmjfA7u6ukGVU6wEaGhq4d+/evj3WVOva6elp/u///b8MDw+LbN3l5WVRF9DQ
      0CBqIFTfs7onw+XzeWRZRqPRCLeSra0tbDYb0WiUrq4utFrtoVgCZbNZcrmcMMaz2+2ivNNg
      MNQ0G7VaraLRaKhWq0KyXL2G1tbWA63LVa0hu93OzMwMZ8+eJZPJ0NbWJhxWJEkil8vR1NRU
      c4cYNXFNLWpSfddaWlr21Ve5XGZ3d5fBwUFxpgEPw7ltbW1CVbxcLgunHa1W+5shjahaGB1x
      xCdxOBy/DIM+b6Ps5zXvNBrNcyuUOeLLx6c+AbxeL6VSia6uLlwuFydPnsTlcmGxWOjo6CAa
      jR5Yo/7LTiqVEsU5qrFHLcnn8+J0WXWJMZlMQv7jiyYOPolsNotWqxUVdolEgpaWFtLptNgA
      R6NRWltba54PpIYsHzXJSyQSwrVlP6jXr6ZZqMaOFosFnU5HLpejUqnQ2NgotKWemA3qcrmY
      np6mpaWFzs5OdnZ2aGlp4Z133uFrX/saDx484A//8A/3fbGfZGFhgePHj6PT6dDpdKRSKVpb
      W4U3gJrQZDQaKRaL6PV6UQFWD3GsRCLB1NSUWCs3NzfT2dlZM+vYfD7Pn//5n/Mnf/InwMPk
      uNnZWU6cOEFTUxM9PT0HmgCyLLOyskIsFuOb3/wm8/PzVCoVDAaDKMNUhbhU34Vasbu7y/37
      9/n93/993n//fVHVJ0kS0Wh0X+HkO3fukM1mee2119jY2CAcDmOxWOjs7BRllz6fj7m5OU6c
      OIEkSezs7ABPiAIlEgnOnz9PW1sb586dI5PJ4PV6efnll7lw4ULN73alUgm/38/09DSrq6tk
      MhnW1tbw+/2srKwQCoWYnJxkc3OT3d1dlpaW2NjYqJsyhE6nIxKJiHylcDgs3tBa8OGHH2K3
      20kmk5RKJSYnJymXy9hsNra2tggEAgdqX81dUq1mh4aG8Pl8mEwmEdb1+/2srq7WXBu0v79f
      pI1fuHBBHMJduHDhM40TP4sTJ06wt7cnAhRGo5GWlhacTifRaBRJkjAajcRiMQqFAhcuXBC/
      +6kT4MGDB2xubmIymfjZz35Gf3+/OLCanJxkY2Nj35l7j6IoCn6/H0VRCAaDFItFtFot7e3t
      FItFYWXj8XiEE/ipU6ewWq1ks9kDLwP2i2roodfrOXHiBAaDgdHR0Zq1/8ILL9De3o6iKESj
      Ub7yla9gs9kolUq0tbXtO21YRZZl5ufnsVqtrK6ucvv2bbq7u2lubmZ2dpZSqURPTw/t7e01
      PwUOhUJEIhFCoRB+vx+/34/BYGB8fHzfNQ6pVEp4HKsOMUajEYvFwt7eHi6Xi0AgQFtbGzab
      jQcPHmAymYA6Z4PKskwkEqG1tZV4PE5DQ4NILS4Wi0J2RE2dVXO+V1ZW6OrqErHceqA6xKgH
      Vc9rMqq1ErXC5/M9tnR71PlGXas/axRFoVwuHyilfG9v77GViZptoL5XagmuVqsVfdVVGvEo
      Qe2IeqPVausnjXikCnHEYaDuqRD5fJ5sNiueCPvdCD1P1D1LLBajXC4TDodr3kcwGBR9hUIh
      gsEghUKhZg4xyWRS7CVyuZxwU/F4PESjUdLpNFtbWzUPNFSrVfF+BYNBIpGIKPrZr01qqVQS
      1x+NRkW+ViwWE7lMkUhEhPcfzS+r+wRYXFwUxga7u7s4nU5cLhflclmIHOXzeVGhpNr3xGIx
      UqkU+Xz+uUus5PN5NjY2kCSJUCj0mIxhLUgmk/yf//N/AMRGeHJyktu3b6PX61lYWDhQ+4qi
      cPfuXeLxOIBwU5mbm2Nzc5MHDx6Qy+XY29s7cMTpkwSDQe7du0epVGJ9fZ2ZmRlx5rDfvu7e
      vYvX6xXfmdXVVRKJBB9//DGJREJs+qemppienqZcLovwed0ngCRJaLVapqam2N3dJRQKiRK5
      5eVlGhoaCAaDIqS1tLQkPJ62t7fZ2tp67tes0+kwmUyMj49z7NixminCqbz77ruYTCZ8Ph+S
      JJHP5xkcHKSvr09opx4EjUbDxYsXxc82mw2fz8eJEydEnk5jYyPb29s1V9vr6emhq6uLXC5H
      V1eXKGWNx+P7Til/8cUXSSQShEIhMpkMHR0d3Lhxg2KxiNvtFhWBsiwzNDREOBxmfX0dOASq
      EM3NzfT19VEsFsnlchSLRTY2NnA4HJjNZnQ6HRsbG1gsFrLZLCaTCbPZTHt7O9VqFb/f/9SK
      YAdFlmUqlQqtra34/X5kWSaTydQsLfpHP/oRKysrdHZ2Eg6HhfJFc3MzkiRx7VCdybgAACAA
      SURBVNq1A7WvLuE0Go3QX3U4HGSzWaHbqUrP1PqgMRwOi6e23+/HZDKRzWaFTMl+CAQCKIqC
      wWAQWQrf+973RNWh3++noaGBSqUiVgtqdOtLnQzndDrp6urCYrHU4Kp+M0mn0wfSGDosPJo6
      8kWpazboQQ9zjjjioJhMpl9/VYgjjngSh8IoOxgMigINtVrnkyiKwt7e3nO+ss9mZWWFra0t
      gsEgExMTNT/Ym5iYAB4+LcfHx1ldXSUWizE2NlYTh5jFxUXhlOh0OpmcnKRQKDA1NSVyrh48
      ePBMaykWFxeFQcrk5OS+w6DRaJTr16+Tz+dZWFhgenqaXC73mJ9ypVJhZWWFSCTCxMSEMFOp
      +wRQs/cWFhbwer2srq4SDAbZ3NzE6/WyvLxMOp1mYmICl8tV78sFHopWzczMoNFoWFlZ4eTJ
      k0xOTtasfbfbLepjJUnC4XCwtbXF/Pw858+f5969ewdqX1EUstms2CS2tbWRzWZZX1/HYDDg
      drvp6OjAZDId2JP4SahnAbu7u9jtdkql0r7PU5aWlkSazNDQkPAMfvSGOjMzg8/nw+VyUSqV
      DpdDjMfjwWq1UqlUSKVSrK2tkUgkaG5uxmQyYbVahWfuYaBarXL8+HERj9dqtTV9Aqixaq/X
      iyRJ2O12cSfW6XQHFvr6pEOM1WrFbDaTTCYxGAxoNBpcLhdarbZmgr+fpK2tjVwux9bWFgaD
      AaPR+MQVwOfx8ssvUyqVWF1dZWpqinPnznH8+HGRB1QsFkX4PBQKceLECdFX3cOgFotFZFfm
      cjkKhQI2m43m5mYhftvS0oLVaq1b9ucnaW1txWQyMTg4KJSHX3755Zq1/7u/+7u43W66uroI
      hUI4nU6GhoZwOByMjY0duC/1cE2SJFZXV+ns7ESWZS5evMjS0hJdXV2i1jmdTj+TemxVG+qr
      X/0qOzs7yLIslDCeFrfbTTwe5/Lly2SzWWKxmKinVsPU//7f/3tCoRDFYpHd3V0xsY82wb/h
      1Dq7tF7sxyGmbtmg6kHSEUfUE6PRWD+DjKMJcEQt2Y9DDByCTXA+n2d7e/tXXlftUmtdklcL
      SqUSCwsLXL9+HVmW+fnPf17T9h9tU1EUZmdnWVtbY3t7m/Hx8QO/J6pDjCo6trCwwM2bN8lm
      s0xNTXH//n2cTie3b9+uefg5Fovx0UcfoSgKMzMz3Lx5k2g0eqDIlsvl4sMPPySXyzE9Pc29
      e/fY2dlhbm5OZBovLCzw4YcfEgwGmZycPDxRoHA4LEofJycncblcrK6uCjvLwxL5eRSDwcDQ
      0BBms5mNjY2af0lUtTZ4eGcbGxsjlUrR2dkp6loPSldXl2gnFovR29vLxsYGjY2NJBIJBgYG
      MBgMNa/baGhoEKkrp06dolqtYjKZDuSvEIvFMBgMojQ1k8ngdDpJpVIil2l4eFgYrSSTSSEB
      dCgmQENDA263W9QC53I5jh07tu+w2PNAjcmHQiESiYRQU6gF4XCYeDyOz+ejVCpx8uRJEokE
      xWKR4eFhcYhzUDKZDLlcjpGREdbX17HZbNjtdqrVKtPT0zQ1NR1IquTT0Gg05PN5isUiP//5
      zzl//jx6vZ58Pr/vyXbixAm0Wi2rq6vcuHGD8+fP8/LLL3P8+HHW19fJ5/O8++67nD17lkKh
      wMmTJ8VNq67JcGpWosPhYGNjA4/HI5QCHA6HqPQ/qBbms+DRGtRkMlnzUGEymaSxsZFMJkMq
      lRLykZlMht7e3gMlACqKIpZRPp+Pvr4+stks3d3deDweGhoaaGhoIJ/P097eXhNLJpVkMinO
      ePb29tDr9dhsNmKxGC0tLft6H9VQ8dWrV0WWq8FgIJFI0NPTI0TfJEnCbDYTj8fp6Oigu7v7
      8Egjlstl8Tg84ojnQV2Nso9si46oNzqd7igbdD88OoFVpxONRlMzDR21fbXNT+vroKhtPirt
      8iTnm1prA6l9qX+XJIlqtXqgwqZCoYDJZEKWZfEeqaFRdSzqz2r/Go2m/kbZMzMzjI6OCq0f
      h8Px2Bt+GKyRPkm5XGZtbQ2n08nFixfF0fpBqpoeZXx8HLPZzODgIBaLhbt379LV1YXZbOb+
      /fv83u/93oHal2WZu3fvUq1W+epXv8rc3ByRSITz588TiUTY3d3l29/+Nj/96U/59re/XVMD
      kN3dXaampvjBD36Az+djZWUFm81GuVymp6eHgYGBp25zbm4Or9fL1772NZaXl4WHQjqdFoYc
      t2/fprGxEYvFQi6XY3BwEDgEUaBqtUowGBT+wGtra8zOzrK6usrKykq9L+9TMRgM9Pf3093d
      zeDgIOVyuWZffvjlJlXVug8GgwQCAbq7u2uy2dZoNI990SKRCG+++Sbr6+v09PTQ0dHBxMQE
      AwMDNVeF6O/vp7Ozk2q1Kow4ZFkWZY37QRXChYfhzmKxyNbWFtFolGg0SrlcJhAI4Pf7yeVy
      RCIR8e/rPgFsNhtut5vW1lby+Tw+n49YLCY8ZA8rExMTvPjiiyJ6UUvMZjMOhwOv10ssFmNg
      YEAUfQcCgQO75lQqFd5//316enrwer3odDpu377N4OAgCwsLnD9/nmq1KiyqakkkEsHj8eD1
      epFlmZmZGYLBIENDQ0Kl4mnRaDTodDqcTif/9E//xODgIDabjd7eXiKRCOFwWAgXtLa20tHR
      IaQ9674HSKVSlEolLBYLhUIBt9tNZ2cnXq+X48eP1zwOXSvUdeSzcLFUjQItFosQEVOVsx9Z
      v+67fXU9LEkSm5ubDA8Pk8lkaGxs/FRnxVqOTZblx8agrtmz2SxWq3Vf46pWq0QiETo6OsS4
      JEkilUqJL361WiWfzwtdWYvFglarPZyb4E/qOh5xxLPgif4Az5ovqgpxVDh/xLOm7nuALyuJ
      REJM0Frny6gbX/XhrCiKkIyMx+M1qT7LZDKiyqxcLhONRlEUhVQqRbFYRJblfa/JPw91LJlM
      hnQ6TbVaPXDpperSWSwWRalnoVAQm/hsNisS4x4VFjsUE2BpaYlyuUyxWKRYLBKLxZBl+TFt
      x8NEIpFgYWGBO3fu4HK5eP/992va/sTEhDi+VxSFe/fusbCwwMTEBH6/n83NzQO1L8sym5ub
      3L17F0VRcLvdeL1enE4n4+Pj3Lp1i+3tbTY3N2tuk+rxeHj77bcB+Pjjj0mlUgSDQeLxOKur
      q/tq8+7du6IQfn19nfHxcTKZDO+++y6xWIxisSg+r0AgQDQaFaIDh2IClMtlPB4Pa2trLC8v
      k8vlWFlZYWFhgdnZ2Xpf3q9gMBjI5XKEw2GOHz9e8zygQCDA+vq6KFt89dVXxSZudHT0wJEZ
      SZIwGAy0t7cDD+uy5+fnyeVynDlzBqvVisPhENaptaS3t5fe3l7gYQRwaWmJtrY2Zmdn951z
      pCa3ZbNZmpqaaGho4P79+5hMJmKxGFqtllQqhcvlor29XXgvQ51rgtX4r9FoJB6PC7M5u91O
      PB5Hp9PR0dFRz0v8VHQ6nXBU8fv9pFKpmkoj9vT0UK1WKRaLRCIRYrEYsViMnp4e7t27x8mT
      Jw/UvuoRduHCBVZXV9FqtVy4cAGj0cjCwgIWi4XZ2VlaWlpqXrgUDoeJxWIEAgGsViuZTAaf
      z8fp06f3LcGSTCaFWeHi4iJDQ0MMDg4SiUQwGAyiEF6v17O0tITFYvnl6Xq9s0Hj8ThNTU2k
      02kkScJkMmEwGCiXy+TzeYxG44FyxZ8VxWJRdRmpeduf5ZhS6xreQCBAZ2en6K9SqYj0gWfN
      oyHLgzrEPBry/DTK5fKvmCrWVRrxy+ADcMSvN2az+XCeAxxxxPPgUEgjAo9Fer4M1kmVSoXd
      3V12dnbI5/OsrKzU9MwikUjgdrvFMtHv9xOJRCiVSqysrBz4PVIURXgxKIpCqVQSjjQ7Ozsk
      EglhYFHrsxhVFl39ezQapVKpsL6+vu9xFQoF1tfXqVQqhEIhdnd3hdWuev1+vx+Px0M6nWZ3
      d1eEQg/FBFhYWCCbzZJMJnE6nSSTSRRFEfHcw4ZGo8FsNrOwsMD9+/cxm801/aLMzMw8lrq7
      tLTE/Pw8Y2NjYn90ENT0Z1XO0e/3MzExIbwCHjx4wO3btzEYDDXXPA2FQjx48AB4mMWpFuGr
      Y90Pd+/eJRAIUKlUyOfzrK6ucvPmTeE1AXD//n00Go0ov/xMo+x64PP5RHw7n8+zvr5ec3ue
      WqHRaIjFYly8eJFMJlOT2PyjDA0Nsbu7y+bmJoqioNPpMBqNopxwaWnpQO1LkoTX62V0dBRJ
      kkTOVWdnJ9vb24RCIQqFAh6PRzip1Iqenh46OztJJpM8ePCA3d1dIpEIkUhk3+N66aWXiMfj
      +P1+UQapWu/qdDoUReHcuXPcv38fo9GI2+3mhRdeAOo8AarVKnNzc9hsNrxeL6FQCK1Wi8Ph
      YGlp6cDhvmdJpVKhv7+foaEh4RZTK2KxGDqdjra2NuLxuNDrHBkZIZ/P43A4DtS+6mhTLBZ5
      8OABXq+XQqFANpultbWVy5cvc+rUKSRJqnkYWp1cpVKJ//yf/zPf+MY3uHr1KtVqdd99+Xw+
      ZFkWVkuA8JvW6XS43W5RYy3LsjiHgEOQDfppZLNZvF7vvj2jjvji/CY7xNTVKLvWhRZHHPG0
      6PX6+hllH8YcnyN+86h7TXC5XGZvb0/kpXwejxZU14tyuSwEl9ra2kin0zgcDjo7O2vS/u7u
      Lul0moGBAcxmMzMzM1itVqxWK263m+Hh4QPtOWRZZmpqCqvVysjICDs7O4RCIS5cuMDKygp2
      ux2NRkMwGOTChQs1PYnP5XIsLS1x6dIlNjc3yefzdHZ2EggEGB4e3pflbDQaZX5+nldeeYXN
      zU3K5TIdHR14PB7Onz+PxWLB5XJhMploa2tjbm7u8NQERyIRVlZWyOfz7O3tEQwGCQaDrK+v
      C233RCLBysoK4XCYiYkJIWtXL3Q6HUNDQ+Tzefr7+z/3GP5pWV1dpVwuYzabqVarZDIZwuEw
      TU1NHDt2jN3d3QO1L0kSFy5cEI47DoeD5uZm3G43c3NzWCwWuru7MZvNNZemVFXhdDodp06d
      Ym9vj7a2Nkql0r4V71ZXV7FarZhMJk6dOkUikWBzc5NTp06JcKckSQSDQe7cuUOxWBRCunWf
      AD6fD7PZjMfjEc7kqn+s3+9HURQSiQSZTIZyuUx7e3vdbVElSWJtbY0zZ85QqVSQZbmm6mmv
      v/46drud6elptFotjY2N7O7u4vV6cbvdXLp06UDtK4rCzZs3+epXv4okSY9JMP7oRz9ibm6O
      7e1t9Hr9YxGTWtDa2oper0eSJJxOJ8PDw+j1eiwWy75vbNeuXaNcLrO6usrk5CTnz5/n3Llz
      3Lt3T5wtqFmtqkm46h9W1wmgKAqtra1CDlENgzY3N7O7u0t3dzcLCwsipFUsFsnn88+sUONp
      aGtro62tjWKxyPnz52vatmq+d+bMGSKRCNVqlRdffBFJkrBaraL44yCooefbt2+LpDQ1Ft/V
      1YVWq6VcLtf8MDIcDqPT6YhGo1gsFo4dO4bL5aJcLtPd3b2vNj0eD7FYjGPHjomnVjqdprOz
      k6GhIRFiVxRFuOAMDQ0Bh9Qoe2tri0KhwOjo6HO8qt9M9uOschjZjz9AXaURjwwyjqg3BoPh
      KBv0iF8P9usRVvdn39bWFtlslrNnz/5KePOzTvfy+TyVSqUup5iFQkEkpjU1NZFMJoWLYy1Y
      WFhAlmWGhoawWCxMTk7S3NyMRqPB5/PR29srwni1YGZmhng8zquvvsqdO3c4fvw4JpOJnZ0d
      BgcHa7oRDofDTE9P8+abbzI9PQ3AwMAAq6urvPHGG/tqc2tri9XVVb72ta+xvr5OJpPhK1/5
      Cnfu3OHChQs0NzczNzeH1WoVpuyqI2XdJ4Df72d0dBS/308wGKS7uxuXy0VzczOxWIzTp0+z
      vb1NU1MT5XJZJDidPHmSra0todEvyzJ6vR5Zljl9+vQzvWbViWRiYoJyuSzcW2o1AcLhMFqt
      VmRIrq6ucunSJUZGRkilUjVPUVYdYpaWlnC73fT399PX14fL5ap5TbDVaqWxsZG9vT2KxSLh
      cJizZ88eKLKXSCTQ6XSiznl9fZ3t7e3H9ppq+Fij0ZBIJET5at3DoBcvXsTlcrG0tCROiLu6
      usjlcjgcDlpaWvB6vZTLZSRJ4tixY/T39ws9zkwmw/r6Orlcjng8XlONzidRKBS4ffs2V69e
      JZfLMTo6WpPIjMq5c+fEF7JUKvHNb34Tj8fD2NgYhUKB/v7+mvUFcPbsWZxOJy0tLXzve99j
      fX2ddDqNTqereTmqJElkMhksFouIomm12sdkWp6WgYEBtFoty8vLmEwm7HY7KysrBINBdnZ2
      yGQyVCoVMpkMiUSCK1euiM+r7nuA9fV1SqUSPT097Ozs0NfXx+TkJFevXqVYLIoLb2pqwmAw
      oNfrxVrP6XTS29tLNpulUCjQ1NS071Da01Aul/H5fOj1ekwmE/F4nP7+/gPVtD6K1+sVCsa5
      XE4UkOv1egqFAna7vaaKzYFAgGw2S19fH7u7u5jNZux2O1qttmZjUkmlUiQSCex2O5FIhMbG
      RpHF2dzcvK8DxXA4jNPp5PLly/h8PiH+WyqVkGWZXC5HpVKhWCxisViIRqN0dnbS1NR0+DbB
      1WqVcrl85BRzxDOnrtKIn5cM92UojTziy0/dNsFPU/6mOpUcJtR0bo1GU3MhX1UWRU0ZUNPH
      dTod1Wq1Jm40jyo/PypG/CzHpfb7yZCl6oJzEDcaNWJYrVZRFAWtVvvY9SuKIr5Hj75e9yiQ
      2+0mHA7T399Pa2urCFOpUtdarRaXy0VfX99jtjfPyr7ni1CpVBgbG6Ovr09oWra1te3L3eTT
      WFhYQFEUTpw4QWNjIz6fj/Hxcb7//e/zv//3/+ZHP/rRgZaIsizz9ttv89prr9Ha2sq9e/co
      FApcvXpVGEtYrVZkWebUqVM1i27Bwz2f6rDpdrs5c+YM3d3dvPfee7z00kv7ijrNz88TCAR4
      /fXX2draIhKJ0N/fTygUoquri4GBAcbHx2lsbESn0xGJRLDb7cAhiALFYjGuXr3K7u6uyPhc
      WVkhFouxvLzM8vIy4XCYe/fu4Xa7WVlZYXd3l/Hx8bppCxUKBRKJBIFAgFwuJzbEtWJnZ4do
      NEoul0OWZdbW1rDZbMzPzwsf34Og0Wh44YUXxGm8ekdeW1vDbrfT0tIinHtqnXp+6tQp0uk0
      NpuN0dFRKpUKi4uLQpxrP1gsFrLZLLIs09TUhMvl4vjx45TLZRHFOnfuHOVymWQyySuvvCIi
      TnWfAKoBBDx0Runo6KClpYVyuUxvby/FYhGbzYbZbCYUCgmv3JMnT9Zto6xKI8ZiMZESXSvz
      akB8CX0+n5hcGxsbGAwGIpGIkBXZL4qisL29zdbWFm63Wzy5+vv7+eCDD7Db7eRyuZqPC+DG
      jRs0NDSg0WjweDy43W6q1Soej2ffZuPq8mlra4t0Ok1vby8ffPCBUIJTs2g9Hg+KojAzMyN+
      t+7JcIVCAafTycjICNFoVDiGWK1WgsEgXV1d7O3todFo6OjoYHl5meHhYTQaDUaj8XlfOvDL
      ijadTieczxsaGmrqEqm6mMAv1+nqf9XXDtK+itPp/JW7pUqtx/XJvj+N/fSlSmza7XYRXPms
      8K06LqvVeniMso844nlT12zQI46oNxqNpj7SiGr0Zr9/HjWOrtefaDRKsVikXC4TiURq2nap
      VGJvb08UqmSzWVGYolbJ1eI9fDT0WCwWkSSJZDIpxpVIJB77N7X6o/aVTqfJZDJIkkShUDhQ
      X/F4XLSZSqWE9P6n9VssFn8Z7q3HBHiU69evk0wmmZubE7kaqkVPoVDA5/MJW5u9vT1h5Oxy
      uYSLjOoss99ckqelUCgQj8f5+OOP8Xg8+P1+FhcXa9b++Pg4yWSScrmMLMtMT0+TzWaZnp6m
      VCod2CZVlmV++tOfCn3Mzc1N3nnnHUqlEmNjY1y/fp2JiQmSyWTNrWp3d3f52c9+RrlcZnx8
      nA8//JBischbb731mHXR0/Dxxx8zNTVFNpsV0oter5e9vT2Wl5cBcLlcvPPOO8iyzLvvvovH
      4wEOwTlAV1cX29vbVCoVNjY2qFarGI1GWltbWV9fx2w2k0gkhFuKmqNis9m4f/++OBhKp9O8
      +uqrz8VLwGQykU6nyeVytLa2cvPmTb773e/WrP2WlhaWlpaQJEnkOk1PT1OtVonH43R2dh7I
      m1ij0fDqq6+KpejJkycJh8NEIhHOnj3Lzs4ONpuNlZUVrFbrF1bs+CL09/fj9XrFRr9SqfDh
      hx9iMBgIh8P7UocbHR3lxo0bpNNpDAYDfr+f1157jVu3bvH6669TLpe5fv06VquV9957D61W
      K8SA6z4B1Brgzc1N2trakGWZ48ePc+vWLU6cOEE+n6e7u5tisYiiKDQ2NlIoFEilUphMJorF
      Ina7nebm5ppbFT0JVbXZZrPhcrkYHR0lHo/X7MCoXC5jt9uRZZlIJILNZhPZsfl8/sB3ZdUX
      TKPREA6HsdvtIvX8wYMHWK1WzGYzRqOx5qnXoVBIOMQ0NjaSzWZ5+eWXCQQC+1bWiMfjwgYp
      k8nQ39/P9vY2IyMjZDIZAoEAv/3bvy2K8B99stU9GU517lCjQrIsY7FYRKgqFovR3Nz82BE9
      PMwqtNvtIm1Xq9U+17Coet2SJD2TVAg19QF+6aSi0Wgol8vodDokqTahyWAw+JiekeoQo/b7
      LOuFHx3XQVGlaZ4mlUOSpPpFgY4iQUfUG61WWz9pxKNzgCMOA3WPAsViMRFu+6Ic1FT5oCiK
      wuLiIsvLy2xtbXHjxo2aahUlk0k+/vhjEfpUozM+n4/r168fWBlPURTGxsaYm5sTDjS3bt2i
      UqkwPj7O/Pw8wWCQu3fv1nwPEA6HuX79OolEgsXFRZaWlohGo1y/fn3faReRSIT33nuPfD7P
      1NQUDx48IB6Pc+vWLXGjXV9fF7XP169fJxwOA4dgAgQCATKZDLu7uzidTrxeL36/n42NDba3
      t3G5XASDQWZmZlhcXCQUCjE1NcX29jbRaJS1tTX29vZYW1t7boK7qoKdw+EgGAxy9uxZUZtc
      CyYmJujv78dkMokvazKZZGdnh7a2Nra3tw/cx/DwMHt7e8BDacFz586xvLzM6dOn8Xq9bG5u
      Mjg4KMKFtcJoNDIyMsLm5ibVapVoNIrBYGB4eHjfMozLy8t0dnai1+sZHh4mHo+ztLTEhQsX
      hFZoKpUilUqxurrKmTNnRMCk7hNAr9fT1dWF3+8XT4NQKMTAwACRSIRQKEQulxPZg36/n+7u
      bsrlMpubm8LfqrGxseble09C3RxOTExw5swZotHogV1bHiWfz6PVapmdnSWfz5NKpQiHw1Qq
      FaGQdxAUReHWrVtcunRJPHn1ej2VSoWJiQlefvllcXhUa8LhMG63m5GREVHXEAwG2d3d3beY
      wUsvvSSyhzOZjIgUqtdfqVTEeM6fP0+xWGRqago4BBNAo9GwurrK+fPnaWpqoqmpCZvNhs/n
      w2az0dLSgs1mo6mpCUmSRL64oih0d3djMplobW0V+d3Pg9bWVhobG+no6CAYDBIIBGoqU3Lt
      2jW2trY4efIk8Xic73znO7z44ov09vY+5nK+X9QgxOrqKjMzMwwNDTE1NcXQ0BC5XI7t7W2O
      HTvGysoKPT09NRrVQ/b29sjlckSjUSEAnM/nKZVKeL3efbUZjUaFWIDX60Wj0XDmzBkmJibE
      e2Y0GtHpdBQKBba3t4X5ylEy3G84tTberhfFYvGpw+AWi6V+NcFHRtmHh1+Xz2I/46j7QdgR
      R9SC/dSNS5IkaX/84x//+Nlc0udTrVZxOp2EQiFRr1mpVCgUCuKxLMsyfr+/pgYU++XWrVvc
      vHkTo9HIhx9+iNvtJpvN8tFHHzE4OFizk+ipqSkmJydpaWnBbDbz93//96ytrQFw7949zGbz
      vqJO8/PzvP/++xw/fpyf/vSnWK1W7HY74+PjTExM4HA4+Id/+AcymQzBYJDr168LV5Va4fF4
      +OlPf8rly5f527/9W0KhEIODg/zt3/4tjY2N+x7X3/3d33H69Gk++ugj5ufnKRQKwiu4o6OD
      d955h/n5eQwGA++++y4dHR386Z/+6X+p6yZYo9Fgs9lobGwkHA4zOzvL2toad+7cwePxMDMz
      g9/vJ5VK1fMyBa+//jrVapWmpiaRlTo+Ps63vvUtYbhQC9SsT6vViiRJjIyMEAgERMbsfnOe
      1HCt6gypqqPdv39fpJ643W70er3wI6i10JjZbEaj0SDLstiwLi4u4vP5RFj2aVGFw0wmE1//
      +teJx+OcPXsWvV5PX18f+XyejY0NIpEIDx48YGhoiA8++ACocxTo0VBbOp1maGgIrVbLmTNn
      RISg1hY9ByEWi+FwONDpdPT19YmDqq2trZrWJ7/++uvCyyocDtPc3Ewul+PKlSucPn2asbGx
      fbX70UcfCf1MvV5PKpVic3OT73znO7S2tnLjxg3+1b/6V6ytrQkDi1o/eU0mkwjtfuc738Hl
      cjE3N0c2m9239dOpU6colUp89NFH/Lf/9t944403RGSpubmZUCjEm2++STqd5l/8i39BMBgU
      T7W6Z4OqCUyqg3d/fz+BQAC9Xk+5XKavr++pjQ+eFZlMhtdeew2bzUZHRwdnzpzB4XAwNze3
      b2XjT0OdTC+88ALBYJCtrS1++7d/G5vNhsfj4etf//q+2nU4HAQCAVFPUCgU2Nra4vTp05hM
      Jl555RXu37/Pa6+9Rrlc5pvf/GbNxqTi8Xjo6+sjEomQTCZ56aWXOHPmDIFAYN/nOM3NzbS3
      t/Pmm29isVjweDw0NjbyrW99C1mWyWaz5PN5fvCDH1Aul2lsbBTv4dEm+Decw+C6WQv24xAj
      SY9II5ZKpefmvqgqnx1xRL351CeAWhNqNpvZ29vDbreTzWaFFEkikTiwZEhXfwAAEyNJREFU
      T+3RQdgRtWQ/B3pPPAj72c9+htvt5uTJk0QiEYaGhkilUrjdbr7yla+wvLzMiy++WDMjClXJ
      68tCpVLhF7/4BT09PRiNRoLBIFeuXKnZhvHu3bv/X3tn+tNWdr/xj40XbMJiG0MCxJmBQEIg
      wxIlE006bTRqpUiVRqrU/in9O6q+7X9QaVopUZUpSZMQGjZ7wmYwm4MNeAcb78u1ff17Ed2j
      yWxtzJ0x0x+fVwmCc2y4x/ee73m+z4MkSYyPj2OxWJiamsJqtdLZ2YnP52N8fPzUH0APHz7k
      008/pbOzk/n5eeLxOGNjY7jdboxGIx0dHUQiET755JNTtV9+k0AggNPp5PPPP+fLL79Eq9Vy
      5coVDg8PGRsbq6vqtLy8jM/n48GDB7jdbkKhEOPj42xvb/PgwQPgbdfY3Nwct27dwuVy8fnn
      nwPfswkeHR2lWq1iMpn43e9+x8uXL+no6GBkZIRLly6xurqqWio6IHKA0+k0HR0dFAoFrFYr
      RqORZDKJXq8nGAzS19dHKpXCaDRiMplwOBwNOcaXJElc7B6Ph4sXL5LNZlVbAO3t7eTzeXQ6
      HbVajebmZjQaDW63m+7ublKp1KkWgEaj4c6dO6J7qlQqCX3ORx99xMHBAZVKhXv37nF0dKTq
      Aujt7RUXeS6XE64X9+/fx+v11rUAFAOxcrlMV1eXKKYoZdVqtcrKygpdXV10d3e/E/n0nbuf
      R48eiUbohw8fYrVacTqdNDc38+zZM+x2+6n9KeHtXiCbzSLLslBYajQarl+/TjabJZVKkUql
      yOVyGI1GKpUKY2Njov+zURoWxaUuFovR09NDZ2en0JergclkwmQy4fP5SCQSdHd3k0gk6Onp
      wW63q9IPEQqFCIVCQmU6OjpKsVhkd3eXVCpFsVgUTfFqkkwmicVihMNhenp6sNlslMtlPB5P
      3QeJiiDS5/MJwWQ4HCYajXJ8fEwoFMJmsxEOh0kkEuLr8F9UgSRJUl1mrOwBZFkmFothsVhI
      pVI0NTXR0tIiJL+JRAKz2SxMXFtbWzEajQQCAfR6vap3ofehVqsJtWpLSwv7+/t8+OGHqsmH
      s9msyO1SaubNzc10dHTg8/n44IMPTlW5qdVqvHnzBo1GQ7Vapa+vj6OjIy5fvkw8HsdoNGI0
      Gjk6OqK3t1dVWbRib2O1WqlUKmi1Wjo6OggGgzgcjrrmKpfLbG9vc+PGDaLRKBqNBqPRSDwe
      F8lCyl21UqkQi8VobW2lv7+/cdaIpxFg5XI5zGbzj6JXP+f/D2az+exFJJ1zzk+FRqNpjDXi
      16lWq1QqFeES8XNJkFcC/Gq1muqOdIVCgWQyKX4nSoHgx5jrm/MpwXKVSkXMqSa1Wo18Pi/m
      LRQKlEolYQVZD0qWgRKIl8lkqFQqpFIp0fyTzWbJZrPC8lG5zhq+ANbX14lEIlSrVbHxKhQK
      IiyvXC6LRSJJkrBNVC5AJRLnp0SSJKanp9ne3ubg4IBHjx6pOn44HBbCQFmWhQVjOBzmiy++
      UHUugGAwyMLCAj6fj7/+9a8kk0levXrF/Py86gYEh4eHPHz4kHK5zIsXL/jyyy+Jx+N89dVX
      bG9v1zXmq1evWFpaolQq4fF4+Ne//sXMzIwoj8LbJKKHDx+STCbZ3NzE5XIBZ0ALlEql0Gq1
      HB0dIcsyJycnIqsqGAwyOTkpojXb2tpYX1/nww8/RKfTUSgUMJvNDA4O/qSmWAaDgTt37hAK
      hbhy5Urdf7jv48KFC4RCIYaHh4G3Gp5QKMSNGzfqsg78T7S3txONRhkfH2dsbExsIsfHx4lG
      o6oWGxwOB4eHh2QyGQYHB4lGo1gsFpLJZN1tpUNDQ7x48YJ4PE5LSws2m422tjbS6TSJRIL+
      /n5MJhNNTU0inlWZq+F3ALvdzs2bN8lkMuRyOZqamkQ5dGhoCKvVSjgcFuUzu93OhQsXuHHj
      BjabjUwm85MHZRSLRV6+fMny8jJra2usr6+rqlo9ODjAarWSSCTY398nnU6Ty+XY3t5mfX29
      7iSV7yMajQqHi+XlZZxOJ6VSiSdPnpzqvOG72NnZYWVlhUQiwebmJuFwmEAgQEtLi3g0el9y
      uRx6vZ58Ps+TJ0+oVquYzWaOj4+x2Wysr6+zv79PU1MTBwcHmEwm8Sh5ZjbBX08P/Ga6X7FY
      xGQyUSqVMBgMovqzt7eHxWJR9aDmnJ8nSkLM+9BQa0Q1DtLOOec06PX6xlkj/lQmVuec80M0
      fA+gHIhJkvS9dwWljHUWUYIecrmcamMmEglcLpcIDNze3iYSiZBOp1lcXFRdSl6r1fD5fORy
      OZxOJ+vr6ySTSVwu14/qGLG1tYXP50OSJFwul+iwe1/y+Tyzs7NIksTGxgYej4dSqcTS0pIw
      /lISY/L5PAsLC8LKsuELwOl0ijKY3+8XUZfJZJJoNEogECCTyeByuc5Ue6SC0+kUBl1qUSqV
      sNlsuN1uUQ3b3d0ln8/jcDhECU8t9vb28Pl8mEwmRkZGCAaDFItFWltbCYfDqs6lUC6XCQQC
      bGxs8NVXXwkDgHqYnZ2lra0NrVaLw+Fgf3+fhYUFurq6hJnA5uYmKysrrKyscPXqVSFcbPgC
      6OzsJBQKodPpRH1/fX2dtbU1mpubyefzmEwmLBYLBwcHjX653yIUCpFKpVhbW1NtzEqlQjQa
      ZXR0FK1Wi06nE+99d3eX27dvqzYXwMDAgGhWPzw8ZGRkhHw+TygUekc5qSaSJCFJErVajUwm
      Q61WE3FG78unn36K1+sVfrFarZZarYbFYhHXlM/no1ar0d/fTyAQ4PXr18AZWACK84FSay4W
      ixiNRhwOB2azmXQ6TT6fx2Kx0Nra2uBX+21u3bpFOBxWtVaueIIeHx8Lc9qhoSHW1taQJEn1
      O6HH4+HNmzcEg0FyuRy9vb34fD6RwfZjoNfrMRqNtLa2MjQ0xO7ubt3VvFAohEajEdnSWq0W
      u93O9PQ0NpsNv9/PZ599Rm9vL5VKhXg8zqVLl4AzaI34zd7OrycHnnPO9/H1YPH/lobmBP9c
      ND/n/O9iMBjO1aDn/P/lTKhBJUn6TsGVLMtkMhlCoVADXtUPI8sybrebo6MjdnZ2ePr0ad3H
      +N9FrVZjenpa/PvFixcsLCywtrbG1NQUXq9XtbkUZmZmkCSJxcVFPB4PXq+XqakpVcu78NYA
      bWFhAVmWmZubw+l0Aghv/3qIRqM8evSIQqHA4uIiMzMzInsa3v4OV1dXmZ6eJpPJMDU1JeZq
      +AKIRCKsr69TKBRwuVz4/X4RhK1UIs4asiyLXNuenh5aW1tF7qwa+Hw+PB6P+P/w8DCxWIyb
      N29is9lUl37s7+/z5s0bYTEYDofp7e3FYDDUXZv/PsrlsugFViwfY7EYe3t7dc+1sbFBd3c3
      er2ea9eukUgkvmXzMzAwwPHxMUtLS3z22WfCyrLhC0BJednf38dms5HL5Tg8PKSvr+/MHn7p
      dDqRCawY+ap5oShWi4lEgmq1Klr5ZFmuS/Pyn9jd3cVoNJJKpUSxoVwu09LSovodwGq10tzc
      LBzbzGYzy8vLQrxWD3fv3iWZTLK2tkahUKC9vR2TySQipiqVCq9fv+bu3btoNJp35PMNl0MP
      Dg5y8eJF9vb2xIXf39+PTqejvb39TIY3FItF5ufnAYSE+86dO6qN/5vf/IatrS3a2toIh8P4
      /X66u7s5OTlhYmJC9YrYr3/9a3w+Hz09Pbx+/Vo0kCeTSdWsbxR2dnaIRCLCrLa1tZW7d+9y
      cnJStwVmIpGgUCjQ39/P5uYmOp2OaDTKwcGBON/IZDJsb28zOTnJ06dPuXfvHnCG1KD5fJ5i
      sfiTRh2d879DPQkxDVODyrJ8LoY7p+GYTKbGqEGB98oFPuec/0Q9CTEADUmI+fpB2N7eHm1t
      bSIhUE1R2Y+FLMs8e/aMdDotgisA1bqnlHCQzs5O9Ho9z58/x+/3C7VmT0/PqbyaZFnm8ePH
      dHV1iY3i3/72N/r7+/n3v/9NIpEgmUwyOzsr/IjUIhgMMjc3x8DAAHNzcwSDQZGFbDab65K7
      7O7u8vLlS65cuYLL5WJjYwNZlllZWRGbbqfTSaFQQKPRMD09TXt7O3/+858bmxADb42SwuEw
      +/v7xGIx3G43Xq+Xg4MD/H5/o1/ed6LU/C9cuMDExAQGg4GrV6+qNv7i4iLNzc1Uq1W0Wi2/
      +MUvqNVqBAIBbty4ITbg9aLRaBgbGxNS583NTfR6PfF4nEQiIUJK7Ha76j3IFy9eFPaXSg5E
      V1cXhUKh7qcCpS1Wr9dz69YtmpqaCIVCQmcGMDIyQjabZWlp6R3dVsOrQBaLhcPDQ9rb2ymX
      y2g0Go6OjjAajWf2bqBECDmdTnp7e4V3p1rY7XZGR0dZX1/no48+4vHjx/z+97+nUqmwt7cn
      hFz18nVtVT6fJ5/PUy6XkSSJS5cuUSwWSaVS6HQ6TCaTGm9JoFR6FGc/RRd2//59dnZ26Ovr
      e+8xFT/RlZUVgsEgDx48EO4hPp+PwcFB8b0mk4mBgQERbN5wMVw6naZUKmEymSiXy0QiEVpa
      WkQdulH2hz+ELMvik0RxUlazXFssFllcXOTevXvE43HcbjdarZZr164RjUZPXQpVrFa0Wi3t
      7e1MTEwIG8E3b95gMBiEObHaC8Dr9eL3+xkYGBCdgRaLha2tLT7++OO6PvRyuRzz8/Pcv38f
      l8tFuVxmaGgIr9fL7du3hRdpNpvl448/ZmlpicnJSbq6uhpXBfqhfIBarUY8Hlc1nfCc76be
      zeNZo56km4aqQc85p9FotdrGlEH/Fz5xzjlb1Oti3vBNMLzVvgwMDHzr62f59ry1tYXb7cZu
      tyNJErdu3VKtDFqpVPjTn/7EH//4R6rVKn//+9+xWCy0tbURj8cZHx8/1UZYlmW++OIL7t+/
      T1dXF2traxweHjI4OMjm5uY7CTG//OUvVT2dPzg4YH5+nj/84Q/CenFycpK1tTWGh4ff2bD+
      t7hcLnw+H7/97W9ZWloiGo0yPDzM5uYmDoeD27dv8+zZM05OTrh79y4ej0f8rc7EAjg5OcHn
      8wlTU0mSaG1tJZ1Oc+HCBW7evNnol/gO+XyeSCRCa2srVquVbDarapTrwsIC/f39oiyo0WiI
      RCL09PRQLpdPPZdGo+GTTz4R4ytRWJVKhcnJSfx+P7Is86tf/YpYLKbqArh8+TKHh4dotVps
      NhuRSITu7m6KxWLdZxvt7e1iQ3316lVKpZJQ0I6Pj1MsFrHb7TQ3N9Pb28ubN2+EmLGh5wCy
      LJNOp9HpdKTTaeLxOLIsc/PmTfL5vAjNOGvIsiw8Jg0Gg8g4Vgu73S6cMeLxONevX6erqwu9
      Xk9bWxt7e3unnkORnYfDYf75z39isViw2+14PB6SySTFYpHV1VXV+7Dj8TihUEjYO5pMJvEe
      61WDKlWrg4MDHj9+jMPhEFFaWq2W4+NjYrEYkUiEubk5tFqtaJ9sqBhOSYixWq0iz0lJgZEk
      SSSjqJ1WrhbZbBaNRsPJyUld9ev/NLbZbKZQKAgJtGIi3NfXd+qEGL/fj0ajoVQqibuYzWZD
      kiSMRiMGg0E0j6v5GJpIJEilUuIwTDnvOT4+pq+vr64PvHK5zM7ODsPDw4RCIarVKt3d3Wg0
      GvR6vZDVl8tlDAYDx8fHdHR0YLVaG1cFOq8EndNompqaGmeNeJ4TfM5ZoOFaIHhXGfpzSJCv
      1Wokk0lKpRLFYpGTkxNVxy8WixwfHwvJuGIiJUkSiUTi1HfPWq1GKpV6p+Muk8mIjrNcLieS
      VH6MhBhl3kwmQzqdplwuE4/H6zZMrlQq4tEnl8uJx2klaAXe5lDE4/F3EmrgjCyA7e1tkQLj
      9XpF9NBZtU5JJpM4nU7m5+eZmZnB7XarugleWFggEAhQKpWo1WosLy+ztLTE7OwsW1tb7Ozs
      nGp8xW90ZmaGWq1GqVTiL3/5C9lsllAoxPPnz1lYWGB1dVX1hJhAIMDU1BSyLLO3t8fTp09Z
      XFxkY2Oj7mb/+fl5PB4P5XIZr9fLq1evyGQy/OMf/xAb6ydPnhAKhYhEIjx9+lT87JlYAMVi
      Eb/fj9vtBt5GBAWDwR/F/UAN9Ho9Wq2WaDSKzWZDp9OpGlrxwQcfUCwWSafTItQa3sqtDQaD
      cIurFyUeVYl2nZ2dZXx8XNyJlcrWxMSE6k3xly9fpre3F61Wi9FopKenRyhR691sX7t2jZOT
      E46PjzEYDNhsNtbW1hgYGBB30evXr+P3+7l06RIOh0P8bEMXQLVaJRQKYTKZSCaTHB0dodVq
      6enpwel0fufh2FnAYDCg0+m4fPkyHR0dZLNZRkdHVRs/mUySSCQoFovs7+/z/Plz3G43FouF
      eDzOxMTEqcavVqssLi6SSqXY2dlhZGREPF4p3pqVSoXnz5+rnhDj9Xpxu91sbW0xMzMDvP1A
      OU0gdzabRa/XI0kSMzMzlMtlHA6HaLzf3Nwkk8kgSRLhcJjV1VXhutFwMVw+n8dsNiNJEjqd
      Dq1WSzabJRAIqN6Qfc63icVi4lDo50wymXzvxp2WlhbN/wE3vIyQzGkOjQAAAABJRU5ErkJg
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
